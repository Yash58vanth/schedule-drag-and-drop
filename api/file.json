{
	"id": 0,
	"name": "Syncfusion React",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 1382,
			"name": "\"index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/index.ts",
			"children": [
				{
					"id": 1397,
					"name": "ActionEventArgs",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 301
				},
				{
					"id": 1400,
					"name": "CalendarType",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 4
				},
				{
					"id": 1392,
					"name": "CellClickEvent",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 280
				},
				{
					"id": 1385,
					"name": "DragEventArgs",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 140
				},
				{
					"id": 1393,
					"name": "EventClickEvent",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 287
				},
				{
					"id": 1391,
					"name": "EventModel",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 268
				},
				{
					"id": 1396,
					"name": "EventRenderedArgs",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 297
				},
				{
					"id": 1388,
					"name": "EventSettings",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 226
				},
				{
					"id": 1387,
					"name": "MonthViewProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 207
				},
				{
					"id": 1394,
					"name": "MoreClickEvent",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 291
				},
				{
					"id": 1383,
					"name": "ScheduleCommonProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 6
				},
				{
					"id": 1384,
					"name": "ScheduleProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 33
				},
				{
					"id": 1399,
					"name": "SpannedEventPlacement",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 3
				},
				{
					"id": 1389,
					"name": "TimeScaleModel",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 252
				},
				{
					"id": 1395,
					"name": "TimeSlotTemplateProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 294
				},
				{
					"id": 1398,
					"name": "View",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 2
				},
				{
					"id": 1386,
					"name": "ViewSpecificProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 155
				},
				{
					"id": 1390,
					"name": "WorkHoursModel",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 264
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						1397,
						1400,
						1392,
						1385,
						1393,
						1391,
						1396,
						1388,
						1387,
						1394,
						1383,
						1384,
						1399,
						1389,
						1395,
						1398,
						1386,
						1390
					]
				}
			],
			"sources": [
				{
					"fileName": "src/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1363,
			"name": "\"index.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/index.d.ts",
			"children": [
				{
					"id": 1378,
					"name": "ActionEventArgs",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 301
				},
				{
					"id": 1381,
					"name": "CalendarType",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 4
				},
				{
					"id": 1373,
					"name": "CellClickEvent",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 280
				},
				{
					"id": 1366,
					"name": "DragEventArgs",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 140
				},
				{
					"id": 1374,
					"name": "EventClickEvent",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 287
				},
				{
					"id": 1372,
					"name": "EventModel",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 268
				},
				{
					"id": 1377,
					"name": "EventRenderedArgs",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 297
				},
				{
					"id": 1369,
					"name": "EventSettings",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 226
				},
				{
					"id": 1368,
					"name": "MonthViewProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 207
				},
				{
					"id": 1375,
					"name": "MoreClickEvent",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 291
				},
				{
					"id": 1364,
					"name": "ScheduleCommonProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 6
				},
				{
					"id": 1365,
					"name": "ScheduleProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 33
				},
				{
					"id": 1380,
					"name": "SpannedEventPlacement",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 3
				},
				{
					"id": 1370,
					"name": "TimeScaleModel",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 252
				},
				{
					"id": 1376,
					"name": "TimeSlotTemplateProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 294
				},
				{
					"id": 1379,
					"name": "View",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 2
				},
				{
					"id": 1367,
					"name": "ViewSpecificProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 155
				},
				{
					"id": 1371,
					"name": "WorkHoursModel",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 264
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						1378,
						1381,
						1373,
						1366,
						1374,
						1372,
						1377,
						1369,
						1368,
						1375,
						1364,
						1365,
						1380,
						1370,
						1376,
						1379,
						1367,
						1371
					]
				}
			],
			"sources": [
				{
					"fileName": "src/index.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 355,
			"name": "\"schedule/common/constants\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/common/constants.ts",
			"children": [
				{
					"id": 356,
					"name": "CSS_CLASSES",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "CSS class constants for the quick popup components"
					},
					"children": [
						{
							"id": 357,
							"name": "ALL_DAY_APPOINTMENT_SECTION",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 5,
									"character": 31
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-all-day-appointment-section\""
						},
						{
							"id": 358,
							"name": "ALL_DAY_CELL",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 6,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-all-day-cell\""
						},
						{
							"id": 359,
							"name": "APPOINTMENT",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 7,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-appointment\""
						},
						{
							"id": 360,
							"name": "APPOINTMENT_COLLAPSE",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 8,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-appointment-collapse\""
						},
						{
							"id": 361,
							"name": "APPOINTMENT_DETAILS",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 9,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-appointment-details\""
						},
						{
							"id": 362,
							"name": "APPOINTMENT_EXPAND",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 10,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-appointment-expand\""
						},
						{
							"id": 363,
							"name": "APPOINTMENT_WRAPPER",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 11,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-appointment-wrapper\""
						},
						{
							"id": 365,
							"name": "BLOCK_APPOINTMENT",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 13,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-block-appointment\""
						},
						{
							"id": 364,
							"name": "BLOCK_INDICATOR",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 12,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-block-indicator\""
						},
						{
							"id": 366,
							"name": "CALENDAR_POPUP_CONTAINER",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 14,
									"character": 28
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-calendar-popup-container\""
						},
						{
							"id": 367,
							"name": "CELL_POPUP",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 15,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-cell-popup\""
						},
						{
							"id": 368,
							"name": "CELL_SUBJECT",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 16,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-cell-subject\""
						},
						{
							"id": 369,
							"name": "CELL_TIME",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 17,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-cell-time\""
						},
						{
							"id": 370,
							"name": "CONTENT_RIGHT",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 18,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-content-end sf-content-right\""
						},
						{
							"id": 371,
							"name": "CONTENT_SECTION",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 19,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-content-section\""
						},
						{
							"id": 372,
							"name": "CONTENT_TABLE",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 20,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-content-table\""
						},
						{
							"id": 373,
							"name": "CONTENT_WRAP",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 21,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-content-wrap\""
						},
						{
							"id": 374,
							"name": "CONTROL",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 22,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-control\""
						},
						{
							"id": 375,
							"name": "CURRENT_TIME",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 23,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-current-time\""
						},
						{
							"id": 376,
							"name": "CURRENT_TIMELINE",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 24,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-current-timeline\""
						},
						{
							"id": 377,
							"name": "CUSTOM_WEEKS",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 25,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-custom-weeks\""
						},
						{
							"id": 380,
							"name": "DATEPICKER_BUTTON",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 28,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-datepicker-button\""
						},
						{
							"id": 378,
							"name": "DATE_HEADER",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 26,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-date-header\""
						},
						{
							"id": 379,
							"name": "DATE_HEADER_CONTAINER",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 27,
									"character": 25
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-date-header-container\""
						},
						{
							"id": 381,
							"name": "DAY_VIEW",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 29,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-day-view\""
						},
						{
							"id": 382,
							"name": "DAY_WRAPPER",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 30,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-day-wrapper\""
						},
						{
							"id": 383,
							"name": "DELETE_EVENT",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 31,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-delete-event\""
						},
						{
							"id": 384,
							"name": "DESCRIPTION",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 32,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-description\""
						},
						{
							"id": 385,
							"name": "DISABLE",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 33,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-disable\""
						},
						{
							"id": 386,
							"name": "DISPLAY_BLOCK",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 34,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-display-block\""
						},
						{
							"id": 387,
							"name": "DISPLAY_FLEX",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 35,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-display-flex\""
						},
						{
							"id": 388,
							"name": "DLG_CONTENT",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 36,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-dlg-content\""
						},
						{
							"id": 389,
							"name": "DLG_FOOTER",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 37,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-dlg-footer\""
						},
						{
							"id": 390,
							"name": "DLG_HEADER",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 38,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-dlg-header\""
						},
						{
							"id": 391,
							"name": "DOWN_ARROW_ICON",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 39,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-down-icon\""
						},
						{
							"id": 392,
							"name": "DRAGGING",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 40,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-dragging\""
						},
						{
							"id": 394,
							"name": "EDIT_EVENT",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 42,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-edit-event\""
						},
						{
							"id": 395,
							"name": "ELLIPSIS",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 43,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-ellipsis\""
						},
						{
							"id": 393,
							"name": "EVENT_CLONE",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 41,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-event-clone\""
						},
						{
							"id": 396,
							"name": "EVENT_CONTAINER",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 44,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-event-container\""
						},
						{
							"id": 397,
							"name": "EVENT_LOCATION",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 45,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-event-location\""
						},
						{
							"id": 398,
							"name": "EVENT_POPUP",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 46,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-event-popup\""
						},
						{
							"id": 399,
							"name": "EVENT_TIME",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 47,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-event-time\""
						},
						{
							"id": 400,
							"name": "FLAT",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 48,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-flat\""
						},
						{
							"id": 401,
							"name": "HEADER_DATE",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 49,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-header-date\""
						},
						{
							"id": 402,
							"name": "HEADER_DAY",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 50,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-header-day\""
						},
						{
							"id": 403,
							"name": "HEADER_ROW",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 51,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-header-row\""
						},
						{
							"id": 404,
							"name": "HEADER_SECTION",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 52,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-header-section\""
						},
						{
							"id": 405,
							"name": "HIDE_CHILDREN",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 53,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-hide-children\""
						},
						{
							"id": 406,
							"name": "ICON",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 54,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-icon\""
						},
						{
							"id": 407,
							"name": "ICONS",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 55,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-icons\""
						},
						{
							"id": 408,
							"name": "ICON_SIZE",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 56,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-icon-size\""
						},
						{
							"id": 409,
							"name": "INDICATOR",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 57,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-indicator\""
						},
						{
							"id": 410,
							"name": "LEFT_ARROW_ICON",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 58,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-left-icon\""
						},
						{
							"id": 411,
							"name": "LEFT_INDENT",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 59,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-left-indent\""
						},
						{
							"id": 412,
							"name": "LINK",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 60,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-link\""
						},
						{
							"id": 413,
							"name": "LOCATION",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 61,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-location\""
						},
						{
							"id": 414,
							"name": "MAIN_SCROLL_CONTAINER",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 62,
									"character": 25
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-main-scroll-container\""
						},
						{
							"id": 415,
							"name": "MONTH_VIEW",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 63,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-month-view\""
						},
						{
							"id": 416,
							"name": "MORE_EVENT_CLOSE",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 64,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-more-event-close\""
						},
						{
							"id": 417,
							"name": "MORE_EVENT_CONTENT",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 65,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-more-event-content\""
						},
						{
							"id": 418,
							"name": "MORE_EVENT_DATE_HEADER",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 66,
									"character": 26
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-more-event-date-header\""
						},
						{
							"id": 419,
							"name": "MORE_EVENT_HEADER",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 67,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-more-event-header\""
						},
						{
							"id": 420,
							"name": "MORE_EVENT_HEADER_DATE",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 68,
									"character": 26
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-more-event-header-date\""
						},
						{
							"id": 421,
							"name": "MORE_EVENT_HEADER_DAY",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 69,
									"character": 25
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-more-event-header-day\""
						},
						{
							"id": 422,
							"name": "MORE_EVENT_POPUP",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 70,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-more-event-popup\""
						},
						{
							"id": 423,
							"name": "MORE_EVENT_WRAPPER",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 71,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-more-event-wrapper\""
						},
						{
							"id": 424,
							"name": "MORE_INDICATOR",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 72,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-more-indicator\""
						},
						{
							"id": 425,
							"name": "MORE_POPUP_WRAPPER",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 73,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-more-popup-wrapper\""
						},
						{
							"id": 426,
							"name": "NEXT_ICON",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 74,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-next-icon\""
						},
						{
							"id": 427,
							"name": "NO_POINTER",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 75,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-no-pointer\""
						},
						{
							"id": 428,
							"name": "OTHER_MONTH",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 76,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-other-month\""
						},
						{
							"id": 429,
							"name": "POPUP_CELL_HEADER",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 77,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-popup-cell-header\""
						},
						{
							"id": 430,
							"name": "POPUP_CLOSE",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 78,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-popup-close\""
						},
						{
							"id": 431,
							"name": "POPUP_CONTENT",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 79,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-quickinfo-popup-content\""
						},
						{
							"id": 432,
							"name": "POPUP_DESCRIPTION_TEXT",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 80,
									"character": 26
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-popup-description-text\""
						},
						{
							"id": 433,
							"name": "POPUP_FOOTER",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 81,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-quickinfo-popup-footer\""
						},
						{
							"id": 434,
							"name": "POPUP_HEADER",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 82,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-quickinfo-popup-header\""
						},
						{
							"id": 435,
							"name": "POPUP_HEADER_WRAP",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 83,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-header-icon-wrapper\""
						},
						{
							"id": 436,
							"name": "POPUP_ICON",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 84,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-popup-icon\""
						},
						{
							"id": 437,
							"name": "POPUP_INPUT_WRAP",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 85,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-input-wrap\""
						},
						{
							"id": 438,
							"name": "POPUP_LOCATION_TEXT",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 86,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-popup-location-text\""
						},
						{
							"id": 439,
							"name": "POPUP_MORE_DETAILS",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 87,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-popup-more-details\""
						},
						{
							"id": 440,
							"name": "POPUP_TIME_TEXT",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 88,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-popup-time-text\""
						},
						{
							"id": 441,
							"name": "POPUP_TITLE",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 89,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-popup-title\""
						},
						{
							"id": 442,
							"name": "POPUP_WRAPPER",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 90,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-quickinfo-popup-wrapper\""
						},
						{
							"id": 443,
							"name": "POSITION_ABSOLUTE",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 91,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-pos-absolute\""
						},
						{
							"id": 444,
							"name": "PREVIOUS_ICON",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 92,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-previous-icon\""
						},
						{
							"id": 445,
							"name": "PREVIOUS_TIMELINE",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 93,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-previous-timeline\""
						},
						{
							"id": 446,
							"name": "QUICK_ALERT_CANCEL",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 94,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-quick-alertcancel\""
						},
						{
							"id": 447,
							"name": "QUICK_ALERT_FOLLOWING",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 95,
									"character": 25
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-quick-alertfollowing\""
						},
						{
							"id": 448,
							"name": "QUICK_ALERT_OK",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 96,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-quick-alertok\""
						},
						{
							"id": 449,
							"name": "QUICK_DIALOG",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 97,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-quick-dialog\""
						},
						{
							"id": 450,
							"name": "QUICK_DIALOG_CANCEL",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 98,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-quick-dialog-cancel\""
						},
						{
							"id": 451,
							"name": "QUICK_INFO_WRAPPER",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 99,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-quick-info-wrapper\""
						},
						{
							"id": 452,
							"name": "RIGHT_ARROW_ICON",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 100,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-right-icon\""
						},
						{
							"id": 453,
							"name": "RIGHT_SECTION",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 101,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-right-section\""
						},
						{
							"id": 454,
							"name": "ROUND",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 102,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-round\""
						},
						{
							"id": 455,
							"name": "RTL",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 103,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-rtl\""
						},
						{
							"id": 456,
							"name": "SAVE_EVENT",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 104,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-save-event\""
						},
						{
							"id": 457,
							"name": "SCHEDULE",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 105,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-schedule\""
						},
						{
							"id": 458,
							"name": "SCHEDULE_CALENDAR",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 106,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-schedule-calendar\""
						},
						{
							"id": 459,
							"name": "SCHEDULE_TABLE",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 107,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-schedule-table\""
						},
						{
							"id": 460,
							"name": "SCHEDULE_TOOLBAR_CONTAINER",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 108,
									"character": 30
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-schedule-toolbar-container\""
						},
						{
							"id": 461,
							"name": "SELECTED_CELL",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 109,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-selected-cell\""
						},
						{
							"id": 462,
							"name": "STICKY_HEADER",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 110,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-sticky-header\""
						},
						{
							"id": 463,
							"name": "SUBJECT",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 111,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-subject\""
						},
						{
							"id": 464,
							"name": "TABLE_CONTAINER",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 112,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-table-container\""
						},
						{
							"id": 465,
							"name": "TABLE_WRAP",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 113,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-table-wrap\""
						},
						{
							"id": 466,
							"name": "TEXT_CENTER",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 114,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-text-center\""
						},
						{
							"id": 467,
							"name": "TIME",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 115,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-time\""
						},
						{
							"id": 468,
							"name": "TIME_CELLS",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 116,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-time-cells\""
						},
						{
							"id": 469,
							"name": "TIME_CELLS_WRAP",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 117,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-time-cells-wrap\""
						},
						{
							"id": 470,
							"name": "TIME_SLOTS",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 118,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-time-slots\""
						},
						{
							"id": 471,
							"name": "TODAY",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 119,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-today\""
						},
						{
							"id": 472,
							"name": "TODAY_BUTTON",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 120,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-today-button\""
						},
						{
							"id": 473,
							"name": "TOOLBAR_SELECTED",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 121,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-toolbar-selected\""
						},
						{
							"id": 474,
							"name": "UP_ARROW_ICON",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 122,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-up-icon\""
						},
						{
							"id": 475,
							"name": "VERTICAL_VIEW",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 123,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-vertical-view\""
						},
						{
							"id": 476,
							"name": "VIEW_BUTTON",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 124,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-view-button\""
						},
						{
							"id": 477,
							"name": "WEEK_NUMBER",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 125,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-week-number\""
						},
						{
							"id": 478,
							"name": "WEEK_NUMBER_WRAPPER",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 126,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-week-number-wrapper\""
						},
						{
							"id": 479,
							"name": "WEEK_VIEW",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 127,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-week-view\""
						},
						{
							"id": 483,
							"name": "WORK_CELL",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 131,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-work-cell\""
						},
						{
							"id": 484,
							"name": "WORK_CELLS",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 132,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-work-cells\""
						},
						{
							"id": 480,
							"name": "WORK_CELLS_CONTAINER",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 128,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-work-cells-container\""
						},
						{
							"id": 481,
							"name": "WORK_CELLS_ROW",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 129,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-work-cells-row\""
						},
						{
							"id": 482,
							"name": "WORK_WEEK_VIEW",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/constants.ts",
									"line": 130,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sf-work-week-view\""
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								357,
								358,
								359,
								360,
								361,
								362,
								363,
								365,
								364,
								366,
								367,
								368,
								369,
								370,
								371,
								372,
								373,
								374,
								375,
								376,
								377,
								380,
								378,
								379,
								381,
								382,
								383,
								384,
								385,
								386,
								387,
								388,
								389,
								390,
								391,
								392,
								394,
								395,
								393,
								396,
								397,
								398,
								399,
								400,
								401,
								402,
								403,
								404,
								405,
								406,
								407,
								408,
								409,
								410,
								411,
								412,
								413,
								414,
								415,
								416,
								417,
								418,
								419,
								420,
								421,
								422,
								423,
								424,
								425,
								426,
								427,
								428,
								429,
								430,
								431,
								432,
								433,
								434,
								435,
								436,
								437,
								438,
								439,
								440,
								441,
								442,
								443,
								444,
								445,
								446,
								447,
								448,
								449,
								450,
								451,
								452,
								453,
								454,
								455,
								456,
								457,
								458,
								459,
								460,
								461,
								462,
								463,
								464,
								465,
								466,
								467,
								468,
								469,
								470,
								471,
								472,
								473,
								474,
								475,
								476,
								477,
								478,
								479,
								483,
								484,
								480,
								481,
								482
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/common/constants.ts",
							"line": 4,
							"character": 24
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						356
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/common/constants.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1538,
			"name": "\"schedule/common/constants.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/common/constants.d.ts",
			"children": [
				{
					"id": 1539,
					"name": "CSS_CLASSES",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "CSS class constants for the quick popup components"
					},
					"sources": [
						{
							"fileName": "src/schedule/common/constants.d.ts",
							"line": 4,
							"character": 32
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Record"
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1539
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/common/constants.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 774,
			"name": "\"schedule/common/locale\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/common/locale.ts",
			"children": [
				{
					"id": 784,
					"name": "useScheduleLocalization",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Hook for using Schedule localization",
						"returns": "Returns an object containing the localization instance and getString helper\n"
					},
					"signatures": [
						{
							"id": 785,
							"name": "useScheduleLocalization",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Hook for using Schedule localization",
								"returns": "Returns an object containing the localization instance and getString helper\n"
							},
							"parameters": [
								{
									"id": 786,
									"name": "locale",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 787,
									"name": "customStrings",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Record"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 788,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 790,
											"name": "getString",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/schedule/common/locale.ts",
													"line": 44,
													"character": 21
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 791,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 792,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExported": true
															},
															"parameters": [
																{
																	"id": 793,
																	"name": "key",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExported": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										},
										{
											"id": 789,
											"name": "l10nInstance",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/schedule/common/locale.ts",
													"line": 43,
													"character": 24
												}
											],
											"type": {
												"type": "reference",
												"name": "IL10n"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												790,
												789
											]
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/common/locale.ts",
							"line": 26,
							"character": 36
						}
					]
				},
				{
					"id": 775,
					"name": "DEFAULT_LOCALE_STRINGS",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Default locale strings for Schedule component"
					},
					"children": [
						{
							"id": 776,
							"name": "addTitle",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/locale.ts",
									"line": 9,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"Add title\""
						},
						{
							"id": 781,
							"name": "close",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/locale.ts",
									"line": 14,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"Close\""
						},
						{
							"id": 779,
							"name": "delete",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/locale.ts",
									"line": 12,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"Delete\""
						},
						{
							"id": 778,
							"name": "edit",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/locale.ts",
									"line": 11,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"Edit\""
						},
						{
							"id": 780,
							"name": "moreDetails",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/locale.ts",
									"line": 13,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"More details\""
						},
						{
							"id": 782,
							"name": "newEvent",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/locale.ts",
									"line": 15,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"New event\""
						},
						{
							"id": 777,
							"name": "save",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/locale.ts",
									"line": 10,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"Save\""
						},
						{
							"id": 783,
							"name": "today",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/common/locale.ts",
									"line": 16,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"Today\""
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								776,
								781,
								779,
								778,
								780,
								782,
								777,
								783
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/common/locale.ts",
							"line": 8,
							"character": 35
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						784
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						775
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/common/locale.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1540,
			"name": "\"schedule/common/locale.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/common/locale.d.ts",
			"children": [
				{
					"id": 1541,
					"name": "DEFAULT_LOCALE_STRINGS",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Default locale strings for Schedule component"
					},
					"sources": [
						{
							"fileName": "src/schedule/common/locale.d.ts",
							"line": 7,
							"character": 43
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Record"
					}
				},
				{
					"id": 1542,
					"name": "useScheduleLocalization",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Hook for using Schedule localization",
						"tags": [
							{
								"tag": "param",
								"text": "The current locale",
								"param": "[locale='en-US']"
							},
							{
								"tag": "param",
								"text": "Optional custom locale strings",
								"param": "[customStrings={}]"
							},
							{
								"tag": "returns",
								"text": "Returns an object containing the localization instance and getString helper\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/schedule/common/locale.d.ts",
							"line": 15,
							"character": 44
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1543,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1544,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 1545,
											"name": "locale",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1546,
											"name": "customStrings",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "Record"
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1547,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 1549,
													"name": "getString",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/schedule/common/locale.d.ts",
															"line": 17,
															"character": 13
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1550,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															},
															"signatures": [
																{
																	"id": 1551,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExported": true
																	},
																	"parameters": [
																		{
																			"id": 1552,
																			"name": "key",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExported": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"sources": [
																{
																	"fileName": "src/schedule/common/locale.d.ts",
																	"line": 17,
																	"character": 14
																}
															]
														}
													}
												},
												{
													"id": 1548,
													"name": "l10nInstance",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/schedule/common/locale.d.ts",
															"line": 16,
															"character": 16
														}
													],
													"type": {
														"type": "reference",
														"name": "IL10n"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1549,
														1548
													]
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/common/locale.d.ts",
													"line": 15,
													"character": 106
												}
											]
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/common/locale.d.ts",
									"line": 15,
									"character": 45
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1541,
						1542
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/common/locale.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1553,
			"name": "\"schedule/components/all-day-row-cell.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/components/all-day-row-cell.d.ts",
			"children": [
				{
					"id": 1554,
					"name": "AllDayRowCell",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/schedule/components/all-day-row-cell.d.ts",
							"line": 21,
							"character": 34
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "AllDayRowCellProps"
							}
						],
						"name": "FC"
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1554
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/components/all-day-row-cell.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1555,
			"name": "\"schedule/components/all-day-row.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/components/all-day-row.d.ts",
			"children": [
				{
					"id": 1556,
					"name": "AllDayRow",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/schedule/components/all-day-row.d.ts",
							"line": 3,
							"character": 30
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 1075,
										"name": "AllDayRowProps"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1055,
												"name": "IAllDayRow"
											}
										],
										"name": "RefAttributes"
									}
								]
							}
						],
						"name": "ForwardRefExoticComponent"
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1556
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/components/all-day-row.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1557,
			"name": "\"schedule/components/current-time-indicator.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/components/current-time-indicator.d.ts",
			"children": [
				{
					"id": 1558,
					"name": "CurrentTimeIndicator",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/schedule/components/current-time-indicator.d.ts",
							"line": 3,
							"character": 41
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 1061,
								"name": "TimeIndicatorProps"
							}
						],
						"name": "FC"
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1558
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/components/current-time-indicator.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1559,
			"name": "\"schedule/components/date-header.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/components/date-header.d.ts",
			"children": [
				{
					"id": 1560,
					"name": "DateHeader",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/schedule/components/date-header.d.ts",
							"line": 2,
							"character": 31
						}
					],
					"type": {
						"type": "reference",
						"name": "FC"
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1560
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/components/date-header.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1561,
			"name": "\"schedule/components/day-event.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/components/day-event.d.ts",
			"children": [
				{
					"id": 1562,
					"name": "DayEvent",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/schedule/components/day-event.d.ts",
							"line": 3,
							"character": 29
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 1084,
								"name": "DayEventProps"
							}
						],
						"name": "FC"
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1562
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/components/day-event.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1563,
			"name": "\"schedule/components/drag-and-drop.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/components/drag-and-drop.d.ts",
			"children": [
				{
					"id": 1846,
					"name": "DraggableEventProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1863,
							"name": "children",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/components/drag-and-drop.d.ts",
									"line": 16,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "ReactNode"
							}
						},
						{
							"id": 1861,
							"name": "className",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/components/drag-and-drop.d.ts",
									"line": 14,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1862,
							"name": "containerProps",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/components/drag-and-drop.d.ts",
									"line": 15,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"id": 1564,
								"name": "DraggableHTMLAttributes"
							}
						},
						{
							"id": 1847,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/components/drag-and-drop.d.ts",
									"line": 9,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 268,
										"name": "EventModel"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 268,
											"name": "EventModel"
										}
									}
								]
							}
						},
						{
							"id": 1853,
							"name": "drag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/components/drag-and-drop.d.ts",
									"line": 12,
									"character": 8
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1854,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1855,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1856,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 140,
														"name": "DragEventArgs"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/components/drag-and-drop.d.ts",
											"line": 12,
											"character": 10
										}
									]
								}
							}
						},
						{
							"id": 1849,
							"name": "dragStart",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/components/drag-and-drop.d.ts",
									"line": 11,
									"character": 13
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1850,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1851,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1852,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 140,
														"name": "DragEventArgs"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/components/drag-and-drop.d.ts",
											"line": 11,
											"character": 15
										}
									]
								}
							}
						},
						{
							"id": 1857,
							"name": "dragStop",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/components/drag-and-drop.d.ts",
									"line": 13,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1858,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1859,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1860,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 140,
														"name": "DragEventArgs"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/components/drag-and-drop.d.ts",
											"line": 13,
											"character": 14
										}
									]
								}
							}
						},
						{
							"id": 1848,
							"name": "enabled",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/components/drag-and-drop.d.ts",
									"line": 10,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1863,
								1861,
								1862,
								1847,
								1853,
								1849,
								1857,
								1848
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/components/drag-and-drop.d.ts",
							"line": 8,
							"character": 36
						}
					]
				},
				{
					"id": 1564,
					"name": "DraggableHTMLAttributes",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1594,
							"name": "about",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2708,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1594,
								"name": "HTMLAttributes.about"
							}
						},
						{
							"id": 1572,
							"name": "accessKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2681,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1572,
								"name": "HTMLAttributes.accessKey"
							}
						},
						{
							"id": 1622,
							"name": "aria-activedescendant",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2379,
									"character": 31
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1622,
								"name": "AriaAttributes.\"aria-activedescendant\""
							}
						},
						{
							"id": 1623,
							"name": "aria-atomic",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2381,
									"character": 21
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Booleanish"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1623,
								"name": "AriaAttributes.\"aria-atomic\""
							}
						},
						{
							"id": 1624,
							"name": "aria-autocomplete",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2386,
									"character": 27
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "none"
									},
									{
										"type": "stringLiteral",
										"value": "inline"
									},
									{
										"type": "stringLiteral",
										"value": "list"
									},
									{
										"type": "stringLiteral",
										"value": "both"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1624,
								"name": "AriaAttributes.\"aria-autocomplete\""
							}
						},
						{
							"id": 1625,
							"name": "aria-braillelabel",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines a string value that labels the current element, which is intended to be converted into Braille.",
								"tags": [
									{
										"tag": "see",
										"text": "aria-label.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2392,
									"character": 27
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1625,
								"name": "AriaAttributes.\"aria-braillelabel\""
							}
						},
						{
							"id": 1626,
							"name": "aria-brailleroledescription",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.",
								"tags": [
									{
										"tag": "see",
										"text": "aria-roledescription.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2397,
									"character": 37
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1626,
								"name": "AriaAttributes.\"aria-brailleroledescription\""
							}
						},
						{
							"id": 1627,
							"name": "aria-busy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2398,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Booleanish"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1627,
								"name": "AriaAttributes.\"aria-busy\""
							}
						},
						{
							"id": 1628,
							"name": "aria-checked",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.",
								"tags": [
									{
										"tag": "see",
										"text": "aria-pressed @see aria-selected.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2403,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "stringLiteral",
										"value": "false"
									},
									{
										"type": "stringLiteral",
										"value": "mixed"
									},
									{
										"type": "stringLiteral",
										"value": "true"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1628,
								"name": "AriaAttributes.\"aria-checked\""
							}
						},
						{
							"id": 1629,
							"name": "aria-colcount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines the total number of columns in a table, grid, or treegrid.",
								"tags": [
									{
										"tag": "see",
										"text": "aria-colindex.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2408,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1629,
								"name": "AriaAttributes.\"aria-colcount\""
							}
						},
						{
							"id": 1630,
							"name": "aria-colindex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
								"tags": [
									{
										"tag": "see",
										"text": "aria-colcount @see aria-colspan.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2413,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1630,
								"name": "AriaAttributes.\"aria-colindex\""
							}
						},
						{
							"id": 1631,
							"name": "aria-colindextext",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines a human readable text alternative of aria-colindex.",
								"tags": [
									{
										"tag": "see",
										"text": "aria-rowindextext.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2418,
									"character": 27
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1631,
								"name": "AriaAttributes.\"aria-colindextext\""
							}
						},
						{
							"id": 1632,
							"name": "aria-colspan",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
								"tags": [
									{
										"tag": "see",
										"text": "aria-colindex @see aria-rowspan.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2423,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1632,
								"name": "AriaAttributes.\"aria-colspan\""
							}
						},
						{
							"id": 1633,
							"name": "aria-controls",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
								"tags": [
									{
										"tag": "see",
										"text": "aria-owns.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2428,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1633,
								"name": "AriaAttributes.\"aria-controls\""
							}
						},
						{
							"id": 1634,
							"name": "aria-current",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates the element that represents the current item within a container or set of related elements."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2430,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "stringLiteral",
										"value": "false"
									},
									{
										"type": "stringLiteral",
										"value": "true"
									},
									{
										"type": "stringLiteral",
										"value": "page"
									},
									{
										"type": "stringLiteral",
										"value": "step"
									},
									{
										"type": "stringLiteral",
										"value": "location"
									},
									{
										"type": "stringLiteral",
										"value": "date"
									},
									{
										"type": "stringLiteral",
										"value": "time"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1634,
								"name": "AriaAttributes.\"aria-current\""
							}
						},
						{
							"id": 1635,
							"name": "aria-describedby",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Identifies the element (or elements) that describes the object.",
								"tags": [
									{
										"tag": "see",
										"text": "aria-labelledby\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2435,
									"character": 26
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1635,
								"name": "AriaAttributes.\"aria-describedby\""
							}
						},
						{
							"id": 1636,
							"name": "aria-description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines a string value that describes or annotates the current element.",
								"tags": [
									{
										"tag": "see",
										"text": "related aria-describedby.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2440,
									"character": 26
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1636,
								"name": "AriaAttributes.\"aria-description\""
							}
						},
						{
							"id": 1637,
							"name": "aria-details",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Identifies the element that provides a detailed, extended description for the object.",
								"tags": [
									{
										"tag": "see",
										"text": "aria-describedby.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2445,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1637,
								"name": "AriaAttributes.\"aria-details\""
							}
						},
						{
							"id": 1638,
							"name": "aria-disabled",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
								"tags": [
									{
										"tag": "see",
										"text": "aria-hidden @see aria-readonly.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2450,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Booleanish"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1638,
								"name": "AriaAttributes.\"aria-disabled\""
							}
						},
						{
							"id": 1639,
							"name": "aria-dropeffect",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates what functions can be performed when a dragged object is released on the drop target.",
								"tags": [
									{
										"tag": "deprecated",
										"text": "in ARIA 1.1\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2455,
									"character": 25
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "none"
									},
									{
										"type": "stringLiteral",
										"value": "copy"
									},
									{
										"type": "stringLiteral",
										"value": "execute"
									},
									{
										"type": "stringLiteral",
										"value": "link"
									},
									{
										"type": "stringLiteral",
										"value": "move"
									},
									{
										"type": "stringLiteral",
										"value": "popup"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1639,
								"name": "AriaAttributes.\"aria-dropeffect\""
							}
						},
						{
							"id": 1640,
							"name": "aria-errormessage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Identifies the element that provides an error message for the object.",
								"tags": [
									{
										"tag": "see",
										"text": "aria-invalid @see aria-describedby.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2460,
									"character": 27
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1640,
								"name": "AriaAttributes.\"aria-errormessage\""
							}
						},
						{
							"id": 1641,
							"name": "aria-expanded",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2462,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Booleanish"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1641,
								"name": "AriaAttributes.\"aria-expanded\""
							}
						},
						{
							"id": 1642,
							"name": "aria-flowto",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2467,
									"character": 21
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1642,
								"name": "AriaAttributes.\"aria-flowto\""
							}
						},
						{
							"id": 1643,
							"name": "aria-grabbed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.",
								"tags": [
									{
										"tag": "deprecated",
										"text": "in ARIA 1.1\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2472,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Booleanish"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1643,
								"name": "AriaAttributes.\"aria-grabbed\""
							}
						},
						{
							"id": 1644,
							"name": "aria-haspopup",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2474,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "stringLiteral",
										"value": "false"
									},
									{
										"type": "stringLiteral",
										"value": "true"
									},
									{
										"type": "stringLiteral",
										"value": "menu"
									},
									{
										"type": "stringLiteral",
										"value": "listbox"
									},
									{
										"type": "stringLiteral",
										"value": "tree"
									},
									{
										"type": "stringLiteral",
										"value": "grid"
									},
									{
										"type": "stringLiteral",
										"value": "dialog"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1644,
								"name": "AriaAttributes.\"aria-haspopup\""
							}
						},
						{
							"id": 1645,
							"name": "aria-hidden",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates whether the element is exposed to an accessibility API.",
								"tags": [
									{
										"tag": "see",
										"text": "aria-disabled.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2479,
									"character": 21
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Booleanish"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1645,
								"name": "AriaAttributes.\"aria-hidden\""
							}
						},
						{
							"id": 1646,
							"name": "aria-invalid",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates the entered value does not conform to the format expected by the application.",
								"tags": [
									{
										"tag": "see",
										"text": "aria-errormessage.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2484,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "stringLiteral",
										"value": "false"
									},
									{
										"type": "stringLiteral",
										"value": "true"
									},
									{
										"type": "stringLiteral",
										"value": "grammar"
									},
									{
										"type": "stringLiteral",
										"value": "spelling"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1646,
								"name": "AriaAttributes.\"aria-invalid\""
							}
						},
						{
							"id": 1647,
							"name": "aria-keyshortcuts",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2486,
									"character": 27
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1647,
								"name": "AriaAttributes.\"aria-keyshortcuts\""
							}
						},
						{
							"id": 1566,
							"name": "aria-label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/components/drag-and-drop.d.ts",
									"line": 5,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "AriaAttributes.\"aria-label\""
							}
						},
						{
							"id": 1648,
							"name": "aria-labelledby",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Identifies the element (or elements) that labels the current element.",
								"tags": [
									{
										"tag": "see",
										"text": "aria-describedby.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2496,
									"character": 25
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1648,
								"name": "AriaAttributes.\"aria-labelledby\""
							}
						},
						{
							"id": 1649,
							"name": "aria-level",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines the hierarchical level of an element within a structure."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2498,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1649,
								"name": "AriaAttributes.\"aria-level\""
							}
						},
						{
							"id": 1650,
							"name": "aria-live",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2500,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "off"
									},
									{
										"type": "stringLiteral",
										"value": "assertive"
									},
									{
										"type": "stringLiteral",
										"value": "polite"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1650,
								"name": "AriaAttributes.\"aria-live\""
							}
						},
						{
							"id": 1651,
							"name": "aria-modal",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates whether an element is modal when displayed."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2502,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Booleanish"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1651,
								"name": "AriaAttributes.\"aria-modal\""
							}
						},
						{
							"id": 1652,
							"name": "aria-multiline",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates whether a text box accepts multiple lines of input or only a single line."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2504,
									"character": 24
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Booleanish"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1652,
								"name": "AriaAttributes.\"aria-multiline\""
							}
						},
						{
							"id": 1653,
							"name": "aria-multiselectable",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates that the user may select more than one item from the current selectable descendants."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2506,
									"character": 30
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Booleanish"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1653,
								"name": "AriaAttributes.\"aria-multiselectable\""
							}
						},
						{
							"id": 1654,
							"name": "aria-orientation",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2508,
									"character": 26
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "horizontal"
									},
									{
										"type": "stringLiteral",
										"value": "vertical"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1654,
								"name": "AriaAttributes.\"aria-orientation\""
							}
						},
						{
							"id": 1655,
							"name": "aria-owns",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
								"tags": [
									{
										"tag": "see",
										"text": "aria-controls.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2514,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1655,
								"name": "AriaAttributes.\"aria-owns\""
							}
						},
						{
							"id": 1656,
							"name": "aria-placeholder",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2519,
									"character": 26
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1656,
								"name": "AriaAttributes.\"aria-placeholder\""
							}
						},
						{
							"id": 1657,
							"name": "aria-posinset",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
								"tags": [
									{
										"tag": "see",
										"text": "aria-setsize.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2524,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1657,
								"name": "AriaAttributes.\"aria-posinset\""
							}
						},
						{
							"id": 1658,
							"name": "aria-pressed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates the current \"pressed\" state of toggle buttons.",
								"tags": [
									{
										"tag": "see",
										"text": "aria-checked @see aria-selected.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2529,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "stringLiteral",
										"value": "false"
									},
									{
										"type": "stringLiteral",
										"value": "mixed"
									},
									{
										"type": "stringLiteral",
										"value": "true"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1658,
								"name": "AriaAttributes.\"aria-pressed\""
							}
						},
						{
							"id": 1659,
							"name": "aria-readonly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates that the element is not editable, but is otherwise operable.",
								"tags": [
									{
										"tag": "see",
										"text": "aria-disabled.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2534,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Booleanish"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1659,
								"name": "AriaAttributes.\"aria-readonly\""
							}
						},
						{
							"id": 1660,
							"name": "aria-relevant",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
								"tags": [
									{
										"tag": "see",
										"text": "aria-atomic.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2539,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "additions"
									},
									{
										"type": "stringLiteral",
										"value": "additions removals"
									},
									{
										"type": "stringLiteral",
										"value": "additions text"
									},
									{
										"type": "stringLiteral",
										"value": "all"
									},
									{
										"type": "stringLiteral",
										"value": "removals"
									},
									{
										"type": "stringLiteral",
										"value": "removals additions"
									},
									{
										"type": "stringLiteral",
										"value": "removals text"
									},
									{
										"type": "stringLiteral",
										"value": "text"
									},
									{
										"type": "stringLiteral",
										"value": "text additions"
									},
									{
										"type": "stringLiteral",
										"value": "text removals"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1660,
								"name": "AriaAttributes.\"aria-relevant\""
							}
						},
						{
							"id": 1661,
							"name": "aria-required",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates that user input is required on the element before a form may be submitted."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2552,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Booleanish"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1661,
								"name": "AriaAttributes.\"aria-required\""
							}
						},
						{
							"id": 1662,
							"name": "aria-roledescription",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines a human-readable, author-localized description for the role of an element."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2554,
									"character": 30
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1662,
								"name": "AriaAttributes.\"aria-roledescription\""
							}
						},
						{
							"id": 1663,
							"name": "aria-rowcount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines the total number of rows in a table, grid, or treegrid.",
								"tags": [
									{
										"tag": "see",
										"text": "aria-rowindex.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2559,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1663,
								"name": "AriaAttributes.\"aria-rowcount\""
							}
						},
						{
							"id": 1664,
							"name": "aria-rowindex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
								"tags": [
									{
										"tag": "see",
										"text": "aria-rowcount @see aria-rowspan.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2564,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1664,
								"name": "AriaAttributes.\"aria-rowindex\""
							}
						},
						{
							"id": 1665,
							"name": "aria-rowindextext",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines a human readable text alternative of aria-rowindex.",
								"tags": [
									{
										"tag": "see",
										"text": "aria-colindextext.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2569,
									"character": 27
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1665,
								"name": "AriaAttributes.\"aria-rowindextext\""
							}
						},
						{
							"id": 1666,
							"name": "aria-rowspan",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
								"tags": [
									{
										"tag": "see",
										"text": "aria-rowindex @see aria-colspan.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2574,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1666,
								"name": "AriaAttributes.\"aria-rowspan\""
							}
						},
						{
							"id": 1667,
							"name": "aria-selected",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates the current \"selected\" state of various widgets.",
								"tags": [
									{
										"tag": "see",
										"text": "aria-checked @see aria-pressed.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2579,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Booleanish"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1667,
								"name": "AriaAttributes.\"aria-selected\""
							}
						},
						{
							"id": 1668,
							"name": "aria-setsize",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
								"tags": [
									{
										"tag": "see",
										"text": "aria-posinset.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2584,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1668,
								"name": "AriaAttributes.\"aria-setsize\""
							}
						},
						{
							"id": 1669,
							"name": "aria-sort",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates if items in a table or grid are sorted in ascending or descending order."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2586,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "none"
									},
									{
										"type": "stringLiteral",
										"value": "ascending"
									},
									{
										"type": "stringLiteral",
										"value": "descending"
									},
									{
										"type": "stringLiteral",
										"value": "other"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1669,
								"name": "AriaAttributes.\"aria-sort\""
							}
						},
						{
							"id": 1670,
							"name": "aria-valuemax",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines the maximum allowed value for a range widget."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2588,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1670,
								"name": "AriaAttributes.\"aria-valuemax\""
							}
						},
						{
							"id": 1671,
							"name": "aria-valuemin",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines the minimum allowed value for a range widget."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2590,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1671,
								"name": "AriaAttributes.\"aria-valuemin\""
							}
						},
						{
							"id": 1672,
							"name": "aria-valuenow",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines the current value for a range widget.",
								"tags": [
									{
										"tag": "see",
										"text": "aria-valuetext.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2595,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1672,
								"name": "AriaAttributes.\"aria-valuenow\""
							}
						},
						{
							"id": 1673,
							"name": "aria-valuetext",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines the human readable text alternative of aria-valuenow for a range widget."
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2597,
									"character": 24
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1673,
								"name": "AriaAttributes.\"aria-valuetext\""
							}
						},
						{
							"id": 1573,
							"name": "autoCapitalize",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2682,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "off"
									},
									{
										"type": "stringLiteral",
										"value": "none"
									},
									{
										"type": "stringLiteral",
										"value": "on"
									},
									{
										"type": "stringLiteral",
										"value": "sentences"
									},
									{
										"type": "stringLiteral",
										"value": "words"
									},
									{
										"type": "stringLiteral",
										"value": "characters"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intersection",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1574,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													}
												}
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1573,
								"name": "HTMLAttributes.autoCapitalize"
							}
						},
						{
							"id": 1605,
							"name": "autoCorrect",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2721,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1605,
								"name": "HTMLAttributes.autoCorrect"
							}
						},
						{
							"id": 1575,
							"name": "autoFocus",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2683,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1575,
								"name": "HTMLAttributes.autoFocus"
							}
						},
						{
							"id": 1606,
							"name": "autoSave",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2722,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1606,
								"name": "HTMLAttributes.autoSave"
							}
						},
						{
							"id": 1674,
							"name": "children",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2155,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "ReactNode"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1674,
								"name": "DOMAttributes.children"
							}
						},
						{
							"id": 1576,
							"name": "className",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2684,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1576,
								"name": "HTMLAttributes.className"
							}
						},
						{
							"id": 1607,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2723,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1607,
								"name": "HTMLAttributes.color"
							}
						},
						{
							"id": 1595,
							"name": "content",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2709,
									"character": 15
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1595,
								"name": "HTMLAttributes.content"
							}
						},
						{
							"id": 1577,
							"name": "contentEditable",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2685,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Booleanish"
									},
									{
										"type": "stringLiteral",
										"value": "inherit"
									},
									{
										"type": "stringLiteral",
										"value": "plaintext-only"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1577,
								"name": "HTMLAttributes.contentEditable"
							}
						},
						{
							"id": 1578,
							"name": "contextMenu",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2686,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1578,
								"name": "HTMLAttributes.contextMenu"
							}
						},
						{
							"id": 1675,
							"name": "dangerouslySetInnerHTML",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2156,
									"character": 31
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 1676,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 1677,
													"name": "__html",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
															"line": 2159,
															"character": 18
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"name": "TrustedHTML"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1677
													]
												}
											],
											"sources": [
												{
													"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
													"line": 2156,
													"character": 33
												}
											]
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1675,
								"name": "DOMAttributes.dangerouslySetInnerHTML"
							}
						},
						{
							"id": 1567,
							"name": "data-guid",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/components/drag-and-drop.d.ts",
									"line": 6,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1565,
							"name": "data-id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/components/drag-and-drop.d.ts",
									"line": 4,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 1596,
							"name": "datatype",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2710,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1596,
								"name": "HTMLAttributes.datatype"
							}
						},
						{
							"id": 1568,
							"name": "defaultChecked",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2675,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1568,
								"name": "HTMLAttributes.defaultChecked"
							}
						},
						{
							"id": 1569,
							"name": "defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2676,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1569,
								"name": "HTMLAttributes.defaultValue"
							}
						},
						{
							"id": 1579,
							"name": "dir",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2687,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1579,
								"name": "HTMLAttributes.dir"
							}
						},
						{
							"id": 1580,
							"name": "draggable",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2688,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Booleanish"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1580,
								"name": "HTMLAttributes.draggable"
							}
						},
						{
							"id": 1581,
							"name": "enterKeyHint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2689,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "enter"
									},
									{
										"type": "stringLiteral",
										"value": "done"
									},
									{
										"type": "stringLiteral",
										"value": "go"
									},
									{
										"type": "stringLiteral",
										"value": "next"
									},
									{
										"type": "stringLiteral",
										"value": "previous"
									},
									{
										"type": "stringLiteral",
										"value": "search"
									},
									{
										"type": "stringLiteral",
										"value": "send"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1581,
								"name": "HTMLAttributes.enterKeyHint"
							}
						},
						{
							"id": 1582,
							"name": "hidden",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2690,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1582,
								"name": "HTMLAttributes.hidden"
							}
						},
						{
							"id": 1583,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2691,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1583,
								"name": "HTMLAttributes.id"
							}
						},
						{
							"id": 1619,
							"name": "inert",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"tags": [
									{
										"tag": "see",
										"text": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2742,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1619,
								"name": "HTMLAttributes.inert"
							}
						},
						{
							"id": 1597,
							"name": "inlist",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2711,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1597,
								"name": "HTMLAttributes.inlist"
							}
						},
						{
							"id": 1620,
							"name": "inputMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Hints at the type of data that might be entered by the user while editing the element or its contents",
								"tags": [
									{
										"tag": "see",
										"text": "{@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2747,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "none"
									},
									{
										"type": "stringLiteral",
										"value": "text"
									},
									{
										"type": "stringLiteral",
										"value": "tel"
									},
									{
										"type": "stringLiteral",
										"value": "url"
									},
									{
										"type": "stringLiteral",
										"value": "email"
									},
									{
										"type": "stringLiteral",
										"value": "numeric"
									},
									{
										"type": "stringLiteral",
										"value": "decimal"
									},
									{
										"type": "stringLiteral",
										"value": "search"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1620,
								"name": "HTMLAttributes.inputMode"
							}
						},
						{
							"id": 1621,
							"name": "is",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Specify that a standard HTML element should behave like a defined custom built-in element",
								"tags": [
									{
										"tag": "see",
										"text": "{@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2752,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1621,
								"name": "HTMLAttributes.is"
							}
						},
						{
							"id": 1611,
							"name": "itemID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2727,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1611,
								"name": "HTMLAttributes.itemID"
							}
						},
						{
							"id": 1608,
							"name": "itemProp",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2724,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1608,
								"name": "HTMLAttributes.itemProp"
							}
						},
						{
							"id": 1612,
							"name": "itemRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2728,
									"character": 15
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1612,
								"name": "HTMLAttributes.itemRef"
							}
						},
						{
							"id": 1609,
							"name": "itemScope",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2725,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1609,
								"name": "HTMLAttributes.itemScope"
							}
						},
						{
							"id": 1610,
							"name": "itemType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2726,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1610,
								"name": "HTMLAttributes.itemType"
							}
						},
						{
							"id": 1584,
							"name": "lang",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2692,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1584,
								"name": "HTMLAttributes.lang"
							}
						},
						{
							"id": 1585,
							"name": "nonce",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2693,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1585,
								"name": "HTMLAttributes.nonce"
							}
						},
						{
							"id": 1716,
							"name": "onAbort",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2215,
									"character": 15
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ReactEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1716,
								"name": "DOMAttributes.onAbort"
							}
						},
						{
							"id": 1717,
							"name": "onAbortCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2216,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ReactEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1717,
								"name": "DOMAttributes.onAbortCapture"
							}
						},
						{
							"id": 1832,
							"name": "onAnimationEnd",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2345,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "AnimationEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1832,
								"name": "DOMAttributes.onAnimationEnd"
							}
						},
						{
							"id": 1833,
							"name": "onAnimationEndCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2346,
									"character": 29
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "AnimationEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1833,
								"name": "DOMAttributes.onAnimationEndCapture"
							}
						},
						{
							"id": 1834,
							"name": "onAnimationIteration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2347,
									"character": 28
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "AnimationEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1834,
								"name": "DOMAttributes.onAnimationIteration"
							}
						},
						{
							"id": 1835,
							"name": "onAnimationIterationCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2348,
									"character": 35
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "AnimationEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1835,
								"name": "DOMAttributes.onAnimationIterationCapture"
							}
						},
						{
							"id": 1830,
							"name": "onAnimationStart",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2343,
									"character": 24
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "AnimationEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1830,
								"name": "DOMAttributes.onAnimationStart"
							}
						},
						{
							"id": 1831,
							"name": "onAnimationStartCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2344,
									"character": 31
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "AnimationEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1831,
								"name": "DOMAttributes.onAnimationStartCapture"
							}
						},
						{
							"id": 1762,
							"name": "onAuxClick",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2263,
									"character": 18
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "MouseEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1762,
								"name": "DOMAttributes.onAuxClick"
							}
						},
						{
							"id": 1763,
							"name": "onAuxClickCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2264,
									"character": 25
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "MouseEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1763,
								"name": "DOMAttributes.onAuxClickCapture"
							}
						},
						{
							"id": 1696,
							"name": "onBeforeInput",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2187,
									"character": 21
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "FormEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1696,
								"name": "DOMAttributes.onBeforeInput"
							}
						},
						{
							"id": 1697,
							"name": "onBeforeInputCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2188,
									"character": 28
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "FormEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1697,
								"name": "DOMAttributes.onBeforeInputCapture"
							}
						},
						{
							"id": 1837,
							"name": "onBeforeToggle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2352,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ToggleEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1837,
								"name": "DOMAttributes.onBeforeToggle"
							}
						},
						{
							"id": 1692,
							"name": "onBlur",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2181,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "FocusEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1692,
								"name": "DOMAttributes.onBlur"
							}
						},
						{
							"id": 1693,
							"name": "onBlurCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2182,
									"character": 21
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "FocusEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1693,
								"name": "DOMAttributes.onBlurCapture"
							}
						},
						{
							"id": 1718,
							"name": "onCanPlay",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2217,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ReactEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1718,
								"name": "DOMAttributes.onCanPlay"
							}
						},
						{
							"id": 1719,
							"name": "onCanPlayCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2218,
									"character": 24
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ReactEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1719,
								"name": "DOMAttributes.onCanPlayCapture"
							}
						},
						{
							"id": 1720,
							"name": "onCanPlayThrough",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2219,
									"character": 24
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ReactEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1720,
								"name": "DOMAttributes.onCanPlayThrough"
							}
						},
						{
							"id": 1721,
							"name": "onCanPlayThroughCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2220,
									"character": 31
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ReactEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1721,
								"name": "DOMAttributes.onCanPlayThroughCapture"
							}
						},
						{
							"id": 1694,
							"name": "onChange",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2185,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "FormEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1694,
								"name": "DOMAttributes.onChange"
							}
						},
						{
							"id": 1695,
							"name": "onChangeCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2186,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "FormEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1695,
								"name": "DOMAttributes.onChangeCapture"
							}
						},
						{
							"id": 1764,
							"name": "onClick",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2265,
									"character": 15
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "MouseEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1764,
								"name": "DOMAttributes.onClick"
							}
						},
						{
							"id": 1765,
							"name": "onClickCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2266,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "MouseEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1765,
								"name": "DOMAttributes.onClickCapture"
							}
						},
						{
							"id": 1684,
							"name": "onCompositionEnd",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2171,
									"character": 24
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "CompositionEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1684,
								"name": "DOMAttributes.onCompositionEnd"
							}
						},
						{
							"id": 1685,
							"name": "onCompositionEndCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2172,
									"character": 31
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "CompositionEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1685,
								"name": "DOMAttributes.onCompositionEndCapture"
							}
						},
						{
							"id": 1686,
							"name": "onCompositionStart",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2173,
									"character": 26
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "CompositionEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1686,
								"name": "DOMAttributes.onCompositionStart"
							}
						},
						{
							"id": 1687,
							"name": "onCompositionStartCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2174,
									"character": 33
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "CompositionEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1687,
								"name": "DOMAttributes.onCompositionStartCapture"
							}
						},
						{
							"id": 1688,
							"name": "onCompositionUpdate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2175,
									"character": 27
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "CompositionEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1688,
								"name": "DOMAttributes.onCompositionUpdate"
							}
						},
						{
							"id": 1689,
							"name": "onCompositionUpdateCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2176,
									"character": 34
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "CompositionEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1689,
								"name": "DOMAttributes.onCompositionUpdateCapture"
							}
						},
						{
							"id": 1766,
							"name": "onContextMenu",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2267,
									"character": 21
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "MouseEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1766,
								"name": "DOMAttributes.onContextMenu"
							}
						},
						{
							"id": 1767,
							"name": "onContextMenuCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2268,
									"character": 28
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "MouseEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1767,
								"name": "DOMAttributes.onContextMenuCapture"
							}
						},
						{
							"id": 1678,
							"name": "onCopy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2163,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ClipboardEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1678,
								"name": "DOMAttributes.onCopy"
							}
						},
						{
							"id": 1679,
							"name": "onCopyCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2164,
									"character": 21
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ClipboardEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1679,
								"name": "DOMAttributes.onCopyCapture"
							}
						},
						{
							"id": 1680,
							"name": "onCut",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2165,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ClipboardEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1680,
								"name": "DOMAttributes.onCut"
							}
						},
						{
							"id": 1681,
							"name": "onCutCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2166,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ClipboardEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1681,
								"name": "DOMAttributes.onCutCapture"
							}
						},
						{
							"id": 1768,
							"name": "onDoubleClick",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2269,
									"character": 21
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "MouseEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1768,
								"name": "DOMAttributes.onDoubleClick"
							}
						},
						{
							"id": 1769,
							"name": "onDoubleClickCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2270,
									"character": 28
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "MouseEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1769,
								"name": "DOMAttributes.onDoubleClickCapture"
							}
						},
						{
							"id": 1770,
							"name": "onDrag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2271,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "DragEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1770,
								"name": "DOMAttributes.onDrag"
							}
						},
						{
							"id": 1771,
							"name": "onDragCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2272,
									"character": 21
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "DragEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1771,
								"name": "DOMAttributes.onDragCapture"
							}
						},
						{
							"id": 1772,
							"name": "onDragEnd",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2273,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "DragEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1772,
								"name": "DOMAttributes.onDragEnd"
							}
						},
						{
							"id": 1773,
							"name": "onDragEndCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2274,
									"character": 24
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "DragEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1773,
								"name": "DOMAttributes.onDragEndCapture"
							}
						},
						{
							"id": 1774,
							"name": "onDragEnter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2275,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "DragEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1774,
								"name": "DOMAttributes.onDragEnter"
							}
						},
						{
							"id": 1775,
							"name": "onDragEnterCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2276,
									"character": 26
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "DragEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1775,
								"name": "DOMAttributes.onDragEnterCapture"
							}
						},
						{
							"id": 1776,
							"name": "onDragExit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2277,
									"character": 18
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "DragEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1776,
								"name": "DOMAttributes.onDragExit"
							}
						},
						{
							"id": 1777,
							"name": "onDragExitCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2278,
									"character": 25
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "DragEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1777,
								"name": "DOMAttributes.onDragExitCapture"
							}
						},
						{
							"id": 1778,
							"name": "onDragLeave",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2279,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "DragEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1778,
								"name": "DOMAttributes.onDragLeave"
							}
						},
						{
							"id": 1779,
							"name": "onDragLeaveCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2280,
									"character": 26
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "DragEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1779,
								"name": "DOMAttributes.onDragLeaveCapture"
							}
						},
						{
							"id": 1780,
							"name": "onDragOver",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2281,
									"character": 18
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "DragEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1780,
								"name": "DOMAttributes.onDragOver"
							}
						},
						{
							"id": 1781,
							"name": "onDragOverCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2282,
									"character": 25
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "DragEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1781,
								"name": "DOMAttributes.onDragOverCapture"
							}
						},
						{
							"id": 1782,
							"name": "onDragStart",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2283,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "DragEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1782,
								"name": "DOMAttributes.onDragStart"
							}
						},
						{
							"id": 1783,
							"name": "onDragStartCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2284,
									"character": 26
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "DragEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1783,
								"name": "DOMAttributes.onDragStartCapture"
							}
						},
						{
							"id": 1784,
							"name": "onDrop",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2285,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "DragEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1784,
								"name": "DOMAttributes.onDrop"
							}
						},
						{
							"id": 1785,
							"name": "onDropCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2286,
									"character": 21
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "DragEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1785,
								"name": "DOMAttributes.onDropCapture"
							}
						},
						{
							"id": 1722,
							"name": "onDurationChange",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2221,
									"character": 24
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ReactEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1722,
								"name": "DOMAttributes.onDurationChange"
							}
						},
						{
							"id": 1723,
							"name": "onDurationChangeCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2222,
									"character": 31
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ReactEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1723,
								"name": "DOMAttributes.onDurationChangeCapture"
							}
						},
						{
							"id": 1724,
							"name": "onEmptied",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2223,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ReactEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1724,
								"name": "DOMAttributes.onEmptied"
							}
						},
						{
							"id": 1725,
							"name": "onEmptiedCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2224,
									"character": 24
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ReactEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1725,
								"name": "DOMAttributes.onEmptiedCapture"
							}
						},
						{
							"id": 1726,
							"name": "onEncrypted",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2225,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ReactEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1726,
								"name": "DOMAttributes.onEncrypted"
							}
						},
						{
							"id": 1727,
							"name": "onEncryptedCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2226,
									"character": 26
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ReactEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1727,
								"name": "DOMAttributes.onEncryptedCapture"
							}
						},
						{
							"id": 1728,
							"name": "onEnded",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2227,
									"character": 15
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ReactEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1728,
								"name": "DOMAttributes.onEnded"
							}
						},
						{
							"id": 1729,
							"name": "onEndedCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2228,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ReactEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1729,
								"name": "DOMAttributes.onEndedCapture"
							}
						},
						{
							"id": 1708,
							"name": "onError",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2201,
									"character": 15
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ReactEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1708,
								"name": "DOMAttributes.onError"
							}
						},
						{
							"id": 1709,
							"name": "onErrorCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2202,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ReactEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1709,
								"name": "DOMAttributes.onErrorCapture"
							}
						},
						{
							"id": 1690,
							"name": "onFocus",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2179,
									"character": 15
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "FocusEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1690,
								"name": "DOMAttributes.onFocus"
							}
						},
						{
							"id": 1691,
							"name": "onFocusCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2180,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "FocusEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1691,
								"name": "DOMAttributes.onFocusCapture"
							}
						},
						{
							"id": 1822,
							"name": "onGotPointerCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2329,
									"character": 27
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "PointerEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1822,
								"name": "DOMAttributes.onGotPointerCapture"
							}
						},
						{
							"id": 1823,
							"name": "onGotPointerCaptureCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2330,
									"character": 34
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "PointerEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1823,
								"name": "DOMAttributes.onGotPointerCaptureCapture"
							}
						},
						{
							"id": 1698,
							"name": "onInput",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2189,
									"character": 15
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "FormEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1698,
								"name": "DOMAttributes.onInput"
							}
						},
						{
							"id": 1699,
							"name": "onInputCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2190,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "FormEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1699,
								"name": "DOMAttributes.onInputCapture"
							}
						},
						{
							"id": 1704,
							"name": "onInvalid",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2195,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "FormEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1704,
								"name": "DOMAttributes.onInvalid"
							}
						},
						{
							"id": 1705,
							"name": "onInvalidCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2196,
									"character": 24
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "FormEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1705,
								"name": "DOMAttributes.onInvalidCapture"
							}
						},
						{
							"id": 1710,
							"name": "onKeyDown",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2205,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "KeyboardEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1710,
								"name": "DOMAttributes.onKeyDown"
							}
						},
						{
							"id": 1711,
							"name": "onKeyDownCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2206,
									"character": 24
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "KeyboardEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1711,
								"name": "DOMAttributes.onKeyDownCapture"
							}
						},
						{
							"id": 1712,
							"name": "onKeyPress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "Use `onKeyUp` or `onKeyDown` instead"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2208,
									"character": 18
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "KeyboardEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1712,
								"name": "DOMAttributes.onKeyPress"
							}
						},
						{
							"id": 1713,
							"name": "onKeyPressCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": "Use `onKeyUpCapture` or `onKeyDownCapture` instead"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2210,
									"character": 25
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "KeyboardEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1713,
								"name": "DOMAttributes.onKeyPressCapture"
							}
						},
						{
							"id": 1714,
							"name": "onKeyUp",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2211,
									"character": 15
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "KeyboardEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1714,
								"name": "DOMAttributes.onKeyUp"
							}
						},
						{
							"id": 1715,
							"name": "onKeyUpCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2212,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "KeyboardEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1715,
								"name": "DOMAttributes.onKeyUpCapture"
							}
						},
						{
							"id": 1706,
							"name": "onLoad",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2199,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ReactEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1706,
								"name": "DOMAttributes.onLoad"
							}
						},
						{
							"id": 1707,
							"name": "onLoadCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2200,
									"character": 21
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ReactEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1707,
								"name": "DOMAttributes.onLoadCapture"
							}
						},
						{
							"id": 1734,
							"name": "onLoadStart",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2233,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ReactEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1734,
								"name": "DOMAttributes.onLoadStart"
							}
						},
						{
							"id": 1735,
							"name": "onLoadStartCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2234,
									"character": 26
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ReactEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1735,
								"name": "DOMAttributes.onLoadStartCapture"
							}
						},
						{
							"id": 1730,
							"name": "onLoadedData",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2229,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ReactEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1730,
								"name": "DOMAttributes.onLoadedData"
							}
						},
						{
							"id": 1731,
							"name": "onLoadedDataCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2230,
									"character": 27
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ReactEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1731,
								"name": "DOMAttributes.onLoadedDataCapture"
							}
						},
						{
							"id": 1732,
							"name": "onLoadedMetadata",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2231,
									"character": 24
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ReactEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1732,
								"name": "DOMAttributes.onLoadedMetadata"
							}
						},
						{
							"id": 1733,
							"name": "onLoadedMetadataCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2232,
									"character": 31
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ReactEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1733,
								"name": "DOMAttributes.onLoadedMetadataCapture"
							}
						},
						{
							"id": 1824,
							"name": "onLostPointerCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2331,
									"character": 28
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "PointerEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1824,
								"name": "DOMAttributes.onLostPointerCapture"
							}
						},
						{
							"id": 1825,
							"name": "onLostPointerCaptureCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2332,
									"character": 35
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "PointerEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1825,
								"name": "DOMAttributes.onLostPointerCaptureCapture"
							}
						},
						{
							"id": 1786,
							"name": "onMouseDown",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2287,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "MouseEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1786,
								"name": "DOMAttributes.onMouseDown"
							}
						},
						{
							"id": 1787,
							"name": "onMouseDownCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2288,
									"character": 26
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "MouseEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1787,
								"name": "DOMAttributes.onMouseDownCapture"
							}
						},
						{
							"id": 1788,
							"name": "onMouseEnter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2289,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "MouseEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1788,
								"name": "DOMAttributes.onMouseEnter"
							}
						},
						{
							"id": 1789,
							"name": "onMouseLeave",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2290,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "MouseEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1789,
								"name": "DOMAttributes.onMouseLeave"
							}
						},
						{
							"id": 1790,
							"name": "onMouseMove",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2291,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "MouseEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1790,
								"name": "DOMAttributes.onMouseMove"
							}
						},
						{
							"id": 1791,
							"name": "onMouseMoveCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2292,
									"character": 26
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "MouseEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1791,
								"name": "DOMAttributes.onMouseMoveCapture"
							}
						},
						{
							"id": 1792,
							"name": "onMouseOut",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2293,
									"character": 18
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "MouseEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1792,
								"name": "DOMAttributes.onMouseOut"
							}
						},
						{
							"id": 1793,
							"name": "onMouseOutCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2294,
									"character": 25
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "MouseEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1793,
								"name": "DOMAttributes.onMouseOutCapture"
							}
						},
						{
							"id": 1794,
							"name": "onMouseOver",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2295,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "MouseEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1794,
								"name": "DOMAttributes.onMouseOver"
							}
						},
						{
							"id": 1795,
							"name": "onMouseOverCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2296,
									"character": 26
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "MouseEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1795,
								"name": "DOMAttributes.onMouseOverCapture"
							}
						},
						{
							"id": 1796,
							"name": "onMouseUp",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2297,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "MouseEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1796,
								"name": "DOMAttributes.onMouseUp"
							}
						},
						{
							"id": 1797,
							"name": "onMouseUpCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2298,
									"character": 24
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "MouseEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1797,
								"name": "DOMAttributes.onMouseUpCapture"
							}
						},
						{
							"id": 1682,
							"name": "onPaste",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2167,
									"character": 15
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ClipboardEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1682,
								"name": "DOMAttributes.onPaste"
							}
						},
						{
							"id": 1683,
							"name": "onPasteCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2168,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ClipboardEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1683,
								"name": "DOMAttributes.onPasteCapture"
							}
						},
						{
							"id": 1736,
							"name": "onPause",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2235,
									"character": 15
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ReactEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1736,
								"name": "DOMAttributes.onPause"
							}
						},
						{
							"id": 1737,
							"name": "onPauseCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2236,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ReactEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1737,
								"name": "DOMAttributes.onPauseCapture"
							}
						},
						{
							"id": 1738,
							"name": "onPlay",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2237,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ReactEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1738,
								"name": "DOMAttributes.onPlay"
							}
						},
						{
							"id": 1739,
							"name": "onPlayCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2238,
									"character": 21
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ReactEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1739,
								"name": "DOMAttributes.onPlayCapture"
							}
						},
						{
							"id": 1740,
							"name": "onPlaying",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2239,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ReactEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1740,
								"name": "DOMAttributes.onPlaying"
							}
						},
						{
							"id": 1741,
							"name": "onPlayingCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2240,
									"character": 24
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ReactEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1741,
								"name": "DOMAttributes.onPlayingCapture"
							}
						},
						{
							"id": 1814,
							"name": "onPointerCancel",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2321,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "PointerEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1814,
								"name": "DOMAttributes.onPointerCancel"
							}
						},
						{
							"id": 1815,
							"name": "onPointerCancelCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2322,
									"character": 30
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "PointerEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1815,
								"name": "DOMAttributes.onPointerCancelCapture"
							}
						},
						{
							"id": 1808,
							"name": "onPointerDown",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2315,
									"character": 21
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "PointerEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1808,
								"name": "DOMAttributes.onPointerDown"
							}
						},
						{
							"id": 1809,
							"name": "onPointerDownCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2316,
									"character": 28
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "PointerEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1809,
								"name": "DOMAttributes.onPointerDownCapture"
							}
						},
						{
							"id": 1816,
							"name": "onPointerEnter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2323,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "PointerEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1816,
								"name": "DOMAttributes.onPointerEnter"
							}
						},
						{
							"id": 1817,
							"name": "onPointerLeave",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2324,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "PointerEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1817,
								"name": "DOMAttributes.onPointerLeave"
							}
						},
						{
							"id": 1810,
							"name": "onPointerMove",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2317,
									"character": 21
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "PointerEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1810,
								"name": "DOMAttributes.onPointerMove"
							}
						},
						{
							"id": 1811,
							"name": "onPointerMoveCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2318,
									"character": 28
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "PointerEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1811,
								"name": "DOMAttributes.onPointerMoveCapture"
							}
						},
						{
							"id": 1820,
							"name": "onPointerOut",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2327,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "PointerEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1820,
								"name": "DOMAttributes.onPointerOut"
							}
						},
						{
							"id": 1821,
							"name": "onPointerOutCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2328,
									"character": 27
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "PointerEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1821,
								"name": "DOMAttributes.onPointerOutCapture"
							}
						},
						{
							"id": 1818,
							"name": "onPointerOver",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2325,
									"character": 21
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "PointerEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1818,
								"name": "DOMAttributes.onPointerOver"
							}
						},
						{
							"id": 1819,
							"name": "onPointerOverCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2326,
									"character": 28
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "PointerEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1819,
								"name": "DOMAttributes.onPointerOverCapture"
							}
						},
						{
							"id": 1812,
							"name": "onPointerUp",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2319,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "PointerEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1812,
								"name": "DOMAttributes.onPointerUp"
							}
						},
						{
							"id": 1813,
							"name": "onPointerUpCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2320,
									"character": 26
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "PointerEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1813,
								"name": "DOMAttributes.onPointerUpCapture"
							}
						},
						{
							"id": 1742,
							"name": "onProgress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2241,
									"character": 18
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ReactEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1742,
								"name": "DOMAttributes.onProgress"
							}
						},
						{
							"id": 1743,
							"name": "onProgressCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2242,
									"character": 25
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ReactEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1743,
								"name": "DOMAttributes.onProgressCapture"
							}
						},
						{
							"id": 1744,
							"name": "onRateChange",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2243,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ReactEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1744,
								"name": "DOMAttributes.onRateChange"
							}
						},
						{
							"id": 1745,
							"name": "onRateChangeCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2244,
									"character": 27
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ReactEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1745,
								"name": "DOMAttributes.onRateChangeCapture"
							}
						},
						{
							"id": 1700,
							"name": "onReset",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2191,
									"character": 15
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "FormEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1700,
								"name": "DOMAttributes.onReset"
							}
						},
						{
							"id": 1701,
							"name": "onResetCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2192,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "FormEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1701,
								"name": "DOMAttributes.onResetCapture"
							}
						},
						{
							"id": 1746,
							"name": "onResize",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2245,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ReactEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1746,
								"name": "DOMAttributes.onResize"
							}
						},
						{
							"id": 1747,
							"name": "onResizeCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2246,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ReactEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1747,
								"name": "DOMAttributes.onResizeCapture"
							}
						},
						{
							"id": 1826,
							"name": "onScroll",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2335,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "UIEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1826,
								"name": "DOMAttributes.onScroll"
							}
						},
						{
							"id": 1827,
							"name": "onScrollCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2336,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "UIEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1827,
								"name": "DOMAttributes.onScrollCapture"
							}
						},
						{
							"id": 1748,
							"name": "onSeeked",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2247,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ReactEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1748,
								"name": "DOMAttributes.onSeeked"
							}
						},
						{
							"id": 1749,
							"name": "onSeekedCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2248,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ReactEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1749,
								"name": "DOMAttributes.onSeekedCapture"
							}
						},
						{
							"id": 1750,
							"name": "onSeeking",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2249,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ReactEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1750,
								"name": "DOMAttributes.onSeeking"
							}
						},
						{
							"id": 1751,
							"name": "onSeekingCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2250,
									"character": 24
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ReactEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1751,
								"name": "DOMAttributes.onSeekingCapture"
							}
						},
						{
							"id": 1798,
							"name": "onSelect",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2301,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ReactEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1798,
								"name": "DOMAttributes.onSelect"
							}
						},
						{
							"id": 1799,
							"name": "onSelectCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2302,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ReactEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1799,
								"name": "DOMAttributes.onSelectCapture"
							}
						},
						{
							"id": 1752,
							"name": "onStalled",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2251,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ReactEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1752,
								"name": "DOMAttributes.onStalled"
							}
						},
						{
							"id": 1753,
							"name": "onStalledCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2252,
									"character": 24
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ReactEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1753,
								"name": "DOMAttributes.onStalledCapture"
							}
						},
						{
							"id": 1702,
							"name": "onSubmit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2193,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "FormEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1702,
								"name": "DOMAttributes.onSubmit"
							}
						},
						{
							"id": 1703,
							"name": "onSubmitCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2194,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "FormEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1703,
								"name": "DOMAttributes.onSubmitCapture"
							}
						},
						{
							"id": 1754,
							"name": "onSuspend",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2253,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ReactEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1754,
								"name": "DOMAttributes.onSuspend"
							}
						},
						{
							"id": 1755,
							"name": "onSuspendCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2254,
									"character": 24
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ReactEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1755,
								"name": "DOMAttributes.onSuspendCapture"
							}
						},
						{
							"id": 1756,
							"name": "onTimeUpdate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2255,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ReactEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1756,
								"name": "DOMAttributes.onTimeUpdate"
							}
						},
						{
							"id": 1757,
							"name": "onTimeUpdateCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2256,
									"character": 27
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ReactEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1757,
								"name": "DOMAttributes.onTimeUpdateCapture"
							}
						},
						{
							"id": 1836,
							"name": "onToggle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2351,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ToggleEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1836,
								"name": "DOMAttributes.onToggle"
							}
						},
						{
							"id": 1800,
							"name": "onTouchCancel",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2305,
									"character": 21
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "TouchEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1800,
								"name": "DOMAttributes.onTouchCancel"
							}
						},
						{
							"id": 1801,
							"name": "onTouchCancelCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2306,
									"character": 28
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "TouchEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1801,
								"name": "DOMAttributes.onTouchCancelCapture"
							}
						},
						{
							"id": 1802,
							"name": "onTouchEnd",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2307,
									"character": 18
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "TouchEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1802,
								"name": "DOMAttributes.onTouchEnd"
							}
						},
						{
							"id": 1803,
							"name": "onTouchEndCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2308,
									"character": 25
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "TouchEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1803,
								"name": "DOMAttributes.onTouchEndCapture"
							}
						},
						{
							"id": 1804,
							"name": "onTouchMove",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2309,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "TouchEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1804,
								"name": "DOMAttributes.onTouchMove"
							}
						},
						{
							"id": 1805,
							"name": "onTouchMoveCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2310,
									"character": 26
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "TouchEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1805,
								"name": "DOMAttributes.onTouchMoveCapture"
							}
						},
						{
							"id": 1806,
							"name": "onTouchStart",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2311,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "TouchEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1806,
								"name": "DOMAttributes.onTouchStart"
							}
						},
						{
							"id": 1807,
							"name": "onTouchStartCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2312,
									"character": 27
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "TouchEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1807,
								"name": "DOMAttributes.onTouchStartCapture"
							}
						},
						{
							"id": 1838,
							"name": "onTransitionCancel",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2355,
									"character": 26
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "TransitionEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1838,
								"name": "DOMAttributes.onTransitionCancel"
							}
						},
						{
							"id": 1839,
							"name": "onTransitionCancelCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2356,
									"character": 33
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "TransitionEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1839,
								"name": "DOMAttributes.onTransitionCancelCapture"
							}
						},
						{
							"id": 1840,
							"name": "onTransitionEnd",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2357,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "TransitionEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1840,
								"name": "DOMAttributes.onTransitionEnd"
							}
						},
						{
							"id": 1841,
							"name": "onTransitionEndCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2358,
									"character": 30
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "TransitionEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1841,
								"name": "DOMAttributes.onTransitionEndCapture"
							}
						},
						{
							"id": 1842,
							"name": "onTransitionRun",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2359,
									"character": 23
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "TransitionEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1842,
								"name": "DOMAttributes.onTransitionRun"
							}
						},
						{
							"id": 1843,
							"name": "onTransitionRunCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2360,
									"character": 30
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "TransitionEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1843,
								"name": "DOMAttributes.onTransitionRunCapture"
							}
						},
						{
							"id": 1844,
							"name": "onTransitionStart",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2361,
									"character": 25
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "TransitionEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1844,
								"name": "DOMAttributes.onTransitionStart"
							}
						},
						{
							"id": 1845,
							"name": "onTransitionStartCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2362,
									"character": 32
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "TransitionEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1845,
								"name": "DOMAttributes.onTransitionStartCapture"
							}
						},
						{
							"id": 1758,
							"name": "onVolumeChange",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2257,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ReactEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1758,
								"name": "DOMAttributes.onVolumeChange"
							}
						},
						{
							"id": 1759,
							"name": "onVolumeChangeCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2258,
									"character": 29
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ReactEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1759,
								"name": "DOMAttributes.onVolumeChangeCapture"
							}
						},
						{
							"id": 1760,
							"name": "onWaiting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2259,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ReactEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1760,
								"name": "DOMAttributes.onWaiting"
							}
						},
						{
							"id": 1761,
							"name": "onWaitingCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2260,
									"character": 24
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "ReactEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1761,
								"name": "DOMAttributes.onWaitingCapture"
							}
						},
						{
							"id": 1828,
							"name": "onWheel",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2339,
									"character": 15
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "WheelEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1828,
								"name": "DOMAttributes.onWheel"
							}
						},
						{
							"id": 1829,
							"name": "onWheelCapture",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2340,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "WheelEventHandler"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1829,
								"name": "DOMAttributes.onWheelCapture"
							}
						},
						{
							"id": 1616,
							"name": "popover",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2734,
									"character": 15
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": ""
									},
									{
										"type": "stringLiteral",
										"value": "auto"
									},
									{
										"type": "stringLiteral",
										"value": "manual"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1616,
								"name": "HTMLAttributes.popover"
							}
						},
						{
							"id": 1618,
							"name": "popoverTarget",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2736,
									"character": 21
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1618,
								"name": "HTMLAttributes.popoverTarget"
							}
						},
						{
							"id": 1617,
							"name": "popoverTargetAction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2735,
									"character": 27
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "toggle"
									},
									{
										"type": "stringLiteral",
										"value": "show"
									},
									{
										"type": "stringLiteral",
										"value": "hide"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1617,
								"name": "HTMLAttributes.popoverTargetAction"
							}
						},
						{
							"id": 1598,
							"name": "prefix",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2712,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1598,
								"name": "HTMLAttributes.prefix"
							}
						},
						{
							"id": 1599,
							"name": "property",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2713,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1599,
								"name": "HTMLAttributes.property"
							}
						},
						{
							"id": 1592,
							"name": "radioGroup",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2702,
									"character": 18
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1592,
								"name": "HTMLAttributes.radioGroup"
							}
						},
						{
							"id": 1600,
							"name": "rel",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2714,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1600,
								"name": "HTMLAttributes.rel"
							}
						},
						{
							"id": 1601,
							"name": "resource",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2715,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1601,
								"name": "HTMLAttributes.resource"
							}
						},
						{
							"id": 1613,
							"name": "results",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2729,
									"character": 15
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1613,
								"name": "HTMLAttributes.results"
							}
						},
						{
							"id": 1602,
							"name": "rev",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2716,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1602,
								"name": "HTMLAttributes.rev"
							}
						},
						{
							"id": 1593,
							"name": "role",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2705,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "AriaRole"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1593,
								"name": "HTMLAttributes.role"
							}
						},
						{
							"id": 1614,
							"name": "security",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2730,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1614,
								"name": "HTMLAttributes.security"
							}
						},
						{
							"id": 1586,
							"name": "slot",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2694,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1586,
								"name": "HTMLAttributes.slot"
							}
						},
						{
							"id": 1587,
							"name": "spellCheck",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2695,
									"character": 18
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Booleanish"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1587,
								"name": "HTMLAttributes.spellCheck"
							}
						},
						{
							"id": 1588,
							"name": "style",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2696,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "CSSProperties"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1588,
								"name": "HTMLAttributes.style"
							}
						},
						{
							"id": 1570,
							"name": "suppressContentEditableWarning",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2677,
									"character": 38
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1570,
								"name": "HTMLAttributes.suppressContentEditableWarning"
							}
						},
						{
							"id": 1571,
							"name": "suppressHydrationWarning",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2678,
									"character": 32
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1571,
								"name": "HTMLAttributes.suppressHydrationWarning"
							}
						},
						{
							"id": 1589,
							"name": "tabIndex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2697,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1589,
								"name": "HTMLAttributes.tabIndex"
							}
						},
						{
							"id": 1590,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2698,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1590,
								"name": "HTMLAttributes.title"
							}
						},
						{
							"id": 1591,
							"name": "translate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2699,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "yes"
									},
									{
										"type": "stringLiteral",
										"value": "no"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1591,
								"name": "HTMLAttributes.translate"
							}
						},
						{
							"id": 1603,
							"name": "typeof",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2717,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1603,
								"name": "HTMLAttributes.typeof"
							}
						},
						{
							"id": 1615,
							"name": "unselectable",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2731,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "on"
									},
									{
										"type": "stringLiteral",
										"value": "off"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1615,
								"name": "HTMLAttributes.unselectable"
							}
						},
						{
							"id": 1604,
							"name": "vocab",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/react/ts5.0/index.d.ts",
									"line": 2718,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1604,
								"name": "HTMLAttributes.vocab"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1594,
								1572,
								1622,
								1623,
								1624,
								1625,
								1626,
								1627,
								1628,
								1629,
								1630,
								1631,
								1632,
								1633,
								1634,
								1635,
								1636,
								1637,
								1638,
								1639,
								1640,
								1641,
								1642,
								1643,
								1644,
								1645,
								1646,
								1647,
								1566,
								1648,
								1649,
								1650,
								1651,
								1652,
								1653,
								1654,
								1655,
								1656,
								1657,
								1658,
								1659,
								1660,
								1661,
								1662,
								1663,
								1664,
								1665,
								1666,
								1667,
								1668,
								1669,
								1670,
								1671,
								1672,
								1673,
								1573,
								1605,
								1575,
								1606,
								1674,
								1576,
								1607,
								1595,
								1577,
								1578,
								1675,
								1567,
								1565,
								1596,
								1568,
								1569,
								1579,
								1580,
								1581,
								1582,
								1583,
								1619,
								1597,
								1620,
								1621,
								1611,
								1608,
								1612,
								1609,
								1610,
								1584,
								1585,
								1716,
								1717,
								1832,
								1833,
								1834,
								1835,
								1830,
								1831,
								1762,
								1763,
								1696,
								1697,
								1837,
								1692,
								1693,
								1718,
								1719,
								1720,
								1721,
								1694,
								1695,
								1764,
								1765,
								1684,
								1685,
								1686,
								1687,
								1688,
								1689,
								1766,
								1767,
								1678,
								1679,
								1680,
								1681,
								1768,
								1769,
								1770,
								1771,
								1772,
								1773,
								1774,
								1775,
								1776,
								1777,
								1778,
								1779,
								1780,
								1781,
								1782,
								1783,
								1784,
								1785,
								1722,
								1723,
								1724,
								1725,
								1726,
								1727,
								1728,
								1729,
								1708,
								1709,
								1690,
								1691,
								1822,
								1823,
								1698,
								1699,
								1704,
								1705,
								1710,
								1711,
								1712,
								1713,
								1714,
								1715,
								1706,
								1707,
								1734,
								1735,
								1730,
								1731,
								1732,
								1733,
								1824,
								1825,
								1786,
								1787,
								1788,
								1789,
								1790,
								1791,
								1792,
								1793,
								1794,
								1795,
								1796,
								1797,
								1682,
								1683,
								1736,
								1737,
								1738,
								1739,
								1740,
								1741,
								1814,
								1815,
								1808,
								1809,
								1816,
								1817,
								1810,
								1811,
								1820,
								1821,
								1818,
								1819,
								1812,
								1813,
								1742,
								1743,
								1744,
								1745,
								1700,
								1701,
								1746,
								1747,
								1826,
								1827,
								1748,
								1749,
								1750,
								1751,
								1798,
								1799,
								1752,
								1753,
								1702,
								1703,
								1754,
								1755,
								1756,
								1757,
								1836,
								1800,
								1801,
								1802,
								1803,
								1804,
								1805,
								1806,
								1807,
								1838,
								1839,
								1840,
								1841,
								1842,
								1843,
								1844,
								1845,
								1758,
								1759,
								1760,
								1761,
								1828,
								1829,
								1616,
								1618,
								1617,
								1598,
								1599,
								1592,
								1600,
								1601,
								1613,
								1602,
								1593,
								1614,
								1586,
								1587,
								1588,
								1570,
								1571,
								1589,
								1590,
								1591,
								1603,
								1615,
								1604
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/components/drag-and-drop.d.ts",
							"line": 3,
							"character": 40
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "HTMLDivElement"
								}
							],
							"name": "HTMLAttributes"
						}
					]
				},
				{
					"id": 1864,
					"name": "DraggableEvent",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/schedule/components/drag-and-drop.d.ts",
							"line": 18,
							"character": 35
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "NamedExoticComponent"
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1846,
						1564
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1864
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/components/drag-and-drop.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1865,
			"name": "\"schedule/components/month-cells.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/components/month-cells.d.ts",
			"children": [
				{
					"id": 1866,
					"name": "MonthCells",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/schedule/components/month-cells.d.ts",
							"line": 3,
							"character": 31
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 1103,
								"name": "MonthCellsProps"
							}
						],
						"name": "FC"
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1866
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/components/month-cells.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1867,
			"name": "\"schedule/components/month-row.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/components/month-row.d.ts",
			"children": [
				{
					"id": 1868,
					"name": "MonthRow",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/schedule/components/month-row.d.ts",
							"line": 2,
							"character": 29
						}
					],
					"type": {
						"type": "reference",
						"name": "FC"
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1868
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/components/month-row.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3319,
			"name": "\"schedule/components/popup/more-popup.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/components/popup/more-popup.d.ts",
			"children": [
				{
					"id": 3320,
					"name": "IMorePopup",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Interface for the MorePopup component"
					},
					"children": [
						{
							"id": 3321,
							"name": "open",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Open the popup to show more events"
							},
							"sources": [
								{
									"fileName": "src/schedule/components/popup/more-popup.d.ts",
									"line": 10,
									"character": 8
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3322,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 3323,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 3324,
													"name": "date",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"name": "Date"
													}
												},
												{
													"id": 3325,
													"name": "events",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 268,
															"name": "EventModel"
														}
													}
												},
												{
													"id": 3326,
													"name": "element",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"name": "HTMLElement"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/components/popup/more-popup.d.ts",
											"line": 10,
											"character": 9
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3321
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/components/popup/more-popup.d.ts",
							"line": 6,
							"character": 27
						}
					]
				},
				{
					"id": 3327,
					"name": "MorePopup",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "MorePopup component for displaying additional events in month view"
					},
					"sources": [
						{
							"fileName": "src/schedule/components/popup/more-popup.d.ts",
							"line": 24,
							"character": 30
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "MorePopupProps"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 3320,
												"name": "IMorePopup"
											}
										],
										"name": "RefAttributes"
									}
								]
							}
						],
						"name": "ForwardRefExoticComponent"
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						3320
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						3327
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/components/popup/more-popup.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3328,
			"name": "\"schedule/components/popup/quick-info-popup.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/components/popup/quick-info-popup.d.ts",
			"children": [
				{
					"id": 3340,
					"name": "BaseImperativeHandleMethods",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Shared popup utility function type for creating base imperative handle methods"
					},
					"children": [
						{
							"id": 3347,
							"name": "element",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/components/popup/quick-info-popup.d.ts",
									"line": 35,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "HTMLDivElement"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						},
						{
							"id": 3344,
							"name": "hide",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/components/popup/quick-info-popup.d.ts",
									"line": 34,
									"character": 8
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3345,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 3346,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/components/popup/quick-info-popup.d.ts",
											"line": 34,
											"character": 9
										}
									]
								}
							}
						},
						{
							"id": 3341,
							"name": "show",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/components/popup/quick-info-popup.d.ts",
									"line": 33,
									"character": 8
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3342,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 3343,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/components/popup/quick-info-popup.d.ts",
											"line": 33,
											"character": 9
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3347,
								3344,
								3341
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/components/popup/quick-info-popup.d.ts",
							"line": 32,
							"character": 44
						}
					]
				},
				{
					"id": 3359,
					"name": "IQuickInfoPopup",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Interface for the QuickInfoPopup component"
					},
					"children": [
						{
							"id": 3379,
							"name": "element",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The popup DOM element"
							},
							"sources": [
								{
									"fileName": "src/schedule/components/popup/quick-info-popup.d.ts",
									"line": 64,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "HTMLDivElement"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3358,
								"name": "ISchedulePopupBase.element"
							}
						},
						{
							"id": 3376,
							"name": "focus",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Focus the popup (optional - only needed for components with focusable elements)"
							},
							"sources": [
								{
									"fileName": "src/schedule/components/popup/quick-info-popup.d.ts",
									"line": 60,
									"character": 9
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3377,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 3378,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/components/popup/quick-info-popup.d.ts",
											"line": 60,
											"character": 11
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3355,
								"name": "ISchedulePopupBase.focus"
							}
						},
						{
							"id": 3360,
							"name": "handleCellClick",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Handle cell click to show popup"
							},
							"sources": [
								{
									"fileName": "src/schedule/components/popup/quick-info-popup.d.ts",
									"line": 73,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3361,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 3362,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 3363,
													"name": "data",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 280,
														"name": "CellClickEvent"
													}
												},
												{
													"id": 3364,
													"name": "element",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"name": "HTMLElement"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/components/popup/quick-info-popup.d.ts",
											"line": 73,
											"character": 20
										}
									]
								}
							}
						},
						{
							"id": 3365,
							"name": "handleEventClick",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Handle event click to show popup"
							},
							"sources": [
								{
									"fileName": "src/schedule/components/popup/quick-info-popup.d.ts",
									"line": 77,
									"character": 20
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3366,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 3367,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 3368,
													"name": "data",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 268,
														"name": "EventModel"
													}
												},
												{
													"id": 3369,
													"name": "element",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"name": "HTMLElement"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/components/popup/quick-info-popup.d.ts",
											"line": 77,
											"character": 21
										}
									]
								}
							}
						},
						{
							"id": 3373,
							"name": "hide",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Hide the popup"
							},
							"sources": [
								{
									"fileName": "src/schedule/components/popup/quick-info-popup.d.ts",
									"line": 56,
									"character": 8
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3374,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 3375,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/components/popup/quick-info-popup.d.ts",
											"line": 56,
											"character": 9
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3352,
								"name": "ISchedulePopupBase.hide"
							}
						},
						{
							"id": 3370,
							"name": "show",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Show the popup"
							},
							"sources": [
								{
									"fileName": "src/schedule/components/popup/quick-info-popup.d.ts",
									"line": 52,
									"character": 8
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3371,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 3372,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/components/popup/quick-info-popup.d.ts",
											"line": 52,
											"character": 9
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3349,
								"name": "ISchedulePopupBase.show"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3379,
								3376,
								3360,
								3365,
								3373,
								3370
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/components/popup/quick-info-popup.d.ts",
							"line": 69,
							"character": 32
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3348,
							"name": "ISchedulePopupBase"
						}
					]
				},
				{
					"id": 3348,
					"name": "ISchedulePopupBase",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Base interface for schedule popup components"
					},
					"children": [
						{
							"id": 3358,
							"name": "element",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The popup DOM element"
							},
							"sources": [
								{
									"fileName": "src/schedule/components/popup/quick-info-popup.d.ts",
									"line": 64,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "HTMLDivElement"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						},
						{
							"id": 3355,
							"name": "focus",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Focus the popup (optional - only needed for components with focusable elements)"
							},
							"sources": [
								{
									"fileName": "src/schedule/components/popup/quick-info-popup.d.ts",
									"line": 60,
									"character": 9
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3356,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 3357,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/components/popup/quick-info-popup.d.ts",
											"line": 60,
											"character": 11
										}
									]
								}
							}
						},
						{
							"id": 3352,
							"name": "hide",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Hide the popup"
							},
							"sources": [
								{
									"fileName": "src/schedule/components/popup/quick-info-popup.d.ts",
									"line": 56,
									"character": 8
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3353,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 3354,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/components/popup/quick-info-popup.d.ts",
											"line": 56,
											"character": 9
										}
									]
								}
							}
						},
						{
							"id": 3349,
							"name": "show",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Show the popup"
							},
							"sources": [
								{
									"fileName": "src/schedule/components/popup/quick-info-popup.d.ts",
									"line": 52,
									"character": 8
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3350,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 3351,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/components/popup/quick-info-popup.d.ts",
											"line": 52,
											"character": 9
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3358,
								3355,
								3352,
								3349
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/components/popup/quick-info-popup.d.ts",
							"line": 48,
							"character": 35
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 3359,
							"name": "IQuickInfoPopup"
						}
					]
				},
				{
					"id": 3329,
					"name": "PopupWrapperProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Props interface for PopupWrapper component"
					},
					"children": [
						{
							"id": 3339,
							"name": "children",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/components/popup/quick-info-popup.d.ts",
									"line": 20,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "ReactNode"
							}
						},
						{
							"id": 3333,
							"name": "onClose",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/components/popup/quick-info-popup.d.ts",
									"line": 18,
									"character": 11
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3334,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 3335,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/components/popup/quick-info-popup.d.ts",
											"line": 18,
											"character": 12
										}
									]
								}
							}
						},
						{
							"id": 3336,
							"name": "onOpen",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/components/popup/quick-info-popup.d.ts",
									"line": 19,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3337,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 3338,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/components/popup/quick-info-popup.d.ts",
											"line": 19,
											"character": 12
										}
									]
								}
							}
						},
						{
							"id": 3332,
							"name": "scheduleElement",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/components/popup/quick-info-popup.d.ts",
									"line": 17,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								],
								"name": "RefObject"
							}
						},
						{
							"id": 3331,
							"name": "target",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/components/popup/quick-info-popup.d.ts",
									"line": 16,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "HTMLElement"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						},
						{
							"id": 3330,
							"name": "visible",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/components/popup/quick-info-popup.d.ts",
									"line": 15,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3339,
								3333,
								3336,
								3332,
								3331,
								3330
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/components/popup/quick-info-popup.d.ts",
							"line": 14,
							"character": 34
						}
					]
				},
				{
					"id": 3380,
					"name": "QuickInfoPopupProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Props for the QuickInfoPopup component"
					},
					"children": [
						{
							"id": 3389,
							"name": "onClose",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback to close the popup"
							},
							"sources": [
								{
									"fileName": "src/schedule/components/popup/quick-info-popup.d.ts",
									"line": 94,
									"character": 11
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3390,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 3391,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/components/popup/quick-info-popup.d.ts",
											"line": 94,
											"character": 13
										}
									]
								}
							}
						},
						{
							"id": 3381,
							"name": "onDataChange",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback when data changes"
							},
							"sources": [
								{
									"fileName": "src/schedule/components/popup/quick-info-popup.d.ts",
									"line": 86,
									"character": 16
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3382,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 3383,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 3384,
													"name": "data",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 268,
														"name": "EventModel"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/components/popup/quick-info-popup.d.ts",
											"line": 86,
											"character": 18
										}
									]
								}
							}
						},
						{
							"id": 3385,
							"name": "onEdit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback on edit"
							},
							"sources": [
								{
									"fileName": "src/schedule/components/popup/quick-info-popup.d.ts",
									"line": 90,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3386,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 3387,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 3388,
													"name": "data",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 268,
														"name": "EventModel"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/components/popup/quick-info-popup.d.ts",
											"line": 90,
											"character": 12
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3389,
								3381,
								3385
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/components/popup/quick-info-popup.d.ts",
							"line": 82,
							"character": 36
						}
					]
				},
				{
					"id": 3399,
					"name": "PopupWrapper",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Shared popup wrapper component",
						"tags": [
							{
								"tag": "param",
								"text": "The component props",
								"param": "props"
							},
							{
								"tag": "returns",
								"text": "The popup wrapper\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/schedule/components/popup/quick-info-popup.d.ts",
							"line": 28,
							"character": 33
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 3329,
								"name": "PopupWrapperProps"
							}
						],
						"name": "FC"
					}
				},
				{
					"id": 3405,
					"name": "QuickInfoPopup",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Combined QuickInfoPopup component that handles both cell and event popups"
					},
					"sources": [
						{
							"fileName": "src/schedule/components/popup/quick-info-popup.d.ts",
							"line": 99,
							"character": 35
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 3380,
										"name": "QuickInfoPopupProps"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 3359,
												"name": "IQuickInfoPopup"
											}
										],
										"name": "RefAttributes"
									}
								]
							}
						],
						"name": "ForwardRefExoticComponent"
					}
				},
				{
					"id": 3400,
					"name": "createBaseImperativeHandle",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Shared utility function to create base imperative handle methods",
						"tags": [
							{
								"tag": "param",
								"text": "The setVisible function",
								"param": "setVisible"
							},
							{
								"tag": "param",
								"text": "The popup element ref",
								"param": "popupElement"
							},
							{
								"tag": "returns",
								"text": "The base imperative handle methods\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/schedule/components/popup/quick-info-popup.d.ts",
							"line": 44,
							"character": 47
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3401,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3402,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3403,
											"name": "setVisible",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "boolean"
															}
														],
														"name": "SetStateAction"
													}
												],
												"name": "Dispatch"
											}
										},
										{
											"id": 3404,
											"name": "popupElement",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "HTMLDivElement"
													}
												],
												"name": "RefObject"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3340,
										"name": "BaseImperativeHandleMethods"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/components/popup/quick-info-popup.d.ts",
									"line": 44,
									"character": 48
								}
							]
						}
					}
				},
				{
					"id": 3392,
					"name": "renderPopupCloseButton",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Shared utility function to render close button for popups",
						"tags": [
							{
								"tag": "param",
								"text": "The close handler function",
								"param": "onClose"
							},
							{
								"tag": "param",
								"text": "The aria-label for accessibility (default: 'Close')",
								"param": "ariaLabel"
							},
							{
								"tag": "returns",
								"text": "The close button element\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/schedule/components/popup/quick-info-popup.d.ts",
							"line": 10,
							"character": 43
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3393,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3394,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3395,
											"name": "onClose",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3396,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 3397,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "src/schedule/components/popup/quick-info-popup.d.ts",
															"line": 10,
															"character": 54
														}
													]
												}
											}
										},
										{
											"id": 3398,
											"name": "ariaLabel",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ReactElement"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/components/popup/quick-info-popup.d.ts",
									"line": 10,
									"character": 44
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						3340,
						3359,
						3348,
						3329,
						3380
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						3399,
						3405,
						3400,
						3392
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/components/popup/quick-info-popup.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1869,
			"name": "\"schedule/components/schedule-toolbar.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/components/schedule-toolbar.d.ts",
			"children": [
				{
					"id": 1870,
					"name": "ScheduleToolbar",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Schedule toolbar component for navigation and view switching",
						"tags": [
							{
								"tag": "param",
								"text": "Component props",
								"param": "props"
							},
							{
								"tag": "returns",
								"text": "Rendered toolbar component\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/schedule/components/schedule-toolbar.d.ts",
							"line": 69,
							"character": 36
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "ScheduleToolbarProps"
							}
						],
						"name": "FC"
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1870
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/components/schedule-toolbar.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1871,
			"name": "\"schedule/components/time-cells.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/components/time-cells.d.ts",
			"children": [
				{
					"id": 1872,
					"name": "TimeCells",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/schedule/components/time-cells.d.ts",
							"line": 3,
							"character": 30
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 1057,
								"name": "TimeCellsProps"
							}
						],
						"name": "FC"
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1872
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/components/time-cells.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1873,
			"name": "\"schedule/components/time-slot-event.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/components/time-slot-event.d.ts",
			"children": [
				{
					"id": 1874,
					"name": "TimeSlotEvent",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/schedule/components/time-slot-event.d.ts",
							"line": 2,
							"character": 34
						}
					],
					"type": {
						"type": "reference",
						"name": "FC"
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1874
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/components/time-slot-event.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1875,
			"name": "\"schedule/components/week-day-header.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/components/week-day-header.d.ts",
			"children": [
				{
					"id": 1876,
					"name": "WeekDayHeader",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/schedule/components/week-day-header.d.ts",
							"line": 2,
							"character": 34
						}
					],
					"type": {
						"type": "reference",
						"name": "FC"
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1876
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/components/week-day-header.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1877,
			"name": "\"schedule/components/work-cells.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/components/work-cells.d.ts",
			"children": [
				{
					"id": 1878,
					"name": "WorkCells",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/schedule/components/work-cells.d.ts",
							"line": 2,
							"character": 30
						}
					],
					"type": {
						"type": "reference",
						"name": "FC"
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1878
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/components/work-cells.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1879,
			"name": "\"schedule/context/schedule-context.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/context/schedule-context.d.ts",
			"children": [
				{
					"id": 1880,
					"name": "ScheduleContext",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/schedule/context/schedule-context.d.ts",
							"line": 3,
							"character": 36
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 915,
										"name": "ActiveViewProps"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						],
						"name": "Context"
					}
				},
				{
					"id": 1881,
					"name": "useSchedulePropsContext",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Hook for using the Schedule context.",
						"tags": [
							{
								"tag": "returns",
								"text": "The Schedule context.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/schedule/context/schedule-context.d.ts",
							"line": 9,
							"character": 44
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1882,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1883,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 915,
										"name": "ActiveViewProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/context/schedule-context.d.ts",
									"line": 9,
									"character": 45
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1880,
						1881
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/context/schedule-context.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1884,
			"name": "\"schedule/context/schedule-events-context.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/context/schedule-events-context.d.ts",
			"children": [
				{
					"id": 1885,
					"name": "ScheduleEventsContext",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/schedule/context/schedule-events-context.d.ts",
							"line": 3,
							"character": 42
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 1886,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 1887,
													"name": "eventsData",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/schedule/context/schedule-events-context.d.ts",
															"line": 4,
															"character": 14
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 268,
															"name": "EventModel"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1887
													]
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/context/schedule-events-context.d.ts",
													"line": 3,
													"character": 52
												}
											]
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						],
						"name": "Context"
					}
				},
				{
					"id": 1888,
					"name": "useScheduleEventsContext",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Hook for using the Schedule events data context.",
						"tags": [
							{
								"tag": "returns",
								"text": "The Schedule events data context.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/schedule/context/schedule-events-context.d.ts",
							"line": 11,
							"character": 45
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1889,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1890,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1891,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 1892,
													"name": "eventsData",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/schedule/context/schedule-events-context.d.ts",
															"line": 12,
															"character": 14
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 268,
															"name": "EventModel"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1892
													]
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/context/schedule-events-context.d.ts",
													"line": 11,
													"character": 52
												}
											]
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/context/schedule-events-context.d.ts",
									"line": 11,
									"character": 46
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1885,
						1888
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/context/schedule-events-context.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1893,
			"name": "\"schedule/context/schedule-render-dates-context.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/context/schedule-render-dates-context.d.ts",
			"children": [
				{
					"id": 1894,
					"name": "ScheduleRenderDatesContext",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/schedule/context/schedule-render-dates-context.d.ts",
							"line": 2,
							"character": 47
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 1895,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 1896,
													"name": "renderDates",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/schedule/context/schedule-render-dates-context.d.ts",
															"line": 3,
															"character": 15
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "Date"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1896
													]
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/context/schedule-render-dates-context.d.ts",
													"line": 2,
													"character": 57
												}
											]
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						],
						"name": "Context"
					}
				},
				{
					"id": 1897,
					"name": "useScheduleRenderDatesContext",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Hook for using the Schedule render dates context.",
						"tags": [
							{
								"tag": "returns",
								"text": "The Schedule render dates context.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/schedule/context/schedule-render-dates-context.d.ts",
							"line": 10,
							"character": 50
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1898,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1899,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1900,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 1901,
													"name": "renderDates",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/schedule/context/schedule-render-dates-context.d.ts",
															"line": 11,
															"character": 15
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "Date"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1901
													]
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/context/schedule-render-dates-context.d.ts",
													"line": 10,
													"character": 57
												}
											]
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/context/schedule-render-dates-context.d.ts",
									"line": 10,
									"character": 51
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1894,
						1897
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/context/schedule-render-dates-context.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1217,
			"name": "\"schedule/hooks/useAllDayEvents\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/hooks/useAllDayEvents.ts",
			"children": [
				{
					"id": 1218,
					"name": "useAllDayEvents",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Process all-day events and provide related functionalities",
						"returns": "Processed events data and related functions\n"
					},
					"signatures": [
						{
							"id": 1219,
							"name": "useAllDayEvents",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Process all-day events and provide related functionalities",
								"returns": "Processed events data and related functions\n"
							},
							"parameters": [
								{
									"id": 1220,
									"name": "isCollapsed",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Whether the all-day row is collapsed"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1221,
									"name": "maxEventsPerRow",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Maximum number of events to display per cell"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "2"
								}
							],
							"type": {
								"type": "reference",
								"name": "AllDayEventsResult"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/useAllDayEvents.ts",
							"line": 128,
							"character": 28
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1218
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/hooks/useAllDayEvents.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1902,
			"name": "\"schedule/hooks/useAllDayEvents.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/hooks/useAllDayEvents.d.ts",
			"children": [
				{
					"id": 1903,
					"name": "useAllDayEvents",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Process all-day events and provide related functionalities",
						"tags": [
							{
								"tag": "param",
								"text": "Whether the all-day row is collapsed",
								"param": "isCollapsed"
							},
							{
								"tag": "param",
								"text": "Maximum number of events to display per cell",
								"param": "maxEventsPerRow"
							},
							{
								"tag": "returns",
								"text": "Processed events data and related functions\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/schedule/hooks/useAllDayEvents.d.ts",
							"line": 62,
							"character": 36
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1904,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1905,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 1906,
											"name": "isCollapsed",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1907,
											"name": "maxEventsPerRow",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "AllDayEventsResult"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/hooks/useAllDayEvents.d.ts",
									"line": 62,
									"character": 37
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1903
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/hooks/useAllDayEvents.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1143,
			"name": "\"schedule/hooks/useData\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/hooks/useData.ts",
			"children": [
				{
					"id": 1144,
					"name": "useData",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Custom hook to manage data operations for the schedule",
						"returns": "Object containing APIs for data operations\n"
					},
					"signatures": [
						{
							"id": 1145,
							"name": "useData",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Custom hook to manage data operations for the schedule",
								"returns": "Object containing APIs for data operations\n"
							},
							"parameters": [
								{
									"id": 1146,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Schedule useData hook props."
									},
									"type": {
										"type": "reference",
										"name": "UseDataProps"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "UseDataResult"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/useData.ts",
							"line": 59,
							"character": 20
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1144
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/hooks/useData.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1908,
			"name": "\"schedule/hooks/useData.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/hooks/useData.d.ts",
			"children": [
				{
					"id": 1909,
					"name": "useData",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Custom hook to manage data operations for the schedule",
						"tags": [
							{
								"tag": "param",
								"text": "Schedule useData hook props.",
								"param": "props"
							},
							{
								"tag": "returns",
								"text": "Object containing APIs for data operations\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/schedule/hooks/useData.d.ts",
							"line": 35,
							"character": 28
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1910,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1911,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 1912,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "UseDataProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "UseDataResult"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/hooks/useData.d.ts",
									"line": 35,
									"character": 29
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1909
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/hooks/useData.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 898,
			"name": "\"schedule/hooks/useDateHeader\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/hooks/useDateHeader.ts",
			"children": [
				{
					"id": 899,
					"name": "DateHeaderCell",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Interface for date header cell data"
					},
					"children": [
						{
							"id": 905,
							"name": "className",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "CSS class names for the cell"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useDateHeader.ts",
									"line": 39,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 900,
							"name": "date",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The date for this cell"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useDateHeader.ts",
									"line": 14,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							}
						},
						{
							"id": 902,
							"name": "dateNumber",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The date for this cell"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useDateHeader.ts",
									"line": 24,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 901,
							"name": "dayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Display name of the weekday"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useDateHeader.ts",
									"line": 19,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 903,
							"name": "isToday",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Whether this date is today"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useDateHeader.ts",
									"line": 29,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 904,
							"name": "isWeekend",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Whether this date is a weekend"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useDateHeader.ts",
									"line": 34,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 906,
							"name": "key",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Unique key for React rendering"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useDateHeader.ts",
									"line": 44,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								905,
								900,
								902,
								901,
								903,
								904,
								906
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/useDateHeader.ts",
							"line": 10,
							"character": 31
						}
					]
				},
				{
					"id": 907,
					"name": "useDateHeader",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 908,
							"name": "useDateHeader",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Custom hook for date header logic",
								"returns": "Date header data and functions\n"
							},
							"type": {
								"type": "reference",
								"name": "DateHeaderResult"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/useDateHeader.ts",
							"line": 88,
							"character": 29
						}
					]
				},
				{
					"id": 909,
					"name": "useNavigate",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 910,
							"name": "useNavigate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Custom hook for date navigation logic",
								"returns": "Date header data and functions\n"
							},
							"type": {
								"type": "reference",
								"name": "NavigateResult"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/useDateHeader.ts",
							"line": 158,
							"character": 27
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						899
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						907,
						909
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/hooks/useDateHeader.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1913,
			"name": "\"schedule/hooks/useDateHeader.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/hooks/useDateHeader.d.ts",
			"children": [
				{
					"id": 1914,
					"name": "DateHeaderCell",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Interface for date header cell data"
					},
					"children": [
						{
							"id": 1920,
							"name": "className",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "CSS class names for the cell"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useDateHeader.d.ts",
									"line": 28,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1915,
							"name": "date",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The date for this cell"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useDateHeader.d.ts",
									"line": 8,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							}
						},
						{
							"id": 1917,
							"name": "dateNumber",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The date for this cell"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useDateHeader.d.ts",
									"line": 16,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1916,
							"name": "dayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Display name of the weekday"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useDateHeader.d.ts",
									"line": 12,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1918,
							"name": "isToday",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Whether this date is today"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useDateHeader.d.ts",
									"line": 20,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1919,
							"name": "isWeekend",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Whether this date is a weekend"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useDateHeader.d.ts",
									"line": 24,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1921,
							"name": "key",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Unique key for React rendering"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useDateHeader.d.ts",
									"line": 32,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1920,
								1915,
								1917,
								1916,
								1918,
								1919,
								1921
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/useDateHeader.d.ts",
							"line": 4,
							"character": 31
						}
					]
				},
				{
					"id": 1922,
					"name": "useDateHeader",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1923,
							"name": "useDateHeader",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Custom hook for date header logic",
								"returns": "Date header data and functions\n"
							},
							"type": {
								"type": "reference",
								"name": "DateHeaderResult"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/useDateHeader.d.ts",
							"line": 69,
							"character": 37
						}
					]
				},
				{
					"id": 1924,
					"name": "useNavigate",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1925,
							"name": "useNavigate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Custom hook for date navigation logic",
								"returns": "Date header data and functions\n"
							},
							"type": {
								"type": "reference",
								"name": "NavigateResult"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/useDateHeader.d.ts",
							"line": 84,
							"character": 35
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1914
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1922,
						1924
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/hooks/useDateHeader.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1222,
			"name": "\"schedule/hooks/useEventPositioning\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/hooks/useEventPositioning.ts",
			"children": [
				{
					"id": 1223,
					"name": "useEventPositioning",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Custom hook to calculate positioning for event elements",
						"returns": "- Positioning data for the event\n"
					},
					"signatures": [
						{
							"id": 1224,
							"name": "useEventPositioning",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Custom hook to calculate positioning for event elements",
								"returns": "- Positioning data for the event\n"
							},
							"parameters": [
								{
									"id": 1225,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The props for event positioning"
									},
									"type": {
										"type": "reference",
										"name": "UseEventPositioningProps"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "UseEventPositioningResult"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/useEventPositioning.ts",
							"line": 62,
							"character": 32
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1223
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/hooks/useEventPositioning.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1926,
			"name": "\"schedule/hooks/useEventPositioning.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/hooks/useEventPositioning.d.ts",
			"children": [
				{
					"id": 1927,
					"name": "useEventPositioning",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Custom hook to calculate positioning for event elements",
						"tags": [
							{
								"tag": "param",
								"text": "The props for event positioning",
								"param": "props"
							},
							{
								"tag": "returns",
								"text": "- Positioning data for the event\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/schedule/hooks/useEventPositioning.d.ts",
							"line": 53,
							"character": 40
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1928,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1929,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 1930,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "UseEventPositioningProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "UseEventPositioningResult"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/hooks/useEventPositioning.d.ts",
									"line": 53,
									"character": 41
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1927
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/hooks/useEventPositioning.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1317,
			"name": "\"schedule/hooks/useMonthCells\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/hooks/useMonthCells.ts",
			"children": [
				{
					"id": 1318,
					"name": "MonthCell",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Interface for month work cell data"
					},
					"children": [
						{
							"id": 1320,
							"name": "className",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "CSS class names for the cell"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useMonthCells.ts",
									"line": 24,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1319,
							"name": "date",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The date for this cell"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useMonthCells.ts",
									"line": 19,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							}
						},
						{
							"id": 1321,
							"name": "dateTimestamp",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Date timestamp for data attribute"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useMonthCells.ts",
									"line": 29,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1322,
							"name": "displayText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Formatted date display string"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useMonthCells.ts",
									"line": 34,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1323,
							"name": "key",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Unique key for React rendering"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useMonthCells.ts",
									"line": 39,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1320,
								1319,
								1321,
								1322,
								1323
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/useMonthCells.ts",
							"line": 15,
							"character": 26
						}
					]
				},
				{
					"id": 1324,
					"name": "MonthCellsResult",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Interface for month work cells hook result"
					},
					"children": [
						{
							"id": 1326,
							"name": "handleCellClick",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Handle cell click for event creation"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useMonthCells.ts",
									"line": 54,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1327,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1328,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1329,
													"name": "e",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"name": "HTMLElement"
															}
														],
														"name": "MouseEvent"
													}
												},
												{
													"id": 1330,
													"name": "date",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"name": "Date"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/useMonthCells.ts",
											"line": 54,
											"character": 20
										}
									]
								}
							}
						},
						{
							"id": 1331,
							"name": "handleCellDoubleClick",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Handle cell click for event creation"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useMonthCells.ts",
									"line": 59,
									"character": 25
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1332,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1333,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1334,
													"name": "e",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"name": "HTMLElement"
															}
														],
														"name": "MouseEvent"
													}
												},
												{
													"id": 1335,
													"name": "date",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"name": "Date"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/useMonthCells.ts",
											"line": 59,
											"character": 26
										}
									]
								}
							}
						},
						{
							"id": 1336,
							"name": "handleMoreClick",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Handle more click for more event creation"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useMonthCells.ts",
									"line": 64,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1337,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1338,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1339,
													"name": "e",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"name": "HTMLElement"
															}
														],
														"name": "MouseEvent"
													}
												},
												{
													"id": 1340,
													"name": "date",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"name": "Date"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/useMonthCells.ts",
											"line": 64,
											"character": 20
										}
									]
								}
							}
						},
						{
							"id": 1325,
							"name": "workCells",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Processed data for month work cells"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useMonthCells.ts",
									"line": 49,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1318,
									"name": "MonthCell"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1326,
								1331,
								1336,
								1325
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/useMonthCells.ts",
							"line": 45,
							"character": 33
						}
					]
				},
				{
					"id": 1341,
					"name": "useMonthCells",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1342,
							"name": "useMonthCells",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Custom hook for month work cells logic",
								"returns": "Month cells data and functions\n"
							},
							"parameters": [
								{
									"id": 1343,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The props for month cells"
									},
									"type": {
										"type": "reference",
										"id": 1103,
										"name": "MonthCellsProps"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1324,
								"name": "MonthCellsResult"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/useMonthCells.ts",
							"line": 73,
							"character": 29
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1318,
						1324
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1341
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/hooks/useMonthCells.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1931,
			"name": "\"schedule/hooks/useMonthCells.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/hooks/useMonthCells.d.ts",
			"children": [
				{
					"id": 1932,
					"name": "MonthCell",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Interface for month work cell data"
					},
					"children": [
						{
							"id": 1934,
							"name": "className",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "CSS class names for the cell"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useMonthCells.d.ts",
									"line": 14,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1933,
							"name": "date",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The date for this cell"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useMonthCells.d.ts",
									"line": 10,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							}
						},
						{
							"id": 1935,
							"name": "dateTimestamp",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Date timestamp for data attribute"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useMonthCells.d.ts",
									"line": 18,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1936,
							"name": "displayText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Formatted date display string"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useMonthCells.d.ts",
									"line": 22,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1937,
							"name": "key",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Unique key for React rendering"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useMonthCells.d.ts",
									"line": 26,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1934,
								1933,
								1935,
								1936,
								1937
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/useMonthCells.d.ts",
							"line": 6,
							"character": 26
						}
					]
				},
				{
					"id": 1938,
					"name": "MonthCellsResult",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Interface for month work cells hook result"
					},
					"children": [
						{
							"id": 1940,
							"name": "handleCellClick",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Handle cell click for event creation"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useMonthCells.d.ts",
									"line": 39,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1941,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1942,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1943,
													"name": "e",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"name": "HTMLElement"
															}
														],
														"name": "MouseEvent"
													}
												},
												{
													"id": 1944,
													"name": "date",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"name": "Date"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/useMonthCells.d.ts",
											"line": 39,
											"character": 20
										}
									]
								}
							}
						},
						{
							"id": 1945,
							"name": "handleCellDoubleClick",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Handle cell click for event creation"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useMonthCells.d.ts",
									"line": 43,
									"character": 25
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1946,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1947,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1948,
													"name": "e",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"name": "HTMLElement"
															}
														],
														"name": "MouseEvent"
													}
												},
												{
													"id": 1949,
													"name": "date",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"name": "Date"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/useMonthCells.d.ts",
											"line": 43,
											"character": 26
										}
									]
								}
							}
						},
						{
							"id": 1950,
							"name": "handleMoreClick",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Handle more click for more event creation"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useMonthCells.d.ts",
									"line": 47,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1951,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1952,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1953,
													"name": "e",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"name": "HTMLElement"
															}
														],
														"name": "MouseEvent"
													}
												},
												{
													"id": 1954,
													"name": "date",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"name": "Date"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/useMonthCells.d.ts",
											"line": 47,
											"character": 20
										}
									]
								}
							}
						},
						{
							"id": 1939,
							"name": "workCells",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Processed data for month work cells"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useMonthCells.d.ts",
									"line": 35,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1318,
									"name": "MonthCell"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1940,
								1945,
								1950,
								1939
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/useMonthCells.d.ts",
							"line": 31,
							"character": 33
						}
					]
				},
				{
					"id": 1955,
					"name": "useMonthCells",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1956,
							"name": "useMonthCells",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Custom hook for month work cells logic",
								"returns": "Month cells data and functions\n"
							},
							"parameters": [
								{
									"id": 1957,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The props for month cells"
									},
									"type": {
										"type": "reference",
										"id": 1103,
										"name": "MonthCellsProps"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1324,
								"name": "MonthCellsResult"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/useMonthCells.d.ts",
							"line": 55,
							"character": 37
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1932,
						1938
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1955
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/hooks/useMonthCells.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1278,
			"name": "\"schedule/hooks/useMonthEvents\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/hooks/useMonthEvents.ts",
			"children": [
				{
					"id": 1279,
					"name": "UseMonthEventsResult",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Interface for the result of useMonthEvents hook"
					},
					"children": [
						{
							"id": 1308,
							"name": "calculatedRowHeight",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "calculated height for a specific row"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useMonthEvents.ts",
									"line": 56,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1292,
							"name": "getAllEventsForDate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Get all events for a specific date (visible and hidden)"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useMonthEvents.ts",
									"line": 36,
									"character": 23
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1293,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1294,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1295,
													"name": "dateKey",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1116,
													"name": "ProcessedEventsData"
												}
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/useMonthEvents.ts",
											"line": 36,
											"character": 24
										}
									]
								}
							}
						},
						{
							"id": 1284,
							"name": "getAlldayBlockEvent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useMonthEvents.ts",
									"line": 26,
									"character": 23
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1285,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1286,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1287,
													"name": "dateKey",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 1116,
												"name": "ProcessedEventsData"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/useMonthEvents.ts",
											"line": 26,
											"character": 24
										}
									]
								}
							}
						},
						{
							"id": 1288,
							"name": "getHiddenEventCount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Get hidden event count for a specific date"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useMonthEvents.ts",
									"line": 31,
									"character": 23
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1289,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1290,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1291,
													"name": "dateKey",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/useMonthEvents.ts",
											"line": 31,
											"character": 24
										}
									]
								}
							}
						},
						{
							"id": 1280,
							"name": "getVisibleEvents",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Get visible events for a specific date"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useMonthEvents.ts",
									"line": 24,
									"character": 20
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1281,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1282,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1283,
													"name": "dateKey",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1116,
													"name": "ProcessedEventsData"
												}
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/useMonthEvents.ts",
											"line": 24,
											"character": 21
										}
									]
								}
							}
						},
						{
							"id": 1304,
							"name": "hasAllDayBlock",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Check if a date has an all-day block event (isBlock: true, isAllDay: true)"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useMonthEvents.ts",
									"line": 51,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1305,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1306,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1307,
													"name": "dateKey",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/useMonthEvents.ts",
											"line": 51,
											"character": 19
										}
									]
								}
							}
						},
						{
							"id": 1300,
							"name": "hasBlockIndicator",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Check if a date has a block indicator (isBlock: true, isAllDay: false)"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useMonthEvents.ts",
									"line": 46,
									"character": 21
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1301,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1302,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1303,
													"name": "dateKey",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/useMonthEvents.ts",
											"line": 46,
											"character": 22
										}
									]
								}
							}
						},
						{
							"id": 1296,
							"name": "hasMoreIndicator",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Check if a date has more events than can be displayed"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useMonthEvents.ts",
									"line": 41,
									"character": 20
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1297,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1298,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1299,
													"name": "dateKey",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/useMonthEvents.ts",
											"line": 41,
											"character": 21
										}
									]
								}
							}
						},
						{
							"id": 1309,
							"name": "sortEventsByTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Utility function to sort events by start time"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useMonthEvents.ts",
									"line": 61,
									"character": 20
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1310,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1311,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1312,
													"name": "events",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 268,
															"name": "EventModel"
														}
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 268,
													"name": "EventModel"
												}
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/useMonthEvents.ts",
											"line": 61,
											"character": 21
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1308,
								1292,
								1284,
								1288,
								1280,
								1304,
								1300,
								1296,
								1309
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/useMonthEvents.ts",
							"line": 19,
							"character": 37
						}
					]
				},
				{
					"id": 1313,
					"name": "useMonthEvents",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Process and organize events for month view rendering",
						"returns": "- Processed events data and related functions\n"
					},
					"signatures": [
						{
							"id": 1314,
							"name": "useMonthEvents",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Process and organize events for month view rendering",
								"returns": "- Processed events data and related functions\n"
							},
							"parameters": [
								{
									"id": 1315,
									"name": "renderDates",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The dates being rendered"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Date"
										}
									}
								},
								{
									"id": 1316,
									"name": "maxEventsPerRow",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Maximum number of events to display per row."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "2"
								}
							],
							"type": {
								"type": "reference",
								"id": 1279,
								"name": "UseMonthEventsResult"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/useMonthEvents.ts",
							"line": 153,
							"character": 27
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1279
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1313
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/hooks/useMonthEvents.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1958,
			"name": "\"schedule/hooks/useMonthEvents.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/hooks/useMonthEvents.d.ts",
			"children": [
				{
					"id": 1959,
					"name": "UseMonthEventsResult",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Interface for the result of useMonthEvents hook"
					},
					"children": [
						{
							"id": 1988,
							"name": "calculatedRowHeight",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "calculated height for a specific row"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useMonthEvents.d.ts",
									"line": 35,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1972,
							"name": "getAllEventsForDate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Get all events for a specific date (visible and hidden)"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useMonthEvents.d.ts",
									"line": 19,
									"character": 23
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1973,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1974,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1975,
													"name": "dateKey",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1116,
													"name": "ProcessedEventsData"
												}
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/useMonthEvents.d.ts",
											"line": 19,
											"character": 24
										}
									]
								}
							}
						},
						{
							"id": 1964,
							"name": "getAlldayBlockEvent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useMonthEvents.d.ts",
									"line": 11,
									"character": 23
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1965,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1966,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1967,
													"name": "dateKey",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 1116,
												"name": "ProcessedEventsData"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/useMonthEvents.d.ts",
											"line": 11,
											"character": 24
										}
									]
								}
							}
						},
						{
							"id": 1968,
							"name": "getHiddenEventCount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Get hidden event count for a specific date"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useMonthEvents.d.ts",
									"line": 15,
									"character": 23
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1969,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1970,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1971,
													"name": "dateKey",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/useMonthEvents.d.ts",
											"line": 15,
											"character": 24
										}
									]
								}
							}
						},
						{
							"id": 1960,
							"name": "getVisibleEvents",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Get visible events for a specific date"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useMonthEvents.d.ts",
									"line": 10,
									"character": 20
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1961,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1962,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1963,
													"name": "dateKey",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1116,
													"name": "ProcessedEventsData"
												}
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/useMonthEvents.d.ts",
											"line": 10,
											"character": 21
										}
									]
								}
							}
						},
						{
							"id": 1984,
							"name": "hasAllDayBlock",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Check if a date has an all-day block event (isBlock: true, isAllDay: true)"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useMonthEvents.d.ts",
									"line": 31,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1985,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1986,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1987,
													"name": "dateKey",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/useMonthEvents.d.ts",
											"line": 31,
											"character": 19
										}
									]
								}
							}
						},
						{
							"id": 1980,
							"name": "hasBlockIndicator",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Check if a date has a block indicator (isBlock: true, isAllDay: false)"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useMonthEvents.d.ts",
									"line": 27,
									"character": 21
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1981,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1982,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1983,
													"name": "dateKey",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/useMonthEvents.d.ts",
											"line": 27,
											"character": 22
										}
									]
								}
							}
						},
						{
							"id": 1976,
							"name": "hasMoreIndicator",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Check if a date has more events than can be displayed"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useMonthEvents.d.ts",
									"line": 23,
									"character": 20
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1977,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1978,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1979,
													"name": "dateKey",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/useMonthEvents.d.ts",
											"line": 23,
											"character": 21
										}
									]
								}
							}
						},
						{
							"id": 1989,
							"name": "sortEventsByTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Utility function to sort events by start time"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useMonthEvents.d.ts",
									"line": 39,
									"character": 20
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1990,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1991,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1992,
													"name": "events",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 268,
															"name": "EventModel"
														}
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 268,
													"name": "EventModel"
												}
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/useMonthEvents.d.ts",
											"line": 39,
											"character": 21
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1988,
								1972,
								1964,
								1968,
								1960,
								1984,
								1980,
								1976,
								1989
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/useMonthEvents.d.ts",
							"line": 6,
							"character": 37
						}
					]
				},
				{
					"id": 1993,
					"name": "useMonthEvents",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Process and organize events for month view rendering",
						"tags": [
							{
								"tag": "param",
								"text": "The dates being rendered",
								"param": "renderDates"
							},
							{
								"tag": "param",
								"text": "Maximum number of events to display per row.",
								"param": "maxEventsPerRow"
							},
							{
								"tag": "returns",
								"text": "- Processed events data and related functions\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/schedule/hooks/useMonthEvents.d.ts",
							"line": 48,
							"character": 35
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1994,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1995,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 1996,
											"name": "renderDates",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Date"
												}
											}
										},
										{
											"id": 1997,
											"name": "maxEventsPerRow",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1279,
										"name": "UseMonthEventsResult"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/hooks/useMonthEvents.d.ts",
									"line": 48,
									"character": 36
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1959
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1993
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/hooks/useMonthEvents.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1269,
			"name": "\"schedule/hooks/useMonthRows\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/hooks/useMonthRows.ts",
			"children": [
				{
					"id": 1270,
					"name": "MonthRowsResult",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Interface for month rows hook result"
					},
					"children": [
						{
							"id": 1274,
							"name": "additionalClass",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Additional class for custom weeks"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useMonthRows.ts",
									"line": 28,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1273,
							"name": "contentTableStyle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "CSS properties for the content table"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useMonthRows.ts",
									"line": 23,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "CSSProperties"
							}
						},
						{
							"id": 1275,
							"name": "hideOtherMonths",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Specifies to hide the other month dates."
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useMonthRows.ts",
									"line": 33,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1271,
							"name": "weekNumbers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": " Week numbers for the month view"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useMonthRows.ts",
									"line": 13,
									"character": 15
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						},
						{
							"id": 1272,
							"name": "weeksToRender",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Array of week render dates for each row"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useMonthRows.ts",
									"line": 18,
									"character": 17
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"name": "Date"
									}
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1274,
								1273,
								1275,
								1271,
								1272
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/useMonthRows.ts",
							"line": 9,
							"character": 32
						}
					]
				},
				{
					"id": 1276,
					"name": "useMonthRows",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1277,
							"name": "useMonthRows",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Custom hook for month rows logic that processes render dates by week",
								"returns": "Month rows data and configuration\n"
							},
							"type": {
								"type": "reference",
								"id": 1270,
								"name": "MonthRowsResult"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/useMonthRows.ts",
							"line": 41,
							"character": 28
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1270
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1276
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/hooks/useMonthRows.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1998,
			"name": "\"schedule/hooks/useMonthRows.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/hooks/useMonthRows.d.ts",
			"children": [
				{
					"id": 1999,
					"name": "MonthRowsResult",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Interface for month rows hook result"
					},
					"children": [
						{
							"id": 2003,
							"name": "additionalClass",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Additional class for custom weeks"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useMonthRows.d.ts",
									"line": 20,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2002,
							"name": "contentTableStyle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "CSS properties for the content table"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useMonthRows.d.ts",
									"line": 16,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "CSSProperties"
							}
						},
						{
							"id": 2004,
							"name": "hideOtherMonths",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Specifies to hide the other month dates."
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useMonthRows.d.ts",
									"line": 24,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2000,
							"name": "weekNumbers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": " Week numbers for the month view"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useMonthRows.d.ts",
									"line": 8,
									"character": 15
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						},
						{
							"id": 2001,
							"name": "weeksToRender",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Array of week render dates for each row"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useMonthRows.d.ts",
									"line": 12,
									"character": 17
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"name": "Date"
									}
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2003,
								2002,
								2004,
								2000,
								2001
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/useMonthRows.d.ts",
							"line": 4,
							"character": 32
						}
					]
				},
				{
					"id": 2005,
					"name": "useMonthRows",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2006,
							"name": "useMonthRows",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Custom hook for month rows logic that processes render dates by week",
								"returns": "Month rows data and configuration\n"
							},
							"type": {
								"type": "reference",
								"id": 1270,
								"name": "MonthRowsResult"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/useMonthRows.d.ts",
							"line": 31,
							"character": 36
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1999
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						2005
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/hooks/useMonthRows.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 911,
			"name": "\"schedule/hooks/useMorePopup\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/hooks/useMorePopup.ts",
			"children": [
				{
					"id": 912,
					"name": "useMorePopup",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Custom hook for managing the state and logic of the MorePopup component",
						"returns": "Object containing popup state and handler functions\n"
					},
					"signatures": [
						{
							"id": 913,
							"name": "useMorePopup",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Custom hook for managing the state and logic of the MorePopup component",
								"returns": "Object containing popup state and handler functions\n"
							},
							"type": {
								"type": "reference",
								"name": "MorePopupHookResult"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/useMorePopup.ts",
							"line": 45,
							"character": 25
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						912
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/hooks/useMorePopup.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2007,
			"name": "\"schedule/hooks/useMorePopup.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/hooks/useMorePopup.d.ts",
			"children": [
				{
					"id": 2008,
					"name": "useMorePopup",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Custom hook for managing the state and logic of the MorePopup component",
						"tags": [
							{
								"tag": "param",
								"text": "The hook configuration props",
								"param": "props"
							},
							{
								"tag": "param",
								"text": "Callback function triggered when an event is clicked",
								"param": "props.onEventClick"
							},
							{
								"tag": "param",
								"text": "Callback function for handling navigation",
								"param": "props.onNavigate"
							},
							{
								"tag": "param",
								"text": "Callback function for closing the popup",
								"param": "props.onClose"
							},
							{
								"tag": "param",
								"text": "Callback function for closing the popup",
								"param": "props.onOpen"
							},
							{
								"tag": "param",
								"text": "Current date for the popup",
								"param": "props.date"
							},
							{
								"tag": "returns",
								"text": "Object containing popup state and handler functions\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/schedule/hooks/useMorePopup.d.ts",
							"line": 32,
							"character": 33
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2009,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2010,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2011,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "MorePopupHookProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "MorePopupHookResult"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/hooks/useMorePopup.d.ts",
									"line": 32,
									"character": 34
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						2008
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/hooks/useMorePopup.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2142,
			"name": "\"schedule/hooks/usePopup\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/hooks/usePopup.ts",
			"children": [
				{
					"id": 2186,
					"name": "UsePopupResult",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Result interface for consolidated usePopup hook"
					},
					"children": [
						{
							"id": 2201,
							"name": "cellEditRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.ts",
									"line": 78,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 3359,
										"name": "IQuickInfoPopup"
									}
								],
								"name": "RefObject"
							}
						},
						{
							"id": 2225,
							"name": "closeAllPopups",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.ts",
									"line": 85,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2226,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2227,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/usePopup.ts",
											"line": 85,
											"character": 19
										}
									]
								}
							}
						},
						{
							"id": 2191,
							"name": "containerRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.ts",
									"line": 73,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLDivElement"
									}
								],
								"name": "RefObject"
							}
						},
						{
							"id": 2202,
							"name": "eventEditRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.ts",
									"line": 79,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 3359,
										"name": "IQuickInfoPopup"
									}
								],
								"name": "RefObject"
							}
						},
						{
							"id": 2203,
							"name": "handleCellClick",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.ts",
									"line": 80,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2204,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2205,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2206,
													"name": "data",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 280,
														"name": "CellClickEvent"
													}
												},
												{
													"id": 2207,
													"name": "element",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"name": "HTMLElement"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/usePopup.ts",
											"line": 80,
											"character": 20
										}
									]
								}
							}
						},
						{
							"id": 2194,
							"name": "handleClose",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.ts",
									"line": 76,
									"character": 15
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2195,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2196,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/usePopup.ts",
											"line": 76,
											"character": 16
										}
									]
								}
							}
						},
						{
							"id": 2221,
							"name": "handleDeleteEvent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.ts",
									"line": 84,
									"character": 21
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2222,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2223,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2224,
													"name": "data",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 268,
														"name": "EventModel"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/usePopup.ts",
											"line": 84,
											"character": 22
										}
									]
								}
							}
						},
						{
							"id": 2217,
							"name": "handleEditEvent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.ts",
									"line": 83,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2218,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2219,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2220,
													"name": "data",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 268,
														"name": "EventModel"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/usePopup.ts",
											"line": 83,
											"character": 20
										}
									]
								}
							}
						},
						{
							"id": 2208,
							"name": "handleEventClick",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.ts",
									"line": 81,
									"character": 20
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2209,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2210,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2211,
													"name": "data",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 268,
														"name": "EventModel"
													}
												},
												{
													"id": 2212,
													"name": "element",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"name": "HTMLElement"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/usePopup.ts",
											"line": 81,
											"character": 21
										}
									]
								}
							}
						},
						{
							"id": 2197,
							"name": "handleRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.ts",
									"line": 77,
									"character": 13
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2198,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2199,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2200,
													"name": "el",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"name": "HTMLDivElement"
															},
															{
																"type": "intrinsic",
																"name": "null"
															}
														]
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/usePopup.ts",
											"line": 77,
											"character": 14
										}
									]
								}
							}
						},
						{
							"id": 2213,
							"name": "handleSaveEvent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.ts",
									"line": 82,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2214,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2215,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2216,
													"name": "data",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 268,
														"name": "EventModel"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/usePopup.ts",
											"line": 82,
											"character": 20
										}
									]
								}
							}
						},
						{
							"id": 2228,
							"name": "onCellClickHandler",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.ts",
									"line": 86,
									"character": 22
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2229,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2230,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2231,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 280,
														"name": "CellClickEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/usePopup.ts",
											"line": 86,
											"character": 23
										}
									]
								}
							}
						},
						{
							"id": 2232,
							"name": "onEventClickHandler",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.ts",
									"line": 87,
									"character": 23
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2233,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2234,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2235,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 287,
														"name": "EventClickEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/usePopup.ts",
											"line": 87,
											"character": 24
										}
									]
								}
							}
						},
						{
							"id": 2192,
							"name": "popupElement",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.ts",
									"line": 74,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLDivElement"
									}
								],
								"name": "RefObject"
							}
						},
						{
							"id": 2193,
							"name": "scheduleElement",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.ts",
									"line": 75,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								],
								"name": "RefObject"
							}
						},
						{
							"id": 2190,
							"name": "setTarget",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.ts",
									"line": 72,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "HTMLElement"
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										],
										"name": "SetStateAction"
									}
								],
								"name": "Dispatch"
							}
						},
						{
							"id": 2188,
							"name": "setVisible",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.ts",
									"line": 70,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "SetStateAction"
									}
								],
								"name": "Dispatch"
							}
						},
						{
							"id": 2189,
							"name": "target",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.ts",
									"line": 71,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "HTMLElement"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						},
						{
							"id": 2187,
							"name": "visible",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.ts",
									"line": 69,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2201,
								2225,
								2191,
								2202,
								2203,
								2194,
								2221,
								2217,
								2208,
								2197,
								2213,
								2228,
								2232,
								2192,
								2193,
								2190,
								2188,
								2189,
								2187
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/usePopup.ts",
							"line": 68,
							"character": 31
						}
					]
				},
				{
					"id": 2171,
					"name": "UsePopupStateResult",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Interface for legacy usePopupState hook (for backward compatibility)"
					},
					"children": [
						{
							"id": 2176,
							"name": "containerRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.ts",
									"line": 58,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLDivElement"
									}
								],
								"name": "RefObject"
							}
						},
						{
							"id": 2179,
							"name": "handleClose",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.ts",
									"line": 61,
									"character": 15
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2180,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2181,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/usePopup.ts",
											"line": 61,
											"character": 16
										}
									]
								}
							}
						},
						{
							"id": 2182,
							"name": "handleRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.ts",
									"line": 62,
									"character": 13
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2183,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2184,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2185,
													"name": "el",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"name": "HTMLDivElement"
															},
															{
																"type": "intrinsic",
																"name": "null"
															}
														]
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/usePopup.ts",
											"line": 62,
											"character": 14
										}
									]
								}
							}
						},
						{
							"id": 2177,
							"name": "popupElement",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.ts",
									"line": 59,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLDivElement"
									}
								],
								"name": "RefObject"
							}
						},
						{
							"id": 2178,
							"name": "scheduleElement",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.ts",
									"line": 60,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								],
								"name": "RefObject"
							}
						},
						{
							"id": 2175,
							"name": "setTarget",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.ts",
									"line": 57,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "HTMLElement"
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										],
										"name": "SetStateAction"
									}
								],
								"name": "Dispatch"
							}
						},
						{
							"id": 2173,
							"name": "setVisible",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.ts",
									"line": 55,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "SetStateAction"
									}
								],
								"name": "Dispatch"
							}
						},
						{
							"id": 2174,
							"name": "target",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.ts",
									"line": 56,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "HTMLElement"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						},
						{
							"id": 2172,
							"name": "visible",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.ts",
									"line": 54,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2176,
								2179,
								2182,
								2177,
								2178,
								2175,
								2173,
								2174,
								2172
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/usePopup.ts",
							"line": 53,
							"character": 36
						}
					]
				},
				{
					"id": 2143,
					"name": "UseSchedulePopupsResult",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Interface for legacy useSchedulePopups hook (for backward compatibility)"
					},
					"children": [
						{
							"id": 2144,
							"name": "cellEditRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Ref for the quick info popup (handles both cell and event clicks)"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.ts",
									"line": 12,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 3359,
										"name": "IQuickInfoPopup"
									}
								],
								"name": "RefObject"
							}
						},
						{
							"id": 2168,
							"name": "closeAllPopups",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Close all popups"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.ts",
									"line": 47,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2169,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2170,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/usePopup.ts",
											"line": 47,
											"character": 19
										}
									]
								}
							}
						},
						{
							"id": 2145,
							"name": "eventEditRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Ref for the event edit popup (maintained for backward compatibility)"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.ts",
									"line": 17,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 3359,
										"name": "IQuickInfoPopup"
									}
								],
								"name": "RefObject"
							}
						},
						{
							"id": 2146,
							"name": "handleCellClick",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Handler for cell click - directly calls the standalone popup"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.ts",
									"line": 22,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2147,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2148,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2149,
													"name": "data",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 280,
														"name": "CellClickEvent"
													}
												},
												{
													"id": 2150,
													"name": "element",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"name": "HTMLElement"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/usePopup.ts",
											"line": 22,
											"character": 20
										}
									]
								}
							}
						},
						{
							"id": 2164,
							"name": "handleDeleteEvent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Handler for delete event"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.ts",
									"line": 42,
									"character": 21
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2165,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2166,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2167,
													"name": "data",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 268,
														"name": "EventModel"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/usePopup.ts",
											"line": 42,
											"character": 22
										}
									]
								}
							}
						},
						{
							"id": 2160,
							"name": "handleEditEvent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Handler for edit event"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.ts",
									"line": 37,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2161,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2162,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2163,
													"name": "data",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 268,
														"name": "EventModel"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/usePopup.ts",
											"line": 37,
											"character": 20
										}
									]
								}
							}
						},
						{
							"id": 2151,
							"name": "handleEventClick",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Handler for event click - directly calls the standalone popup"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.ts",
									"line": 27,
									"character": 20
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2152,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2153,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2154,
													"name": "data",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 268,
														"name": "EventModel"
													}
												},
												{
													"id": 2155,
													"name": "element",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"name": "HTMLElement"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/usePopup.ts",
											"line": 27,
											"character": 21
										}
									]
								}
							}
						},
						{
							"id": 2156,
							"name": "handleSaveEvent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Handler for save event"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.ts",
									"line": 32,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2157,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2158,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2159,
													"name": "data",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 268,
														"name": "EventModel"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/usePopup.ts",
											"line": 32,
											"character": 20
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2144,
								2168,
								2145,
								2146,
								2164,
								2160,
								2151,
								2156
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/usePopup.ts",
							"line": 8,
							"character": 40
						}
					]
				},
				{
					"id": 2261,
					"name": "useEscapeKey",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Legacy hook to handle Escape key press for popups\nThis is exported directly from usePopup.ts for backward compatibility",
						"returns": "No return value\n"
					},
					"signatures": [
						{
							"id": 2262,
							"name": "useEscapeKey",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Legacy hook to handle Escape key press for popups\nThis is exported directly from usePopup.ts for backward compatibility",
								"returns": "No return value\n"
							},
							"parameters": [
								{
									"id": 2263,
									"name": "onClose",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Callback to execute on Escape key press"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2264,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2265,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/hooks/usePopup.ts",
													"line": 259,
													"character": 68
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/usePopup.ts",
							"line": 259,
							"character": 25
						}
					]
				},
				{
					"id": 2266,
					"name": "useFocusTrap",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Legacy hook to handle focus trap for modal popups\nThis is exported directly from usePopup.ts for backward compatibility",
						"returns": "Ref to be attached to the popup container\n"
					},
					"signatures": [
						{
							"id": 2267,
							"name": "useFocusTrap",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Legacy hook to handle focus trap for modal popups\nThis is exported directly from usePopup.ts for backward compatibility",
								"returns": "Ref to be attached to the popup container\n"
							},
							"parameters": [
								{
									"id": 2268,
									"name": "isOpen",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Whether the popup is open"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLDivElement"
									}
								],
								"name": "RefObject"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/usePopup.ts",
							"line": 282,
							"character": 25
						}
					]
				},
				{
					"id": 2236,
					"name": "usePopup",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Consolidated hook for popup management.\nCombines functionality from usePopupState and useSchedulePopups",
						"returns": "- Combined popup state and handlers\n"
					},
					"signatures": [
						{
							"id": 2237,
							"name": "usePopup",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Consolidated hook for popup management.\nCombines functionality from usePopupState and useSchedulePopups",
								"returns": "- Combined popup state and handlers\n"
							},
							"parameters": [
								{
									"id": 2238,
									"name": "onEventCreate",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "Callback when an event is created"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2239,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2240,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 2241,
															"name": "event",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reference",
																"id": 268,
																"name": "EventModel"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/hooks/usePopup.ts",
													"line": 110,
													"character": 19
												}
											]
										}
									}
								},
								{
									"id": 2242,
									"name": "onEventUpdate",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "Callback when an event is updated"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2243,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2244,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 2245,
															"name": "event",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reference",
																"id": 268,
																"name": "EventModel"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/hooks/usePopup.ts",
													"line": 111,
													"character": 19
												}
											]
										}
									}
								},
								{
									"id": 2246,
									"name": "onEventDelete",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "Callback when an event is deleted"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2247,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2248,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 2249,
															"name": "event",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reference",
																"id": 268,
																"name": "EventModel"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/hooks/usePopup.ts",
													"line": 112,
													"character": 19
												}
											]
										}
									}
								},
								{
									"id": 2250,
									"name": "onCellClick",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "User-provided cell click handler"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2251,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2252,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 2253,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reference",
																"id": 280,
																"name": "CellClickEvent"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/hooks/usePopup.ts",
													"line": 113,
													"character": 17
												}
											]
										}
									}
								},
								{
									"id": 2254,
									"name": "onEventClick",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "User-provided event click handler"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2255,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2256,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 2257,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reference",
																"id": 287,
																"name": "EventClickEvent"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/hooks/usePopup.ts",
													"line": 114,
													"character": 18
												}
											]
										}
									}
								},
								{
									"id": 2258,
									"name": "onClose",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "Function to call when popup is closed"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2259,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2260,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/hooks/usePopup.ts",
													"line": 115,
													"character": 13
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2056,
								"name": "UsePopupResult"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/usePopup.ts",
							"line": 102,
							"character": 21
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2186,
						2171,
						2143
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						2261,
						2266,
						2236
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/hooks/usePopup.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2012,
			"name": "\"schedule/hooks/usePopup.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/hooks/usePopup.d.ts",
			"children": [
				{
					"id": 2056,
					"name": "UsePopupResult",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Result interface for consolidated usePopup hook"
					},
					"children": [
						{
							"id": 2071,
							"name": "cellEditRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.d.ts",
									"line": 68,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 3359,
										"name": "IQuickInfoPopup"
									}
								],
								"name": "RefObject"
							}
						},
						{
							"id": 2095,
							"name": "closeAllPopups",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.d.ts",
									"line": 75,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2096,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2097,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/usePopup.d.ts",
											"line": 75,
											"character": 19
										}
									]
								}
							}
						},
						{
							"id": 2061,
							"name": "containerRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.d.ts",
									"line": 63,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLDivElement"
									}
								],
								"name": "RefObject"
							}
						},
						{
							"id": 2072,
							"name": "eventEditRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.d.ts",
									"line": 69,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 3359,
										"name": "IQuickInfoPopup"
									}
								],
								"name": "RefObject"
							}
						},
						{
							"id": 2073,
							"name": "handleCellClick",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.d.ts",
									"line": 70,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2074,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2075,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2076,
													"name": "data",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 280,
														"name": "CellClickEvent"
													}
												},
												{
													"id": 2077,
													"name": "element",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"name": "HTMLElement"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/usePopup.d.ts",
											"line": 70,
											"character": 20
										}
									]
								}
							}
						},
						{
							"id": 2064,
							"name": "handleClose",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.d.ts",
									"line": 66,
									"character": 15
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2065,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2066,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/usePopup.d.ts",
											"line": 66,
											"character": 16
										}
									]
								}
							}
						},
						{
							"id": 2091,
							"name": "handleDeleteEvent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.d.ts",
									"line": 74,
									"character": 21
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2092,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2093,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2094,
													"name": "data",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 268,
														"name": "EventModel"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/usePopup.d.ts",
											"line": 74,
											"character": 22
										}
									]
								}
							}
						},
						{
							"id": 2087,
							"name": "handleEditEvent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.d.ts",
									"line": 73,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2088,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2089,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2090,
													"name": "data",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 268,
														"name": "EventModel"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/usePopup.d.ts",
											"line": 73,
											"character": 20
										}
									]
								}
							}
						},
						{
							"id": 2078,
							"name": "handleEventClick",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.d.ts",
									"line": 71,
									"character": 20
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2079,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2080,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2081,
													"name": "data",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 268,
														"name": "EventModel"
													}
												},
												{
													"id": 2082,
													"name": "element",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"name": "HTMLElement"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/usePopup.d.ts",
											"line": 71,
											"character": 21
										}
									]
								}
							}
						},
						{
							"id": 2067,
							"name": "handleRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.d.ts",
									"line": 67,
									"character": 13
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2068,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2069,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2070,
													"name": "el",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"name": "HTMLDivElement"
															},
															{
																"type": "intrinsic",
																"name": "null"
															}
														]
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/usePopup.d.ts",
											"line": 67,
											"character": 14
										}
									]
								}
							}
						},
						{
							"id": 2083,
							"name": "handleSaveEvent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.d.ts",
									"line": 72,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2084,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2085,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2086,
													"name": "data",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 268,
														"name": "EventModel"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/usePopup.d.ts",
											"line": 72,
											"character": 20
										}
									]
								}
							}
						},
						{
							"id": 2098,
							"name": "onCellClickHandler",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.d.ts",
									"line": 76,
									"character": 22
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2099,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2100,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2101,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 280,
														"name": "CellClickEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/usePopup.d.ts",
											"line": 76,
											"character": 23
										}
									]
								}
							}
						},
						{
							"id": 2102,
							"name": "onEventClickHandler",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.d.ts",
									"line": 77,
									"character": 23
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2103,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2104,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2105,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 287,
														"name": "EventClickEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/usePopup.d.ts",
											"line": 77,
											"character": 24
										}
									]
								}
							}
						},
						{
							"id": 2062,
							"name": "popupElement",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.d.ts",
									"line": 64,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLDivElement"
									}
								],
								"name": "RefObject"
							}
						},
						{
							"id": 2063,
							"name": "scheduleElement",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.d.ts",
									"line": 65,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								],
								"name": "RefObject"
							}
						},
						{
							"id": 2060,
							"name": "setTarget",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.d.ts",
									"line": 62,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "HTMLElement"
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										],
										"name": "SetStateAction"
									}
								],
								"name": "Dispatch"
							}
						},
						{
							"id": 2058,
							"name": "setVisible",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.d.ts",
									"line": 60,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "SetStateAction"
									}
								],
								"name": "Dispatch"
							}
						},
						{
							"id": 2059,
							"name": "target",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.d.ts",
									"line": 61,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "HTMLElement"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						},
						{
							"id": 2057,
							"name": "visible",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.d.ts",
									"line": 59,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2071,
								2095,
								2061,
								2072,
								2073,
								2064,
								2091,
								2087,
								2078,
								2067,
								2083,
								2098,
								2102,
								2062,
								2063,
								2060,
								2058,
								2059,
								2057
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/usePopup.d.ts",
							"line": 58,
							"character": 31
						}
					]
				},
				{
					"id": 2041,
					"name": "UsePopupStateResult",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Interface for legacy usePopupState hook (for backward compatibility)"
					},
					"children": [
						{
							"id": 2046,
							"name": "containerRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.d.ts",
									"line": 49,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLDivElement"
									}
								],
								"name": "RefObject"
							}
						},
						{
							"id": 2049,
							"name": "handleClose",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.d.ts",
									"line": 52,
									"character": 15
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2050,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2051,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/usePopup.d.ts",
											"line": 52,
											"character": 16
										}
									]
								}
							}
						},
						{
							"id": 2052,
							"name": "handleRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.d.ts",
									"line": 53,
									"character": 13
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2053,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2054,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2055,
													"name": "el",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"name": "HTMLDivElement"
															},
															{
																"type": "intrinsic",
																"name": "null"
															}
														]
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/usePopup.d.ts",
											"line": 53,
											"character": 14
										}
									]
								}
							}
						},
						{
							"id": 2047,
							"name": "popupElement",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.d.ts",
									"line": 50,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLDivElement"
									}
								],
								"name": "RefObject"
							}
						},
						{
							"id": 2048,
							"name": "scheduleElement",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.d.ts",
									"line": 51,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								],
								"name": "RefObject"
							}
						},
						{
							"id": 2045,
							"name": "setTarget",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.d.ts",
									"line": 48,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "HTMLElement"
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										],
										"name": "SetStateAction"
									}
								],
								"name": "Dispatch"
							}
						},
						{
							"id": 2043,
							"name": "setVisible",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.d.ts",
									"line": 46,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "SetStateAction"
									}
								],
								"name": "Dispatch"
							}
						},
						{
							"id": 2044,
							"name": "target",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.d.ts",
									"line": 47,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "HTMLElement"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						},
						{
							"id": 2042,
							"name": "visible",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.d.ts",
									"line": 45,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2046,
								2049,
								2052,
								2047,
								2048,
								2045,
								2043,
								2044,
								2042
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/usePopup.d.ts",
							"line": 44,
							"character": 36
						}
					]
				},
				{
					"id": 2013,
					"name": "UseSchedulePopupsResult",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Interface for legacy useSchedulePopups hook (for backward compatibility)"
					},
					"children": [
						{
							"id": 2014,
							"name": "cellEditRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Ref for the quick info popup (handles both cell and event clicks)"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.d.ts",
									"line": 11,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 3359,
										"name": "IQuickInfoPopup"
									}
								],
								"name": "RefObject"
							}
						},
						{
							"id": 2038,
							"name": "closeAllPopups",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Close all popups"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.d.ts",
									"line": 39,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2039,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2040,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/usePopup.d.ts",
											"line": 39,
											"character": 19
										}
									]
								}
							}
						},
						{
							"id": 2015,
							"name": "eventEditRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Ref for the event edit popup (maintained for backward compatibility)"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.d.ts",
									"line": 15,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 3359,
										"name": "IQuickInfoPopup"
									}
								],
								"name": "RefObject"
							}
						},
						{
							"id": 2016,
							"name": "handleCellClick",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Handler for cell click - directly calls the standalone popup"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.d.ts",
									"line": 19,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2017,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2018,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2019,
													"name": "data",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 280,
														"name": "CellClickEvent"
													}
												},
												{
													"id": 2020,
													"name": "element",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"name": "HTMLElement"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/usePopup.d.ts",
											"line": 19,
											"character": 20
										}
									]
								}
							}
						},
						{
							"id": 2034,
							"name": "handleDeleteEvent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Handler for delete event"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.d.ts",
									"line": 35,
									"character": 21
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2035,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2036,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2037,
													"name": "data",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 268,
														"name": "EventModel"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/usePopup.d.ts",
											"line": 35,
											"character": 22
										}
									]
								}
							}
						},
						{
							"id": 2030,
							"name": "handleEditEvent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Handler for edit event"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.d.ts",
									"line": 31,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2031,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2032,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2033,
													"name": "data",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 268,
														"name": "EventModel"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/usePopup.d.ts",
											"line": 31,
											"character": 20
										}
									]
								}
							}
						},
						{
							"id": 2021,
							"name": "handleEventClick",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Handler for event click - directly calls the standalone popup"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.d.ts",
									"line": 23,
									"character": 20
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2022,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2023,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2024,
													"name": "data",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 268,
														"name": "EventModel"
													}
												},
												{
													"id": 2025,
													"name": "element",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"name": "HTMLElement"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/usePopup.d.ts",
											"line": 23,
											"character": 21
										}
									]
								}
							}
						},
						{
							"id": 2026,
							"name": "handleSaveEvent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Handler for save event"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.d.ts",
									"line": 27,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2027,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2028,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2029,
													"name": "data",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 268,
														"name": "EventModel"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/usePopup.d.ts",
											"line": 27,
											"character": 20
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2014,
								2038,
								2015,
								2016,
								2034,
								2030,
								2021,
								2026
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/usePopup.d.ts",
							"line": 7,
							"character": 40
						}
					]
				},
				{
					"id": 2132,
					"name": "useEscapeKey",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Legacy hook to handle Escape key press for popups\nThis is exported directly from usePopup.ts for backward compatibility",
						"tags": [
							{
								"tag": "param",
								"text": "Callback to execute on Escape key press",
								"param": "onClose"
							},
							{
								"tag": "returns",
								"text": "No return value\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/schedule/hooks/usePopup.d.ts",
							"line": 99,
							"character": 33
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2133,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2134,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2135,
											"name": "onClose",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2136,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 2137,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "src/schedule/hooks/usePopup.d.ts",
															"line": 99,
															"character": 44
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.d.ts",
									"line": 99,
									"character": 34
								}
							]
						}
					}
				},
				{
					"id": 2138,
					"name": "useFocusTrap",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Legacy hook to handle focus trap for modal popups\nThis is exported directly from usePopup.ts for backward compatibility",
						"tags": [
							{
								"tag": "param",
								"text": "Whether the popup is open",
								"param": "isOpen"
							},
							{
								"tag": "returns",
								"text": "Ref to be attached to the popup container\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/schedule/hooks/usePopup.d.ts",
							"line": 107,
							"character": 33
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2139,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2140,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2141,
											"name": "isOpen",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "RefObject"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.d.ts",
									"line": 107,
									"character": 34
								}
							]
						}
					}
				},
				{
					"id": 2106,
					"name": "usePopup",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Consolidated hook for popup management.\nCombines functionality from usePopupState and useSchedulePopups",
						"tags": [
							{
								"tag": "param",
								"text": "Callback when an event is created",
								"param": "onEventCreate"
							},
							{
								"tag": "param",
								"text": "Callback when an event is updated",
								"param": "onEventUpdate"
							},
							{
								"tag": "param",
								"text": "Callback when an event is deleted",
								"param": "onEventDelete"
							},
							{
								"tag": "param",
								"text": "User-provided cell click handler",
								"param": "onCellClick"
							},
							{
								"tag": "param",
								"text": "User-provided event click handler",
								"param": "onEventClick"
							},
							{
								"tag": "param",
								"text": "Function to call when popup is closed",
								"param": "onClose"
							},
							{
								"tag": "returns",
								"text": "- Combined popup state and handlers\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/schedule/hooks/usePopup.d.ts",
							"line": 91,
							"character": 29
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2107,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2108,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2109,
											"name": "onEventCreate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2110,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 2111,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExported": true
															},
															"parameters": [
																{
																	"id": 2112,
																	"name": "event",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExported": true
																	},
																	"type": {
																		"type": "reference",
																		"id": 268,
																		"name": "EventModel"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "src/schedule/hooks/usePopup.d.ts",
															"line": 91,
															"character": 47
														}
													]
												}
											}
										},
										{
											"id": 2113,
											"name": "onEventUpdate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2114,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 2115,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExported": true
															},
															"parameters": [
																{
																	"id": 2116,
																	"name": "event",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExported": true
																	},
																	"type": {
																		"type": "reference",
																		"id": 268,
																		"name": "EventModel"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "src/schedule/hooks/usePopup.d.ts",
															"line": 91,
															"character": 92
														}
													]
												}
											}
										},
										{
											"id": 2117,
											"name": "onEventDelete",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2118,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 2119,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExported": true
															},
															"parameters": [
																{
																	"id": 2120,
																	"name": "event",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExported": true
																	},
																	"type": {
																		"type": "reference",
																		"id": 268,
																		"name": "EventModel"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "src/schedule/hooks/usePopup.d.ts",
															"line": 91,
															"character": 137
														}
													]
												}
											}
										},
										{
											"id": 2121,
											"name": "onCellClick",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2122,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 2123,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExported": true
															},
															"parameters": [
																{
																	"id": 2124,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExported": true
																	},
																	"type": {
																		"type": "reference",
																		"id": 280,
																		"name": "CellClickEvent"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "src/schedule/hooks/usePopup.d.ts",
															"line": 91,
															"character": 180
														}
													]
												}
											}
										},
										{
											"id": 2125,
											"name": "onEventClick",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2126,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 2127,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExported": true
															},
															"parameters": [
																{
																	"id": 2128,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExported": true
																	},
																	"type": {
																		"type": "reference",
																		"id": 287,
																		"name": "EventClickEvent"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "src/schedule/hooks/usePopup.d.ts",
															"line": 91,
															"character": 227
														}
													]
												}
											}
										},
										{
											"id": 2129,
											"name": "onClose",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2130,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 2131,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "src/schedule/hooks/usePopup.d.ts",
															"line": 91,
															"character": 270
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2056,
										"name": "UsePopupResult"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/hooks/usePopup.d.ts",
									"line": 91,
									"character": 30
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2056,
						2041,
						2013
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						2132,
						2138,
						2106
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/hooks/usePopup.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 680,
			"name": "\"schedule/hooks/useQuickInfoPopup\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/hooks/useQuickInfoPopup.ts",
			"children": [
				{
					"id": 712,
					"name": "UsePopupResult",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Result interface for consolidated usePopup hook"
					},
					"children": [
						{
							"id": 727,
							"name": "cellEditRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
									"line": 63,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 3359,
										"name": "IQuickInfoPopup"
									}
								],
								"name": "RefObject"
							}
						},
						{
							"id": 742,
							"name": "closeAllPopups",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
									"line": 68,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 743,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 744,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
											"line": 68,
											"character": 19
										}
									]
								}
							}
						},
						{
							"id": 717,
							"name": "containerRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
									"line": 58,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLDivElement"
									}
								],
								"name": "RefObject"
							}
						},
						{
							"id": 728,
							"name": "eventEditRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
									"line": 64,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 3359,
										"name": "IQuickInfoPopup"
									}
								],
								"name": "RefObject"
							}
						},
						{
							"id": 729,
							"name": "handleCellClick",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
									"line": 65,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 730,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 731,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 732,
													"name": "data",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 280,
														"name": "CellClickEvent"
													}
												},
												{
													"id": 733,
													"name": "element",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"name": "HTMLElement"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
											"line": 65,
											"character": 20
										}
									]
								}
							}
						},
						{
							"id": 720,
							"name": "handleClose",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
									"line": 61,
									"character": 15
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 721,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 722,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
											"line": 61,
											"character": 16
										}
									]
								}
							}
						},
						{
							"id": 739,
							"name": "handleEditEvent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
									"line": 67,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 740,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 741,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
											"line": 67,
											"character": 20
										}
									]
								}
							}
						},
						{
							"id": 734,
							"name": "handleEventClick",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
									"line": 66,
									"character": 20
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 735,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 736,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 737,
													"name": "data",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 268,
														"name": "EventModel"
													}
												},
												{
													"id": 738,
													"name": "element",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"name": "HTMLElement"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
											"line": 66,
											"character": 21
										}
									]
								}
							}
						},
						{
							"id": 723,
							"name": "handleRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
									"line": 62,
									"character": 13
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 724,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 725,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 726,
													"name": "el",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"name": "HTMLDivElement"
															},
															{
																"type": "intrinsic",
																"name": "null"
															}
														]
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
											"line": 62,
											"character": 14
										}
									]
								}
							}
						},
						{
							"id": 745,
							"name": "onCellClickHandler",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
									"line": 69,
									"character": 22
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 746,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 747,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 748,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 280,
														"name": "CellClickEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
											"line": 69,
											"character": 23
										}
									]
								}
							}
						},
						{
							"id": 749,
							"name": "onEventClickHandler",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
									"line": 70,
									"character": 23
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 750,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 751,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 752,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 287,
														"name": "EventClickEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
											"line": 70,
											"character": 24
										}
									]
								}
							}
						},
						{
							"id": 718,
							"name": "popupElement",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
									"line": 59,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLDivElement"
									}
								],
								"name": "RefObject"
							}
						},
						{
							"id": 719,
							"name": "scheduleElement",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
									"line": 60,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								],
								"name": "RefObject"
							}
						},
						{
							"id": 716,
							"name": "setTarget",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
									"line": 57,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "HTMLElement"
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										],
										"name": "SetStateAction"
									}
								],
								"name": "Dispatch"
							}
						},
						{
							"id": 714,
							"name": "setVisible",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
									"line": 55,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "SetStateAction"
									}
								],
								"name": "Dispatch"
							}
						},
						{
							"id": 715,
							"name": "target",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
									"line": 56,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "HTMLElement"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						},
						{
							"id": 713,
							"name": "visible",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
									"line": 54,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								727,
								742,
								717,
								728,
								729,
								720,
								739,
								734,
								723,
								745,
								749,
								718,
								719,
								716,
								714,
								715,
								713
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
							"line": 53,
							"character": 31
						}
					]
				},
				{
					"id": 697,
					"name": "UsePopupStateResult",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Interface for legacy usePopupState hook (for backward compatibility)"
					},
					"children": [
						{
							"id": 702,
							"name": "containerRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
									"line": 43,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLDivElement"
									}
								],
								"name": "RefObject"
							}
						},
						{
							"id": 705,
							"name": "handleClose",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
									"line": 46,
									"character": 15
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 706,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 707,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
											"line": 46,
											"character": 16
										}
									]
								}
							}
						},
						{
							"id": 708,
							"name": "handleRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
									"line": 47,
									"character": 13
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 709,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 710,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 711,
													"name": "el",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"name": "HTMLDivElement"
															},
															{
																"type": "intrinsic",
																"name": "null"
															}
														]
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
											"line": 47,
											"character": 14
										}
									]
								}
							}
						},
						{
							"id": 703,
							"name": "popupElement",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
									"line": 44,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLDivElement"
									}
								],
								"name": "RefObject"
							}
						},
						{
							"id": 704,
							"name": "scheduleElement",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
									"line": 45,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								],
								"name": "RefObject"
							}
						},
						{
							"id": 701,
							"name": "setTarget",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
									"line": 42,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "HTMLElement"
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										],
										"name": "SetStateAction"
									}
								],
								"name": "Dispatch"
							}
						},
						{
							"id": 699,
							"name": "setVisible",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
									"line": 40,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "SetStateAction"
									}
								],
								"name": "Dispatch"
							}
						},
						{
							"id": 700,
							"name": "target",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
									"line": 41,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "HTMLElement"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						},
						{
							"id": 698,
							"name": "visible",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
									"line": 39,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								702,
								705,
								708,
								703,
								704,
								701,
								699,
								700,
								698
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
							"line": 38,
							"character": 36
						}
					]
				},
				{
					"id": 681,
					"name": "UseSchedulePopupsResult",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Interface for legacy useSchedulePopups hook (for backward compatibility)"
					},
					"children": [
						{
							"id": 682,
							"name": "cellEditRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Ref for the quick info popup (handles both cell and event clicks)"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
									"line": 12,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 3359,
										"name": "IQuickInfoPopup"
									}
								],
								"name": "RefObject"
							}
						},
						{
							"id": 683,
							"name": "eventEditRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Ref for the event edit popup (maintained for backward compatibility)"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
									"line": 17,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 3359,
										"name": "IQuickInfoPopup"
									}
								],
								"name": "RefObject"
							}
						},
						{
							"id": 684,
							"name": "handleCellClick",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Handler for cell click - directly calls the standalone popup"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
									"line": 22,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 685,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 686,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 687,
													"name": "data",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 280,
														"name": "CellClickEvent"
													}
												},
												{
													"id": 688,
													"name": "element",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"name": "HTMLElement"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
											"line": 22,
											"character": 20
										}
									]
								}
							}
						},
						{
							"id": 694,
							"name": "handleEditEvent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Handler for edit event"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
									"line": 32,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 695,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 696,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
											"line": 32,
											"character": 20
										}
									]
								}
							}
						},
						{
							"id": 689,
							"name": "handleEventClick",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Handler for event click - directly calls the standalone popup"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
									"line": 27,
									"character": 20
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 690,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 691,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 692,
													"name": "data",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 268,
														"name": "EventModel"
													}
												},
												{
													"id": 693,
													"name": "element",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"name": "HTMLElement"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
											"line": 27,
											"character": 21
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								682,
								683,
								684,
								694,
								689
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
							"line": 8,
							"character": 40
						}
					]
				},
				{
					"id": 766,
					"name": "useEscapeKey",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Legacy hook to handle Escape key press for popups\nThis is exported directly from usePopup.ts for backward compatibility",
						"returns": "No return value\n"
					},
					"signatures": [
						{
							"id": 767,
							"name": "useEscapeKey",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Legacy hook to handle Escape key press for popups\nThis is exported directly from usePopup.ts for backward compatibility",
								"returns": "No return value\n"
							},
							"parameters": [
								{
									"id": 768,
									"name": "onClose",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Callback to execute on Escape key press"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 769,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 770,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
													"line": 211,
													"character": 68
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
							"line": 211,
							"character": 25
						}
					]
				},
				{
					"id": 771,
					"name": "useFocusTrap",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Legacy hook to handle focus trap for modal popups\nThis is exported directly from usePopup.ts for backward compatibility",
						"returns": "Ref to be attached to the popup container\n"
					},
					"signatures": [
						{
							"id": 772,
							"name": "useFocusTrap",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Legacy hook to handle focus trap for modal popups\nThis is exported directly from usePopup.ts for backward compatibility",
								"returns": "Ref to be attached to the popup container\n"
							},
							"parameters": [
								{
									"id": 773,
									"name": "isOpen",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Whether the popup is open"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLDivElement"
									}
								],
								"name": "RefObject"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
							"line": 234,
							"character": 25
						}
					]
				},
				{
					"id": 753,
					"name": "usePopup",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Consolidated hook for popup management.\nCombines functionality from usePopupState and useSchedulePopups",
						"returns": "- Combined popup state and handlers\n"
					},
					"signatures": [
						{
							"id": 754,
							"name": "usePopup",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Consolidated hook for popup management.\nCombines functionality from usePopupState and useSchedulePopups",
								"returns": "- Combined popup state and handlers\n"
							},
							"parameters": [
								{
									"id": 755,
									"name": "onCellClick",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "User-provided cell click handler"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 756,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 757,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 758,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reference",
																"id": 280,
																"name": "CellClickEvent"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
													"line": 87,
													"character": 17
												}
											]
										}
									}
								},
								{
									"id": 759,
									"name": "onEventClick",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "User-provided event click handler"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 760,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 761,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 762,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reference",
																"id": 287,
																"name": "EventClickEvent"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
													"line": 88,
													"character": 18
												}
											]
										}
									}
								},
								{
									"id": 763,
									"name": "onClose",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "Function to call when popup is closed"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 764,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 765,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
													"line": 89,
													"character": 13
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 712,
								"name": "UsePopupResult"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
							"line": 82,
							"character": 21
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						712,
						697,
						681
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						766,
						771,
						753
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/hooks/useQuickInfoPopup.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2269,
			"name": "\"schedule/hooks/useQuickInfoPopup.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/hooks/useQuickInfoPopup.d.ts",
			"children": [
				{
					"id": 2301,
					"name": "UsePopupResult",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Result interface for consolidated usePopup hook"
					},
					"children": [
						{
							"id": 2316,
							"name": "cellEditRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
									"line": 56,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 3359,
										"name": "IQuickInfoPopup"
									}
								],
								"name": "RefObject"
							}
						},
						{
							"id": 2331,
							"name": "closeAllPopups",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
									"line": 61,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2332,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2333,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
											"line": 61,
											"character": 19
										}
									]
								}
							}
						},
						{
							"id": 2306,
							"name": "containerRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
									"line": 51,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLDivElement"
									}
								],
								"name": "RefObject"
							}
						},
						{
							"id": 2317,
							"name": "eventEditRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
									"line": 57,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 3359,
										"name": "IQuickInfoPopup"
									}
								],
								"name": "RefObject"
							}
						},
						{
							"id": 2318,
							"name": "handleCellClick",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
									"line": 58,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2319,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2320,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2321,
													"name": "data",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 280,
														"name": "CellClickEvent"
													}
												},
												{
													"id": 2322,
													"name": "element",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"name": "HTMLElement"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
											"line": 58,
											"character": 20
										}
									]
								}
							}
						},
						{
							"id": 2309,
							"name": "handleClose",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
									"line": 54,
									"character": 15
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2310,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2311,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
											"line": 54,
											"character": 16
										}
									]
								}
							}
						},
						{
							"id": 2328,
							"name": "handleEditEvent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
									"line": 60,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2329,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2330,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
											"line": 60,
											"character": 20
										}
									]
								}
							}
						},
						{
							"id": 2323,
							"name": "handleEventClick",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
									"line": 59,
									"character": 20
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2324,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2325,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2326,
													"name": "data",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 268,
														"name": "EventModel"
													}
												},
												{
													"id": 2327,
													"name": "element",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"name": "HTMLElement"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
											"line": 59,
											"character": 21
										}
									]
								}
							}
						},
						{
							"id": 2312,
							"name": "handleRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
									"line": 55,
									"character": 13
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2313,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2314,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2315,
													"name": "el",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"name": "HTMLDivElement"
															},
															{
																"type": "intrinsic",
																"name": "null"
															}
														]
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
											"line": 55,
											"character": 14
										}
									]
								}
							}
						},
						{
							"id": 2334,
							"name": "onCellClickHandler",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
									"line": 62,
									"character": 22
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2335,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2336,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2337,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 280,
														"name": "CellClickEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
											"line": 62,
											"character": 23
										}
									]
								}
							}
						},
						{
							"id": 2338,
							"name": "onEventClickHandler",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
									"line": 63,
									"character": 23
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2339,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2340,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2341,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 287,
														"name": "EventClickEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
											"line": 63,
											"character": 24
										}
									]
								}
							}
						},
						{
							"id": 2307,
							"name": "popupElement",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
									"line": 52,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLDivElement"
									}
								],
								"name": "RefObject"
							}
						},
						{
							"id": 2308,
							"name": "scheduleElement",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
									"line": 53,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								],
								"name": "RefObject"
							}
						},
						{
							"id": 2305,
							"name": "setTarget",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
									"line": 50,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "HTMLElement"
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										],
										"name": "SetStateAction"
									}
								],
								"name": "Dispatch"
							}
						},
						{
							"id": 2303,
							"name": "setVisible",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
									"line": 48,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "SetStateAction"
									}
								],
								"name": "Dispatch"
							}
						},
						{
							"id": 2304,
							"name": "target",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
									"line": 49,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "HTMLElement"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						},
						{
							"id": 2302,
							"name": "visible",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
									"line": 47,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2316,
								2331,
								2306,
								2317,
								2318,
								2309,
								2328,
								2323,
								2312,
								2334,
								2338,
								2307,
								2308,
								2305,
								2303,
								2304,
								2302
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
							"line": 46,
							"character": 31
						}
					]
				},
				{
					"id": 2286,
					"name": "UsePopupStateResult",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Interface for legacy usePopupState hook (for backward compatibility)"
					},
					"children": [
						{
							"id": 2291,
							"name": "containerRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
									"line": 37,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLDivElement"
									}
								],
								"name": "RefObject"
							}
						},
						{
							"id": 2294,
							"name": "handleClose",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
									"line": 40,
									"character": 15
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2295,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2296,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
											"line": 40,
											"character": 16
										}
									]
								}
							}
						},
						{
							"id": 2297,
							"name": "handleRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
									"line": 41,
									"character": 13
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2298,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2299,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2300,
													"name": "el",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"name": "HTMLDivElement"
															},
															{
																"type": "intrinsic",
																"name": "null"
															}
														]
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
											"line": 41,
											"character": 14
										}
									]
								}
							}
						},
						{
							"id": 2292,
							"name": "popupElement",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
									"line": 38,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLDivElement"
									}
								],
								"name": "RefObject"
							}
						},
						{
							"id": 2293,
							"name": "scheduleElement",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
									"line": 39,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									}
								],
								"name": "RefObject"
							}
						},
						{
							"id": 2290,
							"name": "setTarget",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
									"line": 36,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "HTMLElement"
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										],
										"name": "SetStateAction"
									}
								],
								"name": "Dispatch"
							}
						},
						{
							"id": 2288,
							"name": "setVisible",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
									"line": 34,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "SetStateAction"
									}
								],
								"name": "Dispatch"
							}
						},
						{
							"id": 2289,
							"name": "target",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
									"line": 35,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "HTMLElement"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						},
						{
							"id": 2287,
							"name": "visible",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
									"line": 33,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2291,
								2294,
								2297,
								2292,
								2293,
								2290,
								2288,
								2289,
								2287
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
							"line": 32,
							"character": 36
						}
					]
				},
				{
					"id": 2270,
					"name": "UseSchedulePopupsResult",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Interface for legacy useSchedulePopups hook (for backward compatibility)"
					},
					"children": [
						{
							"id": 2271,
							"name": "cellEditRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Ref for the quick info popup (handles both cell and event clicks)"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
									"line": 11,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 3359,
										"name": "IQuickInfoPopup"
									}
								],
								"name": "RefObject"
							}
						},
						{
							"id": 2272,
							"name": "eventEditRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Ref for the event edit popup (maintained for backward compatibility)"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
									"line": 15,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 3359,
										"name": "IQuickInfoPopup"
									}
								],
								"name": "RefObject"
							}
						},
						{
							"id": 2273,
							"name": "handleCellClick",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Handler for cell click - directly calls the standalone popup"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
									"line": 19,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2274,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2275,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2276,
													"name": "data",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 280,
														"name": "CellClickEvent"
													}
												},
												{
													"id": 2277,
													"name": "element",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"name": "HTMLElement"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
											"line": 19,
											"character": 20
										}
									]
								}
							}
						},
						{
							"id": 2283,
							"name": "handleEditEvent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Handler for edit event"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
									"line": 27,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2284,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2285,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
											"line": 27,
											"character": 20
										}
									]
								}
							}
						},
						{
							"id": 2278,
							"name": "handleEventClick",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Handler for event click - directly calls the standalone popup"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
									"line": 23,
									"character": 20
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2279,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2280,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2281,
													"name": "data",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 268,
														"name": "EventModel"
													}
												},
												{
													"id": 2282,
													"name": "element",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"name": "HTMLElement"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
											"line": 23,
											"character": 21
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2271,
								2272,
								2273,
								2283,
								2278
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
							"line": 7,
							"character": 40
						}
					]
				},
				{
					"id": 2356,
					"name": "useEscapeKey",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Legacy hook to handle Escape key press for popups\nThis is exported directly from usePopup.ts for backward compatibility",
						"tags": [
							{
								"tag": "param",
								"text": "Callback to execute on Escape key press",
								"param": "onClose"
							},
							{
								"tag": "returns",
								"text": "No return value\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
							"line": 82,
							"character": 33
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2357,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2358,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2359,
											"name": "onClose",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2360,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 2361,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
															"line": 82,
															"character": 44
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
									"line": 82,
									"character": 34
								}
							]
						}
					}
				},
				{
					"id": 2362,
					"name": "useFocusTrap",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Legacy hook to handle focus trap for modal popups\nThis is exported directly from usePopup.ts for backward compatibility",
						"tags": [
							{
								"tag": "param",
								"text": "Whether the popup is open",
								"param": "isOpen"
							},
							{
								"tag": "returns",
								"text": "Ref to be attached to the popup container\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
							"line": 90,
							"character": 33
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2363,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2364,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2365,
											"name": "isOpen",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLDivElement"
											}
										],
										"name": "RefObject"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
									"line": 90,
									"character": 34
								}
							]
						}
					}
				},
				{
					"id": 2342,
					"name": "usePopup",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Consolidated hook for popup management.\nCombines functionality from usePopupState and useSchedulePopups",
						"tags": [
							{
								"tag": "param",
								"text": "User-provided cell click handler",
								"param": "onCellClick"
							},
							{
								"tag": "param",
								"text": "User-provided event click handler",
								"param": "onEventClick"
							},
							{
								"tag": "param",
								"text": "Function to call when popup is closed",
								"param": "onClose"
							},
							{
								"tag": "returns",
								"text": "- Combined popup state and handlers\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
							"line": 74,
							"character": 29
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2343,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2344,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2345,
											"name": "onCellClick",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2346,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 2347,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExported": true
															},
															"parameters": [
																{
																	"id": 2348,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExported": true
																	},
																	"type": {
																		"type": "reference",
																		"id": 280,
																		"name": "CellClickEvent"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
															"line": 74,
															"character": 45
														}
													]
												}
											}
										},
										{
											"id": 2349,
											"name": "onEventClick",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2350,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 2351,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExported": true
															},
															"parameters": [
																{
																	"id": 2352,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExported": true
																	},
																	"type": {
																		"type": "reference",
																		"id": 287,
																		"name": "EventClickEvent"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
															"line": 74,
															"character": 92
														}
													]
												}
											}
										},
										{
											"id": 2353,
											"name": "onClose",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2354,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 2355,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
															"line": 74,
															"character": 135
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 712,
										"name": "UsePopupResult"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
									"line": 74,
									"character": 30
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2301,
						2286,
						2270
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						2356,
						2362,
						2342
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/hooks/useQuickInfoPopup.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 830,
			"name": "\"schedule/hooks/useSchedule\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/hooks/useSchedule.ts",
			"children": [
				{
					"id": 834,
					"name": "useOutsideClick",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Hook to handle clicks outside a specific element.\nSets up a document-level click listener that checks if clicks occur outside the specified element.",
						"returns": "\n"
					},
					"signatures": [
						{
							"id": 835,
							"name": "useOutsideClick",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Hook to handle clicks outside a specific element.\nSets up a document-level click listener that checks if clicks occur outside the specified element.",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 836,
									"name": "elementRef",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Reference to the element to check clicks against"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLElement"
											}
										],
										"name": "RefObject"
									}
								},
								{
									"id": 837,
									"name": "isOpen",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Whether the element is currently open/visible"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 838,
									"name": "onOutsideClick",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Callback to execute when we click outside the popup"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 839,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 840,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/hooks/useSchedule.ts",
													"line": 514,
													"character": 19
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/useSchedule.ts",
							"line": 507,
							"character": 28
						}
					]
				},
				{
					"id": 831,
					"name": "useSchedule",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Hook for managing schedule state and functionality",
						"returns": "Schedule state and handlers\n"
					},
					"signatures": [
						{
							"id": 832,
							"name": "useSchedule",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Hook for managing schedule state and functionality",
								"returns": "Schedule state and handlers\n"
							},
							"parameters": [
								{
									"id": 833,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Schedule component props"
									},
									"type": {
										"type": "reference",
										"name": "UseScheduleProps"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "UseScheduleResult"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/useSchedule.ts",
							"line": 127,
							"character": 24
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						834,
						831
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/hooks/useSchedule.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2366,
			"name": "\"schedule/hooks/useSchedule.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/hooks/useSchedule.d.ts",
			"children": [
				{
					"id": 2371,
					"name": "useOutsideClick",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Hook to handle clicks outside a specific element.\nSets up a document-level click listener that checks if clicks occur outside the specified element.",
						"tags": [
							{
								"tag": "param",
								"text": "Reference to the element to check clicks against",
								"param": "elementRef"
							},
							{
								"tag": "param",
								"text": "Whether the element is currently open/visible",
								"param": "isOpen"
							},
							{
								"tag": "param",
								"text": "Callback to execute when we click outside the popup",
								"param": "onOutsideClick"
							},
							{
								"tag": "returns",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/schedule/hooks/useSchedule.d.ts",
							"line": 109,
							"character": 36
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2372,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2373,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2374,
											"name": "elementRef",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "HTMLElement"
													}
												],
												"name": "RefObject"
											}
										},
										{
											"id": 2375,
											"name": "isOpen",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 2376,
											"name": "onOutsideClick",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2377,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 2378,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "src/schedule/hooks/useSchedule.d.ts",
															"line": 109,
															"character": 107
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/hooks/useSchedule.d.ts",
									"line": 109,
									"character": 37
								}
							]
						}
					}
				},
				{
					"id": 2367,
					"name": "useSchedule",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Hook for managing schedule state and functionality",
						"tags": [
							{
								"tag": "param",
								"text": "Schedule component props",
								"param": "props"
							},
							{
								"tag": "returns",
								"text": "Schedule state and handlers\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/schedule/hooks/useSchedule.d.ts",
							"line": 99,
							"character": 32
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2368,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2369,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2370,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "UseScheduleProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "UseScheduleResult"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/hooks/useSchedule.d.ts",
									"line": 99,
									"character": 33
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						2371,
						2367
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/hooks/useSchedule.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1226,
			"name": "\"schedule/hooks/useTimeCells\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/hooks/useTimeCells.ts",
			"children": [
				{
					"id": 1227,
					"name": "useTimeCells",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 1228,
							"name": "useTimeCells",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 1229,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "UseTimeCellsProps"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "UseTimeCellsResult"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/useTimeCells.ts",
							"line": 53,
							"character": 25
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1227
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/hooks/useTimeCells.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2379,
			"name": "\"schedule/hooks/useTimeCells.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/hooks/useTimeCells.d.ts",
			"children": [
				{
					"id": 2380,
					"name": "useTimeCells",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/schedule/hooks/useTimeCells.d.ts",
							"line": 40,
							"character": 33
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2381,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2382,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2383,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "UseTimeCellsProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "UseTimeCellsResult"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/hooks/useTimeCells.d.ts",
									"line": 40,
									"character": 34
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						2380
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/hooks/useTimeCells.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1147,
			"name": "\"schedule/hooks/useTimeIndicator\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/hooks/useTimeIndicator.ts",
			"children": [
				{
					"id": 1148,
					"name": "useTimeIndicator",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 1149,
							"name": "useTimeIndicator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 1150,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"originalName": "__0",
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1151,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 1154,
													"name": "endHour",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/schedule/hooks/useTimeIndicator.ts",
															"line": 41,
															"character": 11
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1156,
													"name": "onPositionUpdate",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/schedule/hooks/useTimeIndicator.ts",
															"line": 43,
															"character": 20
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1157,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															},
															"signatures": [
																{
																	"id": 1158,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExported": true
																	},
																	"parameters": [
																		{
																			"id": 1159,
																			"name": "position",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExported": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 1160,
																			"name": "isWithinBounds",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isExported": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "boolean"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												},
												{
													"id": 1155,
													"name": "renderDates",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/schedule/hooks/useTimeIndicator.ts",
															"line": 42,
															"character": 15
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "Date"
														}
													}
												},
												{
													"id": 1152,
													"name": "showTimeIndicator",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/schedule/hooks/useTimeIndicator.ts",
															"line": 39,
															"character": 21
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 1153,
													"name": "startHour",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/schedule/hooks/useTimeIndicator.ts",
															"line": 40,
															"character": 13
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1154,
														1156,
														1155,
														1152,
														1153
													]
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/hooks/useTimeIndicator.ts",
													"line": 38,
													"character": 5
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1161,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 1163,
											"name": "currentTime",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/schedule/hooks/useTimeIndicator.ts",
													"line": 210,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 1164,
											"name": "isVisible",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/schedule/hooks/useTimeIndicator.ts",
													"line": 211,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1165,
											"name": "isWithinBounds",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/schedule/hooks/useTimeIndicator.ts",
													"line": 212,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1166,
											"name": "multiDayViewInfo",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/schedule/hooks/useTimeIndicator.ts",
													"line": 213,
													"character": 24
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1167,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 1170,
															"name": "columns",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "src/schedule/hooks/useTimeIndicator.ts",
																	"line": 15,
																	"character": 11
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"name": "TimeIndicatorColumn"
																}
															}
														},
														{
															"id": 1169,
															"name": "hasValidRenderDates",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "src/schedule/hooks/useTimeIndicator.ts",
																	"line": 14,
																	"character": 23
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														},
														{
															"id": 1171,
															"name": "isCurrentDayRendered",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "src/schedule/hooks/useTimeIndicator.ts",
																	"line": 16,
																	"character": 24
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														},
														{
															"id": 1168,
															"name": "isMultiDayView",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "src/schedule/hooks/useTimeIndicator.ts",
																	"line": 13,
																	"character": 18
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1170,
																1169,
																1171,
																1168
															]
														}
													]
												}
											},
											"defaultValue": "getMultiDayViewInfo()"
										},
										{
											"id": 1162,
											"name": "position",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/schedule/hooks/useTimeIndicator.ts",
													"line": 209,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1172,
											"name": "updatePosition",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/schedule/hooks/useTimeIndicator.ts",
													"line": 214,
													"character": 22
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1173,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 1174,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1163,
												1164,
												1165,
												1166,
												1162,
												1172
											]
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/useTimeIndicator.ts",
							"line": 19,
							"character": 29
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1148
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/hooks/useTimeIndicator.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2384,
			"name": "\"schedule/hooks/useTimeIndicator.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/hooks/useTimeIndicator.d.ts",
			"children": [
				{
					"id": 2385,
					"name": "useTimeIndicator",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/schedule/hooks/useTimeIndicator.d.ts",
							"line": 13,
							"character": 37
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2386,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2387,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2388,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"originalName": "__0",
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2389,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"children": [
														{
															"id": 2392,
															"name": "endHour",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "src/schedule/hooks/useTimeIndicator.d.ts",
																	"line": 13,
																	"character": 79
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2394,
															"name": "onPositionUpdate",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "src/schedule/hooks/useTimeIndicator.d.ts",
																	"line": 13,
																	"character": 110
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 2395,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	},
																	"signatures": [
																		{
																			"id": 2396,
																			"name": "__call",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {
																				"isExported": true
																			},
																			"parameters": [
																				{
																					"id": 2397,
																					"name": "position",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {
																						"isExported": true
																					},
																					"type": {
																						"type": "intrinsic",
																						"name": "number"
																					}
																				},
																				{
																					"id": 2398,
																					"name": "isWithinBounds",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {
																						"isExported": true
																					},
																					"type": {
																						"type": "intrinsic",
																						"name": "boolean"
																					}
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "void"
																			}
																		}
																	]
																}
															}
														},
														{
															"id": 2393,
															"name": "renderDates",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "src/schedule/hooks/useTimeIndicator.d.ts",
																	"line": 13,
																	"character": 92
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"name": "Date"
																}
															}
														},
														{
															"id": 2390,
															"name": "showTimeIndicator",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "src/schedule/hooks/useTimeIndicator.d.ts",
																	"line": 13,
																	"character": 59
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														},
														{
															"id": 2391,
															"name": "startHour",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExported": true
															},
															"sources": [
																{
																	"fileName": "src/schedule/hooks/useTimeIndicator.d.ts",
																	"line": 13,
																	"character": 70
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																2392,
																2394,
																2393,
																2390,
																2391
															]
														}
													],
													"sources": [
														{
															"fileName": "src/schedule/hooks/useTimeIndicator.d.ts",
															"line": 13,
															"character": 40
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2399,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 2401,
													"name": "currentTime",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/schedule/hooks/useTimeIndicator.d.ts",
															"line": 21,
															"character": 15
														}
													],
													"type": {
														"type": "reference",
														"name": "Date"
													}
												},
												{
													"id": 2402,
													"name": "isVisible",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/schedule/hooks/useTimeIndicator.d.ts",
															"line": 22,
															"character": 13
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 2403,
													"name": "isWithinBounds",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/schedule/hooks/useTimeIndicator.d.ts",
															"line": 23,
															"character": 18
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 2404,
													"name": "multiDayViewInfo",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/schedule/hooks/useTimeIndicator.d.ts",
															"line": 24,
															"character": 20
														}
													],
													"type": {
														"type": "reference",
														"name": "MultiDayViewInfo"
													}
												},
												{
													"id": 2400,
													"name": "position",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/schedule/hooks/useTimeIndicator.d.ts",
															"line": 20,
															"character": 12
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 2405,
													"name": "updatePosition",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/schedule/hooks/useTimeIndicator.d.ts",
															"line": 25,
															"character": 18
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 2406,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExported": true
															},
															"signatures": [
																{
																	"id": 2407,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {
																		"isExported": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															],
															"sources": [
																{
																	"fileName": "src/schedule/hooks/useTimeIndicator.d.ts",
																	"line": 25,
																	"character": 19
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														2401,
														2402,
														2403,
														2404,
														2400,
														2405
													]
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/hooks/useTimeIndicator.d.ts",
													"line": 19,
													"character": 5
												}
											]
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/hooks/useTimeIndicator.d.ts",
									"line": 13,
									"character": 38
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						2385
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/hooks/useTimeIndicator.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1250,
			"name": "\"schedule/hooks/useTimeSlotEvent\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/hooks/useTimeSlotEvent.ts",
			"children": [
				{
					"id": 1251,
					"name": "DayEventsWrapper",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Interface for a day's events wrapper"
					},
					"children": [
						{
							"id": 1253,
							"name": "dateTimestamp",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Date timestamp for the wrapper"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useTimeSlotEvent.ts",
									"line": 25,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1254,
							"name": "events",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Events for this day"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useTimeSlotEvent.ts",
									"line": 30,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1116,
									"name": "ProcessedEventsData"
								}
							}
						},
						{
							"id": 1252,
							"name": "key",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Unique key for the wrapper"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useTimeSlotEvent.ts",
									"line": 20,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1253,
								1254,
								1252
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/useTimeSlotEvent.ts",
							"line": 16,
							"character": 33
						}
					]
				},
				{
					"id": 1255,
					"name": "useTimeSlotEvent",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Custom hook to process and render events for the schedule",
						"returns": "- Processed events data with rendered content\n"
					},
					"signatures": [
						{
							"id": 1256,
							"name": "useTimeSlotEvent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Custom hook to process and render events for the schedule",
								"returns": "- Processed events data with rendered content\n"
							},
							"type": {
								"type": "reference",
								"name": "UseTimeSlotEventResult"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/useTimeSlotEvent.ts",
							"line": 48,
							"character": 29
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1251
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1255
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/hooks/useTimeSlotEvent.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2408,
			"name": "\"schedule/hooks/useTimeSlotEvent.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/hooks/useTimeSlotEvent.d.ts",
			"children": [
				{
					"id": 2409,
					"name": "DayEventsWrapper",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Interface for a day's events wrapper"
					},
					"children": [
						{
							"id": 2411,
							"name": "dateTimestamp",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Date timestamp for the wrapper"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useTimeSlotEvent.d.ts",
									"line": 13,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2412,
							"name": "events",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Events for this day"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useTimeSlotEvent.d.ts",
									"line": 17,
									"character": 10
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1116,
									"name": "ProcessedEventsData"
								}
							}
						},
						{
							"id": 2410,
							"name": "key",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Unique key for the wrapper"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useTimeSlotEvent.d.ts",
									"line": 9,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2411,
								2412,
								2410
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/useTimeSlotEvent.d.ts",
							"line": 5,
							"character": 33
						}
					]
				},
				{
					"id": 2413,
					"name": "useTimeSlotEvent",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Custom hook to process and render events for the schedule",
						"tags": [
							{
								"tag": "returns",
								"text": "- Processed events data with rendered content\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/schedule/hooks/useTimeSlotEvent.d.ts",
							"line": 33,
							"character": 37
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2414,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2415,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "UseTimeSlotEventResult"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/hooks/useTimeSlotEvent.d.ts",
									"line": 33,
									"character": 38
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2409
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						2413
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/hooks/useTimeSlotEvent.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1257,
			"name": "\"schedule/hooks/useVerticalView\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/hooks/useVerticalView.ts",
			"children": [
				{
					"id": 1258,
					"name": "useVerticalView",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "A hook to handle the logic for vertical view components\nSeparates positioning and state logic from rendering",
						"returns": "- Methods and state for vertical view\n"
					},
					"signatures": [
						{
							"id": 1259,
							"name": "useVerticalView",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A hook to handle the logic for vertical view components\nSeparates positioning and state logic from rendering",
								"returns": "- Methods and state for vertical view\n"
							},
							"parameters": [
								{
									"id": 1260,
									"name": "viewType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The view type (Day, Week, WorkWeek)"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "UseVerticalViewResult"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/useVerticalView.ts",
							"line": 47,
							"character": 28
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1258
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/hooks/useVerticalView.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2416,
			"name": "\"schedule/hooks/useVerticalView.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/hooks/useVerticalView.d.ts",
			"children": [
				{
					"id": 2417,
					"name": "useVerticalView",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "A hook to handle the logic for vertical view components\nSeparates positioning and state logic from rendering",
						"tags": [
							{
								"tag": "param",
								"text": "The view type (Day, Week, WorkWeek)",
								"param": "viewType"
							},
							{
								"tag": "returns",
								"text": "- Methods and state for vertical view\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/schedule/hooks/useVerticalView.d.ts",
							"line": 37,
							"character": 36
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2418,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2419,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2420,
											"name": "viewType",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "UseVerticalViewResult"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/hooks/useVerticalView.d.ts",
									"line": 37,
									"character": 37
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						2417
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/hooks/useVerticalView.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1261,
			"name": "\"schedule/hooks/useWeekDayHeader\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/hooks/useWeekDayHeader.ts",
			"children": [
				{
					"id": 1262,
					"name": "WeekDayHeaderCell",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Interface for weekday header cell data"
					},
					"children": [
						{
							"id": 1265,
							"name": "className",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "CSS class names for the cell"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useWeekDayHeader.ts",
									"line": 22,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1263,
							"name": "day",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Display name of the weekday"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useWeekDayHeader.ts",
									"line": 12,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1264,
							"name": "isCurrentDay",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Whether this date is a current day"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useWeekDayHeader.ts",
									"line": 17,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1266,
							"name": "key",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Unique key for React rendering"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useWeekDayHeader.ts",
									"line": 27,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1265,
								1263,
								1264,
								1266
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/useWeekDayHeader.ts",
							"line": 8,
							"character": 34
						}
					]
				},
				{
					"id": 1267,
					"name": "useWeekDayHeader",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1268,
							"name": "useWeekDayHeader",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Custom hook for weekday header logic",
								"returns": "Weekday header data\n"
							},
							"type": {
								"type": "reference",
								"name": "WeekDayHeaderResult"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/useWeekDayHeader.ts",
							"line": 45,
							"character": 32
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1262
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1267
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/hooks/useWeekDayHeader.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2421,
			"name": "\"schedule/hooks/useWeekDayHeader.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/hooks/useWeekDayHeader.d.ts",
			"children": [
				{
					"id": 2422,
					"name": "WeekDayHeaderCell",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Interface for weekday header cell data"
					},
					"children": [
						{
							"id": 2425,
							"name": "className",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "CSS class names for the cell"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useWeekDayHeader.d.ts",
									"line": 16,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2423,
							"name": "day",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Display name of the weekday"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useWeekDayHeader.d.ts",
									"line": 8,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2424,
							"name": "isCurrentDay",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Whether this date is a current day"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useWeekDayHeader.d.ts",
									"line": 12,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2426,
							"name": "key",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Unique key for React rendering"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useWeekDayHeader.d.ts",
									"line": 20,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2425,
								2423,
								2424,
								2426
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/useWeekDayHeader.d.ts",
							"line": 4,
							"character": 34
						}
					]
				},
				{
					"id": 2427,
					"name": "useWeekDayHeader",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 2428,
							"name": "useWeekDayHeader",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Custom hook for weekday header logic",
								"returns": "Weekday header data\n"
							},
							"type": {
								"type": "reference",
								"name": "WeekDayHeaderResult"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/useWeekDayHeader.d.ts",
							"line": 36,
							"character": 40
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2422
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						2427
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/hooks/useWeekDayHeader.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1234,
			"name": "\"schedule/hooks/useWorkCells\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/hooks/useWorkCells.ts",
			"children": [
				{
					"id": 1235,
					"name": "WorkCell",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Interface for a work cell"
					},
					"children": [
						{
							"id": 1237,
							"name": "className",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "CSS class names for the cell"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useWorkCells.ts",
									"line": 69,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1239,
							"name": "dataAttributes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Data attributes for the cell"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useWorkCells.ts",
									"line": 79,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1240,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 1241,
											"name": "date",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/schedule/hooks/useWorkCells.ts",
													"line": 80,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1242,
											"name": "dateKey",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/schedule/hooks/useWorkCells.ts",
													"line": 81,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1241,
												1242
											]
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/useWorkCells.ts",
											"line": 79,
											"character": 19
										}
									]
								}
							}
						},
						{
							"id": 1236,
							"name": "date",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The date for this cell"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useWorkCells.ts",
									"line": 64,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							}
						},
						{
							"id": 1246,
							"name": "isAlternate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Whether this is an alternate cell"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useWorkCells.ts",
									"line": 102,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1244,
							"name": "isToday",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Whether this date is today"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useWorkCells.ts",
									"line": 92,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1245,
							"name": "isWeekend",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Whether this date is a weekend"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useWorkCells.ts",
									"line": 97,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1243,
							"name": "isWorkHour",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Whether this cell is part of work hours"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useWorkCells.ts",
									"line": 87,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1238,
							"name": "key",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Unique key for React rendering"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useWorkCells.ts",
									"line": 74,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1237,
								1239,
								1236,
								1246,
								1244,
								1245,
								1243,
								1238
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/useWorkCells.ts",
							"line": 60,
							"character": 25
						}
					]
				},
				{
					"id": 1247,
					"name": "useWorkCells",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Custom hook to process work cells and provide related functionalities",
						"returns": "Processed cells data and related functions\n"
					},
					"signatures": [
						{
							"id": 1248,
							"name": "useWorkCells",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Custom hook to process work cells and provide related functionalities",
								"returns": "Processed cells data and related functions\n"
							},
							"parameters": [
								{
									"id": 1249,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The props for work cells"
									},
									"type": {
										"type": "reference",
										"name": "UseWorkCellsProps"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "UseWorkCellsResult"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/useWorkCells.ts",
							"line": 140,
							"character": 25
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1235
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1247
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/hooks/useWorkCells.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2429,
			"name": "\"schedule/hooks/useWorkCells.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/hooks/useWorkCells.d.ts",
			"children": [
				{
					"id": 2430,
					"name": "WorkCell",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Interface for a work cell"
					},
					"children": [
						{
							"id": 2432,
							"name": "className",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "CSS class names for the cell"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useWorkCells.d.ts",
									"line": 59,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2434,
							"name": "dataAttributes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Data attributes for the cell"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useWorkCells.d.ts",
									"line": 67,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2435,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 2436,
											"name": "date",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/schedule/hooks/useWorkCells.d.ts",
													"line": 68,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2437,
											"name": "dateKey",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/schedule/hooks/useWorkCells.d.ts",
													"line": 69,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												2436,
												2437
											]
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/hooks/useWorkCells.d.ts",
											"line": 67,
											"character": 19
										}
									]
								}
							}
						},
						{
							"id": 2431,
							"name": "date",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The date for this cell"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useWorkCells.d.ts",
									"line": 55,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							}
						},
						{
							"id": 2441,
							"name": "isAlternate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Whether this is an alternate cell"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useWorkCells.d.ts",
									"line": 86,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2439,
							"name": "isToday",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Whether this date is today"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useWorkCells.d.ts",
									"line": 78,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2440,
							"name": "isWeekend",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Whether this date is a weekend"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useWorkCells.d.ts",
									"line": 82,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2438,
							"name": "isWorkHour",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Whether this cell is part of work hours"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useWorkCells.d.ts",
									"line": 74,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2433,
							"name": "key",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Unique key for React rendering"
							},
							"sources": [
								{
									"fileName": "src/schedule/hooks/useWorkCells.d.ts",
									"line": 63,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2432,
								2434,
								2431,
								2441,
								2439,
								2440,
								2438,
								2433
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/hooks/useWorkCells.d.ts",
							"line": 51,
							"character": 25
						}
					]
				},
				{
					"id": 2442,
					"name": "useWorkCells",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "Custom hook to process work cells and provide related functionalities",
						"tags": [
							{
								"tag": "param",
								"text": "The props for work cells",
								"param": "props"
							},
							{
								"tag": "returns",
								"text": "Processed cells data and related functions\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/schedule/hooks/useWorkCells.d.ts",
							"line": 119,
							"character": 33
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2443,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2444,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2445,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "UseWorkCellsProps"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "UseWorkCellsResult"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/hooks/useWorkCells.d.ts",
									"line": 119,
									"character": 34
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2430
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						2442
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/hooks/useWorkCells.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1344,
			"name": "\"schedule/index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/index.ts",
			"children": [
				{
					"id": 1359,
					"name": "ActionEventArgs",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 301
				},
				{
					"id": 1362,
					"name": "CalendarType",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 4
				},
				{
					"id": 1354,
					"name": "CellClickEvent",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 280
				},
				{
					"id": 1347,
					"name": "DragEventArgs",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 140
				},
				{
					"id": 1355,
					"name": "EventClickEvent",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 287
				},
				{
					"id": 1353,
					"name": "EventModel",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 268
				},
				{
					"id": 1358,
					"name": "EventRenderedArgs",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 297
				},
				{
					"id": 1350,
					"name": "EventSettings",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 226
				},
				{
					"id": 1349,
					"name": "MonthViewProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 207
				},
				{
					"id": 1356,
					"name": "MoreClickEvent",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 291
				},
				{
					"id": 1345,
					"name": "ScheduleCommonProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 6
				},
				{
					"id": 1346,
					"name": "ScheduleProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 33
				},
				{
					"id": 1361,
					"name": "SpannedEventPlacement",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 3
				},
				{
					"id": 1351,
					"name": "TimeScaleModel",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 252
				},
				{
					"id": 1357,
					"name": "TimeSlotTemplateProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 294
				},
				{
					"id": 1360,
					"name": "View",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 2
				},
				{
					"id": 1348,
					"name": "ViewSpecificProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 155
				},
				{
					"id": 1352,
					"name": "WorkHoursModel",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 264
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						1359,
						1362,
						1354,
						1347,
						1355,
						1353,
						1358,
						1350,
						1349,
						1356,
						1345,
						1346,
						1361,
						1351,
						1357,
						1360,
						1348,
						1352
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1401,
			"name": "\"schedule/index.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/index.d.ts",
			"children": [
				{
					"id": 1416,
					"name": "ActionEventArgs",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 301
				},
				{
					"id": 1419,
					"name": "CalendarType",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 4
				},
				{
					"id": 1411,
					"name": "CellClickEvent",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 280
				},
				{
					"id": 1404,
					"name": "DragEventArgs",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 140
				},
				{
					"id": 1412,
					"name": "EventClickEvent",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 287
				},
				{
					"id": 1410,
					"name": "EventModel",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 268
				},
				{
					"id": 1415,
					"name": "EventRenderedArgs",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 297
				},
				{
					"id": 1407,
					"name": "EventSettings",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 226
				},
				{
					"id": 1406,
					"name": "MonthViewProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 207
				},
				{
					"id": 1413,
					"name": "MoreClickEvent",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 291
				},
				{
					"id": 1402,
					"name": "ScheduleCommonProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 6
				},
				{
					"id": 1403,
					"name": "ScheduleProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 33
				},
				{
					"id": 1418,
					"name": "SpannedEventPlacement",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 3
				},
				{
					"id": 1408,
					"name": "TimeScaleModel",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 252
				},
				{
					"id": 1414,
					"name": "TimeSlotTemplateProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 294
				},
				{
					"id": 1417,
					"name": "View",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 2
				},
				{
					"id": 1405,
					"name": "ViewSpecificProps",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 155
				},
				{
					"id": 1409,
					"name": "WorkHoursModel",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 264
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						1416,
						1419,
						1411,
						1404,
						1412,
						1410,
						1415,
						1407,
						1406,
						1413,
						1402,
						1403,
						1418,
						1408,
						1414,
						1417,
						1405,
						1409
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/index.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1420,
			"name": "\"schedule/schedule.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/schedule.d.ts",
			"children": [
				{
					"id": 1421,
					"name": "ISchedule",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1465,
							"name": "onCellClick",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback when a cell is clicked."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 226,
									"character": 15
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1466,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1467,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1468,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 280,
														"name": "CellClickEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 226,
											"character": 17
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 64,
								"name": "ScheduleProps.onCellClick"
							}
						},
						{
							"id": 1469,
							"name": "onCellDoubleClick",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback when a cell is double-clicked."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 233,
									"character": 21
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1470,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1471,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1472,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 280,
														"name": "CellClickEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 233,
											"character": 23
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 68,
								"name": "ScheduleProps.onCellDoubleClick"
							}
						},
						{
							"id": 1449,
							"name": "onCurrentViewChange",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback when the current view changes."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 198,
									"character": 23
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1450,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1451,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1452,
													"name": "view",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 2,
														"name": "View"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 198,
											"character": 25
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 48,
								"name": "ScheduleProps.onCurrentViewChange"
							}
						},
						{
							"id": 1491,
							"name": "onDrag",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Triggers when an appointment is dragged."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 282,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1492,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1493,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1494,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 140,
														"name": "DragEventArgs"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 282,
											"character": 12
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 90,
								"name": "ScheduleProps.onDrag"
							}
						},
						{
							"id": 1487,
							"name": "onDragStart",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Triggers when an appointment is started to drag."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 275,
									"character": 15
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1488,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1489,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1490,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 140,
														"name": "DragEventArgs"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 275,
											"character": 17
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 86,
								"name": "ScheduleProps.onDragStart"
							}
						},
						{
							"id": 1495,
							"name": "onDragStop",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Triggers when the dragging of appointment is stopped."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 289,
									"character": 14
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1496,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1497,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1498,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 140,
														"name": "DragEventArgs"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 289,
											"character": 16
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 94,
								"name": "ScheduleProps.onDragStop"
							}
						},
						{
							"id": 1473,
							"name": "onEventClick",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback when an event is clicked."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 240,
									"character": 16
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1474,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1475,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1476,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 287,
														"name": "EventClickEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 240,
											"character": 18
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 72,
								"name": "ScheduleProps.onEventClick"
							}
						},
						{
							"id": 1453,
							"name": "onEventCreate",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback when an event is created."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 205,
									"character": 17
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1454,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1455,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1456,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 301,
														"name": "ActionEventArgs"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 205,
											"character": 19
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 52,
								"name": "ScheduleProps.onEventCreate"
							}
						},
						{
							"id": 1461,
							"name": "onEventDelete",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback when an event is deleted."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 219,
									"character": 17
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1462,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1463,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1464,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 301,
														"name": "ActionEventArgs"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 219,
											"character": 19
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 60,
								"name": "ScheduleProps.onEventDelete"
							}
						},
						{
							"id": 1477,
							"name": "onEventDoubleClick",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback when an event is double-clicked."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 247,
									"character": 22
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1478,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1479,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1480,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 287,
														"name": "EventClickEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 247,
											"character": 24
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 76,
								"name": "ScheduleProps.onEventDoubleClick"
							}
						},
						{
							"id": 1481,
							"name": "onEventRendered",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback triggered before an event is rendered."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 254,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1482,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1483,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1484,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 297,
														"name": "EventRenderedArgs"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 254,
											"character": 21
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 80,
								"name": "ScheduleProps.onEventRendered"
							}
						},
						{
							"id": 1457,
							"name": "onEventUpdate",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback when an event is updated."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 212,
									"character": 17
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1458,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1459,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1460,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 301,
														"name": "ActionEventArgs"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 212,
											"character": 19
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 56,
								"name": "ScheduleProps.onEventUpdate"
							}
						},
						{
							"id": 1499,
							"name": "onMoreEventsClick",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback when more events are clicked."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 296,
									"character": 21
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1500,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1501,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1502,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 291,
														"name": "MoreClickEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 296,
											"character": 23
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 98,
								"name": "ScheduleProps.onMoreEventsClick"
							}
						},
						{
							"id": 1445,
							"name": "onSelectedDateChange",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback when the selected date changes."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 191,
									"character": 24
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1446,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1447,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1448,
													"name": "date",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"name": "Date"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 191,
											"character": 26
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 44,
								"name": "ScheduleProps.onSelectedDateChange"
							}
						},
						{
							"id": 1423,
							"name": "addEvent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Adds an event to the Schedule.",
								"tags": [
									{
										"tag": "param",
										"text": "\n",
										"param": "data"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/schedule.d.ts",
									"line": 16,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1424,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1425,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1426,
													"name": "data",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Record"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "intrinsic",
																			"name": "any"
																		}
																	],
																	"name": "Record"
																}
															}
														]
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/schedule.d.ts",
											"line": 16,
											"character": 14
										}
									]
								}
							}
						},
						{
							"id": 1485,
							"name": "allowDragAndDrop",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Enables or disables drag and drop functionality.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 261,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 84,
								"name": "ScheduleProps.allowDragAndDrop"
							}
						},
						{
							"id": 1486,
							"name": "allowMultiDrag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Enables or disables drag and drop multiple functionalities.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 268,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 85,
								"name": "ScheduleProps.allowMultiDrag"
							}
						},
						{
							"id": 1508,
							"name": "allowOverlap",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Determines whether events can overlap.\nWhen set to false, overlapping events will be prevented.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 19,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 7,
								"name": "ScheduleCommonProps.allowOverlap"
							}
						},
						{
							"id": 1444,
							"name": "calendarMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "It allows the Scheduler to display in other calendar modes.\nBy default, Scheduler is displayed in Gregorian calendar mode.",
								"tags": [
									{
										"tag": "default",
										"text": "'Gregorian'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 184,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"id": 4,
								"name": "CalendarType"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 43,
								"name": "ScheduleProps.calendarMode"
							}
						},
						{
							"id": 1526,
							"name": "cellTemplate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The template for rendering cells in this specific view.\nThis can be at both view and root level.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 105,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "ReactNode"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1527,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 1528,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 1529,
															"name": "props",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 1530,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	},
																	"children": [
																		{
																			"id": 1531,
																			"name": "date",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.ts",
																					"line": 105,
																					"character": 46
																				}
																			],
																			"type": {
																				"type": "reference",
																				"name": "Date"
																			}
																		},
																		{
																			"id": 1533,
																			"name": "groupIndex",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true,
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.ts",
																					"line": 105,
																					"character": 78
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 1532,
																			"name": "type",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.ts",
																					"line": 105,
																					"character": 58
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				1531,
																				1533,
																				1532
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "src/schedule/types/schedule-types.ts",
																			"line": 105,
																			"character": 39
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.ts",
													"line": 105,
													"character": 30
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 25,
								"name": "ScheduleCommonProps.cellTemplate"
							}
						},
						{
							"id": 1507,
							"name": "children",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The children components."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 305,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "React.ReactNode"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 106,
								"name": "ScheduleProps.children"
							}
						},
						{
							"id": 1534,
							"name": "className",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 6,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 134,
								"name": "__type.className"
							}
						},
						{
							"id": 1438,
							"name": "currentView",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The current view of the Schedule component.\nCan be either a View type ('Day', 'Week', 'WorkWeek') or a specific view name\nthat matches with a child view's name property.",
								"tags": [
									{
										"tag": "default",
										"text": "'Week'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 139,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 37,
								"name": "ScheduleProps.currentView"
							}
						},
						{
							"id": 1512,
							"name": "dateFormat",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The date format for the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 47,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 11,
								"name": "ScheduleCommonProps.dateFormat"
							}
						},
						{
							"id": 1519,
							"name": "dateHeaderTemplate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The template for rendering date header cells in this specific view.\nThis can be at both view and root level.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 97,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "ReactNode"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1520,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 1521,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 1522,
															"name": "props",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 1523,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	},
																	"children": [
																		{
																			"id": 1524,
																			"name": "date",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.ts",
																					"line": 97,
																					"character": 52
																				}
																			],
																			"type": {
																				"type": "reference",
																				"name": "Date"
																			}
																		},
																		{
																			"id": 1525,
																			"name": "type",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.ts",
																					"line": 97,
																					"character": 64
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				1524,
																				1525
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "src/schedule/types/schedule-types.ts",
																			"line": 97,
																			"character": 45
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.ts",
													"line": 97,
													"character": 36
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 18,
								"name": "ScheduleCommonProps.dateHeaderTemplate"
							}
						},
						{
							"id": 1427,
							"name": "deleteEvent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Deletes an event from the Schedule.",
								"tags": [
									{
										"tag": "param",
										"text": "\n",
										"param": "id"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/schedule.d.ts",
									"line": 22,
									"character": 15
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1428,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1429,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1430,
													"name": "id",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Record"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "intrinsic",
																			"name": "any"
																		}
																	],
																	"name": "Record"
																}
															}
														]
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/schedule.d.ts",
											"line": 22,
											"character": 17
										}
									]
								}
							}
						},
						{
							"id": 1422,
							"name": "element",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The Schedule component element.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/schedule.d.ts",
									"line": 10,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "HTMLDivElement"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						},
						{
							"id": 1511,
							"name": "endHour",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The end hour of the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "'24:00'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 40,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 10,
								"name": "ScheduleCommonProps.endHour"
							}
						},
						{
							"id": 1439,
							"name": "eventSettings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The event settings for the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "{ dataSource: [], fields: { id: 'Id', subject: 'Subject', startTime: 'StartTime', endTime: 'EndTime', isAllDay: 'IsAllDay', location: 'Location', description: 'Description' } }\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 146,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"id": 226,
								"name": "EventSettings"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 38,
								"name": "ScheduleProps.eventSettings"
							}
						},
						{
							"id": 1516,
							"name": "firstDayOfWeek",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The first day of the week in the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "0\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 75,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 15,
								"name": "ScheduleCommonProps.firstDayOfWeek"
							}
						},
						{
							"id": 1435,
							"name": "height",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The height of the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "'auto'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 116,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 34,
								"name": "ScheduleProps.height"
							}
						},
						{
							"id": 1535,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 7,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 135,
								"name": "__type.id"
							}
						},
						{
							"id": 1503,
							"name": "onActionFailure",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Triggers when a scheduler action gets failed or interrupted and an error information will be returned."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 300,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1504,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1505,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1506,
													"name": "error",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 300,
											"character": 21
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 102,
								"name": "ScheduleProps.onActionFailure"
							}
						},
						{
							"id": 1443,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "When set to true, makes the Schedule to render in a read only mode.\nNo CRUD actions will be allowed at this time.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 176,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 42,
								"name": "ScheduleProps.readOnly"
							}
						},
						{
							"id": 1442,
							"name": "rowAutoHeight",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "When true, row height will automatically adjust to fit all events.\nThis takes precedence over maxEventsPerRow when both are set.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 168,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 41,
								"name": "ScheduleProps.rowAutoHeight"
							}
						},
						{
							"id": 1431,
							"name": "saveEvent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Saves an event in the Schedule.",
								"tags": [
									{
										"tag": "param",
										"text": "\n",
										"param": "data"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/schedule.d.ts",
									"line": 28,
									"character": 13
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1432,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1433,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1434,
													"name": "data",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Record"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"typeArguments": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "intrinsic",
																			"name": "any"
																		}
																	],
																	"name": "Record"
																}
															}
														]
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/schedule.d.ts",
											"line": 28,
											"character": 15
										}
									]
								}
							}
						},
						{
							"id": 1437,
							"name": "selectedDate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The selected date in the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "new Date()\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 130,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 36,
								"name": "ScheduleProps.selectedDate"
							}
						},
						{
							"id": 1509,
							"name": "showQuickInfoPopup",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Toggles the visibility of the quick info popup.\nWhen set to false, the popup will not be displayed.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 26,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 8,
								"name": "ScheduleCommonProps.showQuickInfoPopup"
							}
						},
						{
							"id": 1441,
							"name": "showTimeIndicator",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates whether to show the current time indicator in the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 160,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 40,
								"name": "ScheduleProps.showTimeIndicator"
							}
						},
						{
							"id": 1518,
							"name": "showWeekNumber",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates whether to show week numbers in the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 89,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 17,
								"name": "ScheduleCommonProps.showWeekNumber"
							}
						},
						{
							"id": 1513,
							"name": "showWeekend",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates whether to show weekends in the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 54,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 12,
								"name": "ScheduleCommonProps.showWeekend"
							}
						},
						{
							"id": 1510,
							"name": "startHour",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The start hour of the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "'00:00'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 33,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 9,
								"name": "ScheduleCommonProps.startHour"
							}
						},
						{
							"id": 1536,
							"name": "tabIndex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 8,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 136,
								"name": "__type.tabIndex"
							}
						},
						{
							"id": 1514,
							"name": "timeFormat",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The time format for the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 61,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 13,
								"name": "ScheduleCommonProps.timeFormat"
							}
						},
						{
							"id": 1515,
							"name": "timeScale",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The time scale configuration for the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "{ enable: true, interval: 60, slotCount: 2 }\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 68,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 252,
								"name": "TimeScaleModel"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 14,
								"name": "ScheduleCommonProps.timeScale"
							}
						},
						{
							"id": 1436,
							"name": "width",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The width of the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "'auto'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 123,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 35,
								"name": "ScheduleProps.width"
							}
						},
						{
							"id": 1517,
							"name": "workDays",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The work days of the week in the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "[1, 2, 3, 4, 5]\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 82,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 16,
								"name": "ScheduleCommonProps.workDays"
							}
						},
						{
							"id": 1440,
							"name": "workHours",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The work hours configuration for the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "{ highlight: false, start: '09:00', end: '18:00' }\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 153,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 264,
								"name": "WorkHoursModel"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 39,
								"name": "ScheduleProps.workHours"
							}
						}
					],
					"groups": [
						{
							"title": "Events",
							"kind": 8388608,
							"children": [
								1465,
								1469,
								1449,
								1491,
								1487,
								1495,
								1473,
								1453,
								1461,
								1477,
								1481,
								1457,
								1499,
								1445
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1423,
								1485,
								1486,
								1508,
								1444,
								1526,
								1507,
								1534,
								1438,
								1512,
								1519,
								1427,
								1422,
								1511,
								1439,
								1516,
								1435,
								1535,
								1503,
								1443,
								1442,
								1431,
								1437,
								1509,
								1441,
								1518,
								1513,
								1510,
								1536,
								1514,
								1515,
								1436,
								1517,
								1440
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/schedule.d.ts",
							"line": 3,
							"character": 26
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 33,
							"name": "ScheduleProps"
						}
					]
				},
				{
					"id": 1537,
					"name": "Schedule",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"comment": {
						"shortText": "The Schedule component displays a calendar-like interface for scheduling and managing events.",
						"text": "```typescript\nimport { Schedule, DayView, WeekView, WorkWeekView, MonthView } from '@syncfusion/react-schedule';\n\n<Schedule height='650px' width=\"100%\">\n  <DayView />\n  <WeekView />\n  <WorkWeekView />\n  <MonthView />\n</Schedule>\n```\n"
					},
					"sources": [
						{
							"fileName": "src/schedule/schedule.d.ts",
							"line": 44,
							"character": 29
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 33,
										"name": "ScheduleProps"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1421,
												"name": "ISchedule"
											}
										],
										"name": "RefAttributes"
									}
								]
							}
						],
						"name": "ForwardRefExoticComponent"
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1421
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1537
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/schedule.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 485,
			"name": "\"schedule/services/DateService\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/services/DateService.ts",
			"children": [
				{
					"id": 486,
					"name": "DateService",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 504,
							"name": "addDays",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 505,
									"name": "addDays",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Adds the specified number of days to a date",
										"returns": "A new Date object with the days added\n"
									},
									"parameters": [
										{
											"id": 506,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The date to which days will be added"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 507,
											"name": "days",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The number of days to add"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.ts",
									"line": 129,
									"character": 18
								}
							]
						},
						{
							"id": 508,
							"name": "addMonths",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 509,
									"name": "addMonths",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Adds the specified number of months to a date",
										"returns": "A new Date object with the months added\n"
									},
									"parameters": [
										{
											"id": 510,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The date to which months will be added"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 511,
											"name": "months",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The number of months to add"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.ts",
									"line": 142,
									"character": 20
								}
							]
						},
						{
							"id": 632,
							"name": "capitalizeFirstWord",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 633,
									"name": "capitalizeFirstWord",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Capitalizes the first word of a string based on the specified type",
										"returns": "The capitalized string\n"
									},
									"parameters": [
										{
											"id": 634,
											"name": "inputString",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The string to capitalize"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 635,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The type of capitalization ('single' or 'multiple')"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "stringLiteral",
														"value": "single"
													},
													{
														"type": "stringLiteral",
														"value": "multiple"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.ts",
									"line": 580,
									"character": 30
								}
							]
						},
						{
							"id": 574,
							"name": "createDateWithTime",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 575,
									"name": "createDateWithTime",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Creates a date with the specified time",
										"returns": "A new Date object with the specified time\n"
									},
									"parameters": [
										{
											"id": 576,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The base date"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 577,
											"name": "timeString",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The time string to set (e.g., '09:00')"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.ts",
									"line": 349,
									"character": 29
								}
							]
						},
						{
							"id": 516,
							"name": "firstDateOfMonth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 517,
									"name": "firstDateOfMonth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the first date of the month for the specified date",
										"returns": "A new Date object representing the first date of the month\n"
									},
									"parameters": [
										{
											"id": 518,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The date from which to get the first date of the month"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.ts",
									"line": 168,
									"character": 27
								}
							]
						},
						{
							"id": 667,
							"name": "formatCellDateRange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 668,
									"name": "formatCellDateRange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Format date range for cell popup as shown in the design",
										"returns": "Formatted date range string for cell popup (e.g., \"July 14, 2025 (9:30 AM - 10:00 AM)\")\n"
									},
									"parameters": [
										{
											"id": 669,
											"name": "startDate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Start date and time"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 670,
											"name": "endDate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "End date and time"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 671,
											"name": "locale",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Locale string for formatting"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.ts",
									"line": 778,
									"character": 30
								}
							]
						},
						{
							"id": 636,
							"name": "formatDateRange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 637,
									"name": "formatDateRange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Method that formats a date range as a string",
										"returns": "Returns the formatted date range\n"
									},
									"parameters": [
										{
											"id": 638,
											"name": "locale",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The locale to use for formatting"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 639,
											"name": "startDate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The start date"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 640,
											"name": "endDate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "The end date"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 641,
											"name": "customDateFormat",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "Optional custom date format"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.ts",
									"line": 617,
									"character": 26
								}
							]
						},
						{
							"id": 659,
							"name": "formatPopupDateRange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 660,
									"name": "formatPopupDateRange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Generates a human-readable string for the date range with time display.",
										"returns": "Formatted date range string\n"
									},
									"parameters": [
										{
											"id": 661,
											"name": "startDate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Start date and time"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 662,
											"name": "endDate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "End date and time"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 663,
											"name": "locale",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Locale string for formatting"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.ts",
									"line": 732,
									"character": 31
								}
							]
						},
						{
							"id": 617,
							"name": "formatRangeEnd",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 618,
									"name": "formatRangeEnd",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Formats the end date of a date range based on context",
										"returns": "Formatted end date string\n"
									},
									"parameters": [
										{
											"id": 619,
											"name": "locale",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The locale to use for formatting"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 620,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The date to format"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 621,
											"name": "startDate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The start date (for context)"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 622,
											"name": "format",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Base format type ('d' for day-first, 'm' for month-first)"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 623,
											"name": "mode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Calendar mode"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"gregorian\""
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.ts",
									"line": 516,
									"character": 25
								}
							]
						},
						{
							"id": 610,
							"name": "formatRangeStart",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 611,
									"name": "formatRangeStart",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Formats the start date of a date range based on context",
										"returns": "Formatted start date string\n"
									},
									"parameters": [
										{
											"id": 612,
											"name": "locale",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The locale to use for formatting"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 613,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The date to format"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 614,
											"name": "endDate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The end date (for context)"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 615,
											"name": "format",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Base format type ('d' for day-first, 'm' for month-first)"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 616,
											"name": "mode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Calendar mode"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"gregorian\""
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.ts",
									"line": 482,
									"character": 27
								}
							]
						},
						{
							"id": 627,
							"name": "formatTimeDisplay",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 628,
									"name": "formatTimeDisplay",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 629,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 268,
												"name": "EventModel"
											}
										},
										{
											"id": 630,
											"name": "locale",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 631,
											"name": "timeFormat",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.ts",
									"line": 551,
									"character": 28
								}
							]
						},
						{
							"id": 487,
							"name": "generateDateKey",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 488,
									"name": "generateDateKey",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Generates a date key string in YYYY-MM-DD format",
										"returns": "Date formatted as a string key\n"
									},
									"parameters": [
										{
											"id": 489,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The date to convert to a key"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.ts",
									"line": 22,
									"character": 26
								}
							]
						},
						{
							"id": 607,
							"name": "getDateFromString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 608,
									"name": "getDateFromString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Method to get date object from date string",
										"returns": "Returns the date object\n"
									},
									"parameters": [
										{
											"id": 609,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Accepts the date string"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.ts",
									"line": 467,
									"character": 28
								}
							]
						},
						{
							"id": 541,
							"name": "getDaysCount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 542,
									"name": "getDaysCount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the number of days between two dates",
										"returns": "The number of days between the dates\n"
									},
									"parameters": [
										{
											"id": 543,
											"name": "startDate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The start date"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 544,
											"name": "endDate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The end date"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.ts",
									"line": 243,
									"character": 23
								}
							]
						},
						{
							"id": 534,
							"name": "getDaysInMonth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 535,
									"name": "getDaysInMonth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the number of days in the month for the specified date",
										"returns": "The number of days in the month\n"
									},
									"parameters": [
										{
											"id": 536,
											"name": "month",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The month (0-11)"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 537,
											"name": "year",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The year"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.ts",
									"line": 220,
									"character": 25
								}
							]
						},
						{
							"id": 527,
							"name": "getMonthEnd",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 528,
									"name": "getMonthEnd",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 529,
											"name": "currentDate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 530,
											"name": "displayDate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 531,
											"name": "firstDayOfWeek",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 532,
											"name": "numberOfWeeks",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 533,
											"name": "interval",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.ts",
									"line": 193,
									"character": 22
								}
							]
						},
						{
							"id": 664,
							"name": "getMonthNames",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 665,
									"name": "getMonthNames",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets localized month names from CLDR data",
										"returns": "Array of localized month names\n"
									},
									"parameters": [
										{
											"id": 666,
											"name": "locale",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The locale string"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.ts",
									"line": 755,
									"character": 24
								}
							]
						},
						{
							"id": 649,
							"name": "getMonthRangeText",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 650,
									"name": "getMonthRangeText",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 651,
											"name": "selectedDate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 652,
											"name": "interval",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 653,
											"name": "displayDate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 654,
											"name": "numberOfWeeks",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 655,
											"name": "dateFormat",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 656,
											"name": "calendarMode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 4,
												"name": "CalendarType"
											}
										},
										{
											"id": 657,
											"name": "renderDates",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Date"
												}
											}
										},
										{
											"id": 658,
											"name": "locale",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.ts",
									"line": 674,
									"character": 28
								}
							]
						},
						{
							"id": 495,
							"name": "getMonthRenderDates",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 496,
									"name": "getMonthRenderDates",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 497,
											"name": "selectedDate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 498,
											"name": "interval",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 499,
											"name": "firstDayOfWeek",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 500,
											"name": "workDays",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										},
										{
											"id": 501,
											"name": "showWeekend",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 502,
											"name": "displayDate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 503,
											"name": "numberOfWeeks",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Date"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.ts",
									"line": 92,
									"character": 30
								}
							]
						},
						{
							"id": 522,
							"name": "getMonthStart",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 523,
									"name": "getMonthStart",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 524,
											"name": "currentDate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 525,
											"name": "displayDate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 526,
											"name": "firstDayOfWeek",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.ts",
									"line": 187,
									"character": 24
								}
							]
						},
						{
							"id": 490,
							"name": "getRenderDates",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 491,
									"name": "getRenderDates",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the dates to render for a specific view",
										"returns": "Array of dates to render\n"
									},
									"parameters": [
										{
											"id": 492,
											"name": "viewType",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Type of view (Day, Week, WorkWeek)"
											},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "View"
											}
										},
										{
											"id": 493,
											"name": "selectedDate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The currently selected date"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 494,
											"name": "activeViewProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The current active view props"
											},
											"type": {
												"type": "reference",
												"id": 915,
												"name": "ActiveViewProps"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Date"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.ts",
									"line": 36,
									"character": 25
								}
							]
						},
						{
							"id": 597,
							"name": "getScheduleStartAndEndMinutes",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 598,
									"name": "getScheduleStartAndEndMinutes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 599,
											"name": "startHour",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 600,
											"name": "endHour",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 601,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 603,
													"name": "scheduleEndMinutes",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/schedule/services/DateService.ts",
															"line": 437,
															"character": 128
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 602,
													"name": "scheduleStartMinutes",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/schedule/services/DateService.ts",
															"line": 437,
															"character": 100
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														603,
														602
													]
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/services/DateService.ts",
													"line": 437,
													"character": 77
												}
											]
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.ts",
									"line": 437,
									"character": 40
								}
							]
						},
						{
							"id": 594,
							"name": "getStartEndHours",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 595,
									"name": "getStartEndHours",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets a date object for a time string, handling special cases",
										"returns": "A date object with the correct time set\n"
									},
									"parameters": [
										{
											"id": 596,
											"name": "timeString",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The time string (e.g., '09:00', '24:00')"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.ts",
									"line": 420,
									"character": 27
								}
							]
						},
						{
							"id": 545,
							"name": "getWeekFirstDate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 546,
									"name": "getWeekFirstDate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the first day of the week for the specified date",
										"returns": "A new Date object representing the first day of the week\n"
									},
									"parameters": [
										{
											"id": 547,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The date from which to get the first day of the week"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 548,
											"name": "firstDayOfWeek",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The first day of the week (0 for Sunday, 1 for Monday, etc.)"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.ts",
									"line": 266,
									"character": 27
								}
							]
						},
						{
							"id": 549,
							"name": "getWeekLastDate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 550,
									"name": "getWeekLastDate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the last day of the week for the specified date",
										"returns": "A new Date object representing the last day of the week\n"
									},
									"parameters": [
										{
											"id": 551,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The date from which to get the last day of the week"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 552,
											"name": "firstDayOfWeek",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The first day of the week (0 for Sunday, 1 for Monday, etc.)"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.ts",
									"line": 282,
									"character": 26
								}
							]
						},
						{
							"id": 538,
							"name": "getWeekNumber",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 539,
									"name": "getWeekNumber",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the week number for the specified date",
										"returns": "The week number\n"
									},
									"parameters": [
										{
											"id": 540,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The date for which to get the week number"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.ts",
									"line": 230,
									"character": 24
								}
							]
						},
						{
							"id": 512,
							"name": "isFullDayEvent",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 513,
									"name": "isFullDayEvent",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 514,
											"name": "startTime",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 515,
											"name": "endTime",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.ts",
									"line": 152,
									"character": 25
								}
							]
						},
						{
							"id": 564,
							"name": "isLessthan24Hours",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 565,
									"name": "isLessthan24Hours",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 566,
											"name": "startTime",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 567,
											"name": "endTime",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.ts",
									"line": 326,
									"character": 28
								}
							]
						},
						{
							"id": 561,
							"name": "isMidnight",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 562,
									"name": "isMidnight",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Checks if date is on mid night",
										"returns": "True if the date on mid night, false otherwise\n"
									},
									"parameters": [
										{
											"id": 563,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The date"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.ts",
									"line": 319,
									"character": 21
								}
							]
						},
						{
							"id": 557,
							"name": "isSameDay",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 558,
									"name": "isSameDay",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Checks if two dates are on the same day",
										"returns": "True if the dates are on the same day, false otherwise\n"
									},
									"parameters": [
										{
											"id": 559,
											"name": "date1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The first date"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 560,
											"name": "date2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The second date"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.ts",
									"line": 305,
									"character": 20
								}
							]
						},
						{
							"id": 553,
							"name": "isSameMonth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 554,
									"name": "isSameMonth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Checks if two dates are in the same month",
										"returns": "True if the dates are in the same month, false otherwise\n"
									},
									"parameters": [
										{
											"id": 555,
											"name": "date1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The first date"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 556,
											"name": "date2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The second date"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.ts",
									"line": 294,
									"character": 22
								}
							]
						},
						{
							"id": 586,
							"name": "isToday",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 587,
									"name": "isToday",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Check if a date is the current date",
										"returns": "True if it's the current date\n"
									},
									"parameters": [
										{
											"id": 588,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The date to check"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.ts",
									"line": 384,
									"character": 18
								}
							]
						},
						{
							"id": 578,
							"name": "isWeekend",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 579,
									"name": "isWeekend",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Checks if a date is a weekend",
										"returns": "True if the date is a weekend, false otherwise\n"
									},
									"parameters": [
										{
											"id": 580,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The date to check"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 581,
											"name": "workDays",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The work days (0 for Sunday, 1 for Monday, etc.)"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.ts",
									"line": 363,
									"character": 20
								}
							]
						},
						{
							"id": 582,
							"name": "isWorkDay",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 583,
									"name": "isWorkDay",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Checks if a date is within the specified work days",
										"returns": "True if the date is a work day, false otherwise\n"
									},
									"parameters": [
										{
											"id": 584,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The date to check"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 585,
											"name": "workDays",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The work days (0 for Sunday, 1 for Monday, etc.)"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.ts",
									"line": 374,
									"character": 20
								}
							]
						},
						{
							"id": 589,
							"name": "isWorkHour",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 590,
									"name": "isWorkHour",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Checks if a date is within work hours",
										"returns": "True if the date is within work hours, false otherwise\n"
									},
									"parameters": [
										{
											"id": 591,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The date to check"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 592,
											"name": "workHours",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The work hours configuration"
											},
											"type": {
												"type": "reference",
												"id": 264,
												"name": "WorkHoursModel"
											}
										},
										{
											"id": 593,
											"name": "workDays",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The work days (0 for Sunday, 1 for Monday, etc.)"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.ts",
									"line": 397,
									"character": 21
								}
							]
						},
						{
							"id": 519,
							"name": "lastDateOfMonth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 520,
									"name": "lastDateOfMonth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the last date of the month for the specified date",
										"returns": "A new Date object representing the last date of the month\n"
									},
									"parameters": [
										{
											"id": 521,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The date from which to get the last date of the month"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.ts",
									"line": 180,
									"character": 26
								}
							]
						},
						{
							"id": 604,
							"name": "normalizeDate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 605,
									"name": "normalizeDate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Normalizes a date by removing time components",
										"returns": "A new date with time component set to midnight\n"
									},
									"parameters": [
										{
											"id": 606,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The date to normalize"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.ts",
									"line": 454,
									"character": 24
								}
							]
						},
						{
							"id": 568,
							"name": "parseTimeString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 569,
									"name": "parseTimeString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Parses a time string into hours and minutes",
										"returns": "An object with hours and minutes\n"
									},
									"parameters": [
										{
											"id": 570,
											"name": "timeString",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The time string to parse (e.g., '09:00')"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 571,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 572,
													"name": "hours",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/schedule/services/DateService.ts",
															"line": 337,
															"character": 55
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 573,
													"name": "minutes",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/schedule/services/DateService.ts",
															"line": 337,
															"character": 72
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														572,
														573
													]
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/services/DateService.ts",
													"line": 337,
													"character": 47
												}
											]
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.ts",
									"line": 337,
									"character": 26
								}
							]
						},
						{
							"id": 642,
							"name": "setValidDate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 643,
									"name": "setValidDate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 644,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.ts",
									"line": 664,
									"character": 23
								}
							]
						},
						{
							"id": 645,
							"name": "setValidFirstDayOfWeek",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 646,
									"name": "setValidFirstDayOfWeek",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 647,
											"name": "viewFirstDayOfWeek",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 648,
											"name": "rootFirstDayOfWeek",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.ts",
									"line": 668,
									"character": 33
								}
							]
						},
						{
							"id": 624,
							"name": "sortByTimeAndSpan",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 625,
									"name": "sortByTimeAndSpan",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 626,
											"name": "events",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 268,
													"name": "EventModel"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 268,
											"name": "EventModel"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.ts",
									"line": 532,
									"character": 28
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								504,
								508,
								632,
								574,
								516,
								667,
								636,
								659,
								617,
								610,
								627,
								487,
								607,
								541,
								534,
								527,
								664,
								649,
								495,
								522,
								490,
								597,
								594,
								545,
								549,
								538,
								512,
								564,
								561,
								557,
								553,
								586,
								578,
								582,
								589,
								519,
								604,
								568,
								642,
								645,
								624
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/services/DateService.ts",
							"line": 15,
							"character": 24
						}
					]
				},
				{
					"id": 672,
					"name": "DAYS_PER_WEEK",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/schedule/services/DateService.ts",
							"line": 6,
							"character": 26
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "7"
				},
				{
					"id": 675,
					"name": "DEFAULT_WEEKS",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/schedule/services/DateService.ts",
							"line": 9,
							"character": 26
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "6"
				},
				{
					"id": 677,
					"name": "HOURS_PER_DAY",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/schedule/services/DateService.ts",
							"line": 11,
							"character": 26
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "24"
				},
				{
					"id": 678,
					"name": "MINUTES_PER_DAY",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/schedule/services/DateService.ts",
							"line": 12,
							"character": 28
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "1440"
				},
				{
					"id": 673,
					"name": "MINUTES_PER_HOUR",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/schedule/services/DateService.ts",
							"line": 7,
							"character": 29
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "60"
				},
				{
					"id": 679,
					"name": "MS_PER_DAY",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/schedule/services/DateService.ts",
							"line": 13,
							"character": 23
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "86400000"
				},
				{
					"id": 676,
					"name": "MS_PER_MINUTE",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/schedule/services/DateService.ts",
							"line": 10,
							"character": 26
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "60000"
				},
				{
					"id": 674,
					"name": "WEEK_LENGTH",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/schedule/services/DateService.ts",
							"line": 8,
							"character": 24
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "7"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						486
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						672,
						675,
						677,
						678,
						673,
						679,
						676,
						674
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/services/DateService.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2446,
			"name": "\"schedule/services/DateService.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/services/DateService.d.ts",
			"children": [
				{
					"id": 2447,
					"name": "DateService",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 2585,
							"name": "sortByTimeAndSpan",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.d.ts",
									"line": 223,
									"character": 28
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2586,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2587,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2588,
													"name": "events",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 268,
															"name": "EventModel"
														}
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 268,
													"name": "EventModel"
												}
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/services/DateService.d.ts",
											"line": 223,
											"character": 29
										}
									]
								}
							}
						},
						{
							"id": 2465,
							"name": "addDays",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2466,
									"name": "addDays",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Adds the specified number of days to a date",
										"returns": "A new Date object with the days added\n"
									},
									"parameters": [
										{
											"id": 2467,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The date to which days will be added"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 2468,
											"name": "days",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The number of days to add"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.d.ts",
									"line": 37,
									"character": 18
								}
							]
						},
						{
							"id": 2469,
							"name": "addMonths",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2470,
									"name": "addMonths",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Adds the specified number of months to a date",
										"returns": "A new Date object with the months added\n"
									},
									"parameters": [
										{
											"id": 2471,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The date to which months will be added"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 2472,
											"name": "months",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The number of months to add"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.d.ts",
									"line": 45,
									"character": 20
								}
							]
						},
						{
							"id": 2594,
							"name": "capitalizeFirstWord",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2595,
									"name": "capitalizeFirstWord",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Capitalizes the first word of a string based on the specified type",
										"returns": "The capitalized string\n"
									},
									"parameters": [
										{
											"id": 2596,
											"name": "inputString",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The string to capitalize"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2597,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The type of capitalization ('single' or 'multiple')"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "stringLiteral",
														"value": "single"
													},
													{
														"type": "stringLiteral",
														"value": "multiple"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.d.ts",
									"line": 232,
									"character": 30
								}
							]
						},
						{
							"id": 2535,
							"name": "createDateWithTime",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2536,
									"name": "createDateWithTime",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Creates a date with the specified time",
										"returns": "A new Date object with the specified time\n"
									},
									"parameters": [
										{
											"id": 2537,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The base date"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 2538,
											"name": "timeString",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The time string to set (e.g., '09:00')"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.d.ts",
									"line": 143,
									"character": 29
								}
							]
						},
						{
							"id": 2477,
							"name": "firstDateOfMonth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2478,
									"name": "firstDateOfMonth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the first date of the month for the specified date",
										"returns": "A new Date object representing the first date of the month\n"
									},
									"parameters": [
										{
											"id": 2479,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The date from which to get the first date of the month"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.d.ts",
									"line": 53,
									"character": 27
								}
							]
						},
						{
							"id": 2629,
							"name": "formatCellDateRange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2630,
									"name": "formatCellDateRange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Format date range for cell popup as shown in the design",
										"returns": "Formatted date range string for cell popup (e.g., \"July 14, 2025 (9:30 AM - 10:00 AM)\")\n"
									},
									"parameters": [
										{
											"id": 2631,
											"name": "startDate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Start date and time"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 2632,
											"name": "endDate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "End date and time"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 2633,
											"name": "locale",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Locale string for formatting"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.d.ts",
									"line": 270,
									"character": 30
								}
							]
						},
						{
							"id": 2598,
							"name": "formatDateRange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2599,
									"name": "formatDateRange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Method that formats a date range as a string",
										"returns": "Returns the formatted date range\n"
									},
									"parameters": [
										{
											"id": 2600,
											"name": "locale",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The locale to use for formatting"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2601,
											"name": "startDate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The start date"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 2602,
											"name": "endDate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "The end date"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 2603,
											"name": "customDateFormat",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "Optional custom date format"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.d.ts",
									"line": 242,
									"character": 26
								}
							]
						},
						{
							"id": 2621,
							"name": "formatPopupDateRange",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2622,
									"name": "formatPopupDateRange",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Generates a human-readable string for the date range with time display.",
										"returns": "Formatted date range string\n"
									},
									"parameters": [
										{
											"id": 2623,
											"name": "startDate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Start date and time"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 2624,
											"name": "endDate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "End date and time"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 2625,
											"name": "locale",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Locale string for formatting"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.d.ts",
									"line": 254,
									"character": 31
								}
							]
						},
						{
							"id": 2578,
							"name": "formatRangeEnd",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2579,
									"name": "formatRangeEnd",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Formats the end date of a date range based on context",
										"returns": "Formatted end date string\n"
									},
									"parameters": [
										{
											"id": 2580,
											"name": "locale",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The locale to use for formatting"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2581,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The date to format"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 2582,
											"name": "startDate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The start date (for context)"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 2583,
											"name": "format",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Base format type ('d' for day-first, 'm' for month-first)"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2584,
											"name": "mode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "Calendar mode"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.d.ts",
									"line": 222,
									"character": 25
								}
							]
						},
						{
							"id": 2571,
							"name": "formatRangeStart",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2572,
									"name": "formatRangeStart",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Formats the start date of a date range based on context",
										"returns": "Formatted start date string\n"
									},
									"parameters": [
										{
											"id": 2573,
											"name": "locale",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The locale to use for formatting"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2574,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The date to format"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 2575,
											"name": "endDate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The end date (for context)"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 2576,
											"name": "format",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Base format type ('d' for day-first, 'm' for month-first)"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2577,
											"name": "mode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "Calendar mode"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.d.ts",
									"line": 211,
									"character": 27
								}
							]
						},
						{
							"id": 2589,
							"name": "formatTimeDisplay",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2590,
									"name": "formatTimeDisplay",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2591,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 268,
												"name": "EventModel"
											}
										},
										{
											"id": 2592,
											"name": "locale",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2593,
											"name": "timeFormat",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.d.ts",
									"line": 224,
									"character": 28
								}
							]
						},
						{
							"id": 2448,
							"name": "generateDateKey",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2449,
									"name": "generateDateKey",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Generates a date key string in YYYY-MM-DD format",
										"returns": "Date formatted as a string key\n"
									},
									"parameters": [
										{
											"id": 2450,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The date to convert to a key"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.d.ts",
									"line": 19,
									"character": 26
								}
							]
						},
						{
							"id": 2568,
							"name": "getDateFromString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2569,
									"name": "getDateFromString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Method to get date object from date string",
										"returns": "Returns the date object\n"
									},
									"parameters": [
										{
											"id": 2570,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Accepts the date string"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.d.ts",
									"line": 200,
									"character": 28
								}
							]
						},
						{
							"id": 2502,
							"name": "getDaysCount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2503,
									"name": "getDaysCount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the number of days between two dates",
										"returns": "The number of days between the dates\n"
									},
									"parameters": [
										{
											"id": 2504,
											"name": "startDate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The start date"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 2505,
											"name": "endDate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The end date"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.d.ts",
									"line": 85,
									"character": 23
								}
							]
						},
						{
							"id": 2495,
							"name": "getDaysInMonth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2496,
									"name": "getDaysInMonth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the number of days in the month for the specified date",
										"returns": "The number of days in the month\n"
									},
									"parameters": [
										{
											"id": 2497,
											"name": "month",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The month (0-11)"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2498,
											"name": "year",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The year"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.d.ts",
									"line": 70,
									"character": 25
								}
							]
						},
						{
							"id": 2488,
							"name": "getMonthEnd",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2489,
									"name": "getMonthEnd",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2490,
											"name": "currentDate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 2491,
											"name": "displayDate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 2492,
											"name": "firstDayOfWeek",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2493,
											"name": "numberOfWeeks",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2494,
											"name": "interval",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.d.ts",
									"line": 62,
									"character": 22
								}
							]
						},
						{
							"id": 2626,
							"name": "getMonthNames",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2627,
									"name": "getMonthNames",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets localized month names from CLDR data",
										"returns": "Array of localized month names\n"
									},
									"parameters": [
										{
											"id": 2628,
											"name": "locale",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The locale string"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.d.ts",
									"line": 261,
									"character": 24
								}
							]
						},
						{
							"id": 2611,
							"name": "getMonthRangeText",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2612,
									"name": "getMonthRangeText",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2613,
											"name": "selectedDate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 2614,
											"name": "interval",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2615,
											"name": "displayDate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 2616,
											"name": "numberOfWeeks",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2617,
											"name": "dateFormat",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2618,
											"name": "calendarMode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 4,
												"name": "CalendarType"
											}
										},
										{
											"id": 2619,
											"name": "renderDates",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Date"
												}
											}
										},
										{
											"id": 2620,
											"name": "locale",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.d.ts",
									"line": 245,
									"character": 28
								}
							]
						},
						{
							"id": 2456,
							"name": "getMonthRenderDates",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2457,
									"name": "getMonthRenderDates",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2458,
											"name": "selectedDate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 2459,
											"name": "interval",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2460,
											"name": "firstDayOfWeek",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2461,
											"name": "workDays",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										},
										{
											"id": 2462,
											"name": "showWeekend",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 2463,
											"name": "displayDate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 2464,
											"name": "numberOfWeeks",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Date"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.d.ts",
									"line": 29,
									"character": 30
								}
							]
						},
						{
							"id": 2483,
							"name": "getMonthStart",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2484,
									"name": "getMonthStart",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2485,
											"name": "currentDate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 2486,
											"name": "displayDate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 2487,
											"name": "firstDayOfWeek",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.d.ts",
									"line": 61,
									"character": 24
								}
							]
						},
						{
							"id": 2451,
							"name": "getRenderDates",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2452,
									"name": "getRenderDates",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the dates to render for a specific view",
										"returns": "Array of dates to render\n"
									},
									"parameters": [
										{
											"id": 2453,
											"name": "viewType",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Type of view (Day, Week, WorkWeek)"
											},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "View"
											}
										},
										{
											"id": 2454,
											"name": "selectedDate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The currently selected date"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 2455,
											"name": "activeViewProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The current active view props"
											},
											"type": {
												"type": "reference",
												"id": 915,
												"name": "ActiveViewProps"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Date"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.d.ts",
									"line": 28,
									"character": 25
								}
							]
						},
						{
							"id": 2558,
							"name": "getScheduleStartAndEndMinutes",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2559,
									"name": "getScheduleStartAndEndMinutes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2560,
											"name": "startHour",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2561,
											"name": "endHour",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2562,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 2564,
													"name": "scheduleEndMinutes",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/schedule/services/DateService.d.ts",
															"line": 185,
															"character": 26
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 2563,
													"name": "scheduleStartMinutes",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/schedule/services/DateService.d.ts",
															"line": 184,
															"character": 28
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														2564,
														2563
													]
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/services/DateService.d.ts",
													"line": 183,
													"character": 77
												}
											]
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.d.ts",
									"line": 183,
									"character": 40
								}
							]
						},
						{
							"id": 2555,
							"name": "getStartEndHours",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2556,
									"name": "getStartEndHours",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets a date object for a time string, handling special cases",
										"returns": "A date object with the correct time set\n"
									},
									"parameters": [
										{
											"id": 2557,
											"name": "timeString",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The time string (e.g., '09:00', '24:00')"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.d.ts",
									"line": 182,
									"character": 27
								}
							]
						},
						{
							"id": 2506,
							"name": "getWeekFirstDate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2507,
									"name": "getWeekFirstDate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the first day of the week for the specified date",
										"returns": "A new Date object representing the first day of the week\n"
									},
									"parameters": [
										{
											"id": 2508,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The date from which to get the first day of the week"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 2509,
											"name": "firstDayOfWeek",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The first day of the week (0 for Sunday, 1 for Monday, etc.)"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.d.ts",
									"line": 93,
									"character": 27
								}
							]
						},
						{
							"id": 2510,
							"name": "getWeekLastDate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2511,
									"name": "getWeekLastDate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the last day of the week for the specified date",
										"returns": "A new Date object representing the last day of the week\n"
									},
									"parameters": [
										{
											"id": 2512,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The date from which to get the last day of the week"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 2513,
											"name": "firstDayOfWeek",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The first day of the week (0 for Sunday, 1 for Monday, etc.)"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.d.ts",
									"line": 101,
									"character": 26
								}
							]
						},
						{
							"id": 2499,
							"name": "getWeekNumber",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2500,
									"name": "getWeekNumber",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the week number for the specified date",
										"returns": "The week number\n"
									},
									"parameters": [
										{
											"id": 2501,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The date for which to get the week number"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.d.ts",
									"line": 77,
									"character": 24
								}
							]
						},
						{
							"id": 2473,
							"name": "isFullDayEvent",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2474,
									"name": "isFullDayEvent",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2475,
											"name": "startTime",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 2476,
											"name": "endTime",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.d.ts",
									"line": 46,
									"character": 25
								}
							]
						},
						{
							"id": 2525,
							"name": "isLessthan24Hours",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2526,
									"name": "isLessthan24Hours",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2527,
											"name": "startTime",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 2528,
											"name": "endTime",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.d.ts",
									"line": 125,
									"character": 28
								}
							]
						},
						{
							"id": 2522,
							"name": "isMidnight",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2523,
									"name": "isMidnight",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Checks if date is on mid night",
										"returns": "True if the date on mid night, false otherwise\n"
									},
									"parameters": [
										{
											"id": 2524,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The date"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.d.ts",
									"line": 124,
									"character": 21
								}
							]
						},
						{
							"id": 2518,
							"name": "isSameDay",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2519,
									"name": "isSameDay",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Checks if two dates are on the same day",
										"returns": "True if the dates are on the same day, false otherwise\n"
									},
									"parameters": [
										{
											"id": 2520,
											"name": "date1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The first date"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 2521,
											"name": "date2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The second date"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.d.ts",
									"line": 117,
									"character": 20
								}
							]
						},
						{
							"id": 2514,
							"name": "isSameMonth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2515,
									"name": "isSameMonth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Checks if two dates are in the same month",
										"returns": "True if the dates are in the same month, false otherwise\n"
									},
									"parameters": [
										{
											"id": 2516,
											"name": "date1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The first date"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 2517,
											"name": "date2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The second date"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.d.ts",
									"line": 109,
									"character": 22
								}
							]
						},
						{
							"id": 2547,
							"name": "isToday",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2548,
									"name": "isToday",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Check if a date is the current date",
										"returns": "True if it's the current date\n"
									},
									"parameters": [
										{
											"id": 2549,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The date to check"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.d.ts",
									"line": 166,
									"character": 18
								}
							]
						},
						{
							"id": 2539,
							"name": "isWeekend",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2540,
									"name": "isWeekend",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Checks if a date is a weekend",
										"returns": "True if the date is a weekend, false otherwise\n"
									},
									"parameters": [
										{
											"id": 2541,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The date to check"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 2542,
											"name": "workDays",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The work days (0 for Sunday, 1 for Monday, etc.)"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.d.ts",
									"line": 151,
									"character": 20
								}
							]
						},
						{
							"id": 2543,
							"name": "isWorkDay",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2544,
									"name": "isWorkDay",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Checks if a date is within the specified work days",
										"returns": "True if the date is a work day, false otherwise\n"
									},
									"parameters": [
										{
											"id": 2545,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The date to check"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 2546,
											"name": "workDays",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The work days (0 for Sunday, 1 for Monday, etc.)"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.d.ts",
									"line": 159,
									"character": 20
								}
							]
						},
						{
							"id": 2550,
							"name": "isWorkHour",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2551,
									"name": "isWorkHour",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Checks if a date is within work hours",
										"returns": "True if the date is within work hours, false otherwise\n"
									},
									"parameters": [
										{
											"id": 2552,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The date to check"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 2553,
											"name": "workHours",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The work hours configuration"
											},
											"type": {
												"type": "reference",
												"id": 264,
												"name": "WorkHoursModel"
											}
										},
										{
											"id": 2554,
											"name": "workDays",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The work days (0 for Sunday, 1 for Monday, etc.)"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.d.ts",
									"line": 175,
									"character": 21
								}
							]
						},
						{
							"id": 2480,
							"name": "lastDateOfMonth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2481,
									"name": "lastDateOfMonth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the last date of the month for the specified date",
										"returns": "A new Date object representing the last date of the month\n"
									},
									"parameters": [
										{
											"id": 2482,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The date from which to get the last date of the month"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.d.ts",
									"line": 60,
									"character": 26
								}
							]
						},
						{
							"id": 2565,
							"name": "normalizeDate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2566,
									"name": "normalizeDate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Normalizes a date by removing time components",
										"returns": "A new date with time component set to midnight\n"
									},
									"parameters": [
										{
											"id": 2567,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The date to normalize"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.d.ts",
									"line": 193,
									"character": 24
								}
							]
						},
						{
							"id": 2529,
							"name": "parseTimeString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2530,
									"name": "parseTimeString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Parses a time string into hours and minutes",
										"returns": "An object with hours and minutes\n"
									},
									"parameters": [
										{
											"id": 2531,
											"name": "timeString",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The time string to parse (e.g., '09:00')"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2532,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 2533,
													"name": "hours",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/schedule/services/DateService.d.ts",
															"line": 133,
															"character": 13
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 2534,
													"name": "minutes",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/schedule/services/DateService.d.ts",
															"line": 134,
															"character": 15
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														2533,
														2534
													]
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/services/DateService.d.ts",
													"line": 132,
													"character": 47
												}
											]
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.d.ts",
									"line": 132,
									"character": 26
								}
							]
						},
						{
							"id": 2604,
							"name": "setValidDate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2605,
									"name": "setValidDate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2606,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.d.ts",
									"line": 243,
									"character": 23
								}
							]
						},
						{
							"id": 2607,
							"name": "setValidFirstDayOfWeek",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2608,
									"name": "setValidFirstDayOfWeek",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2609,
											"name": "viewFirstDayOfWeek",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2610,
											"name": "rootFirstDayOfWeek",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/DateService.d.ts",
									"line": 244,
									"character": 33
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2585
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2465,
								2469,
								2594,
								2535,
								2477,
								2629,
								2598,
								2621,
								2578,
								2571,
								2589,
								2448,
								2568,
								2502,
								2495,
								2488,
								2626,
								2611,
								2456,
								2483,
								2451,
								2558,
								2555,
								2506,
								2510,
								2499,
								2473,
								2525,
								2522,
								2518,
								2514,
								2547,
								2539,
								2543,
								2550,
								2480,
								2565,
								2529,
								2604,
								2607
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/services/DateService.d.ts",
							"line": 12,
							"character": 32
						}
					]
				},
				{
					"id": 2634,
					"name": "DAYS_PER_WEEK",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/schedule/services/DateService.d.ts",
							"line": 4,
							"character": 34
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 2637,
					"name": "DEFAULT_WEEKS",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/schedule/services/DateService.d.ts",
							"line": 7,
							"character": 34
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 2639,
					"name": "HOURS_PER_DAY",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/schedule/services/DateService.d.ts",
							"line": 9,
							"character": 34
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 2640,
					"name": "MINUTES_PER_DAY",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/schedule/services/DateService.d.ts",
							"line": 10,
							"character": 36
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 2635,
					"name": "MINUTES_PER_HOUR",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/schedule/services/DateService.d.ts",
							"line": 5,
							"character": 37
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 2641,
					"name": "MS_PER_DAY",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/schedule/services/DateService.d.ts",
							"line": 11,
							"character": 31
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 2638,
					"name": "MS_PER_MINUTE",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/schedule/services/DateService.d.ts",
							"line": 8,
							"character": 34
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 2636,
					"name": "WEEK_LENGTH",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/schedule/services/DateService.d.ts",
							"line": 6,
							"character": 32
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2447
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						2634,
						2637,
						2639,
						2640,
						2635,
						2641,
						2638,
						2636
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/services/DateService.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 841,
			"name": "\"schedule/services/EventService\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/services/EventService.ts",
			"children": [
				{
					"id": 842,
					"name": "EventService",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 850,
							"name": "calculateOverlappingEvents",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 851,
									"name": "calculateOverlappingEvents",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 852,
											"name": "events",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1116,
													"name": "ProcessedEventsData"
												}
											}
										},
										{
											"id": 853,
											"name": "allowOverlap",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "true"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"id": 1116,
												"name": "ProcessedEventsData"
											}
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/EventService.ts",
									"line": 95,
									"character": 37
								}
							]
						},
						{
							"id": 857,
							"name": "convertOverlapGroupsToEventGroups",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 858,
									"name": "convertOverlapGroupsToEventGroups",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 859,
											"name": "overlapGroups",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"id": 1116,
														"name": "ProcessedEventsData"
													}
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"id": 1116,
												"name": "ProcessedEventsData"
											}
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/EventService.ts",
									"line": 133,
									"character": 44
								}
							]
						},
						{
							"id": 866,
							"name": "eventsOverlap",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 867,
									"name": "eventsOverlap",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Checks if two events overlap in time",
										"returns": "True if events overlap\n"
									},
									"parameters": [
										{
											"id": 868,
											"name": "event1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "First event"
											},
											"type": {
												"type": "reference",
												"id": 1116,
												"name": "ProcessedEventsData"
											}
										},
										{
											"id": 869,
											"name": "event2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Second event"
											},
											"type": {
												"type": "reference",
												"id": 1116,
												"name": "ProcessedEventsData"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/EventService.ts",
									"line": 226,
									"character": 24
								}
							]
						},
						{
							"id": 885,
							"name": "generateEventGuid",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 886,
									"name": "generateEventGuid",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Generates a unique ID for an event",
										"returns": "A unique ID string\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/EventService.ts",
									"line": 361,
									"character": 28
								}
							]
						},
						{
							"id": 882,
							"name": "getAriaLabel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 883,
									"name": "getAriaLabel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets accessibility label for an event",
										"returns": "Accessibility label text\n"
									},
									"parameters": [
										{
											"id": 884,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The event"
											},
											"type": {
												"type": "reference",
												"id": 268,
												"name": "EventModel"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/EventService.ts",
									"line": 348,
									"character": 23
								}
							]
						},
						{
							"id": 887,
							"name": "getEventClassNames",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 888,
									"name": "getEventClassNames",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 889,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 268,
												"name": "EventModel"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/EventService.ts",
									"line": 368,
									"character": 29
								}
							]
						},
						{
							"id": 890,
							"name": "getEventsMap",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 891,
									"name": "getEventsMap",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 892,
											"name": "renderDates",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Date"
												}
											}
										},
										{
											"id": 893,
											"name": "events",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1116,
													"name": "ProcessedEventsData"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1116,
													"name": "ProcessedEventsData"
												}
											}
										],
										"name": "Map"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/EventService.ts",
									"line": 381,
									"character": 23
								}
							]
						},
						{
							"id": 894,
							"name": "getMaxEventsInCell",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 895,
									"name": "getMaxEventsInCell",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the maximum number of events in any cell",
										"returns": "The maximum number of events in any cell\n"
									},
									"parameters": [
										{
											"id": 896,
											"name": "eventsByDate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Map of events by date"
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 1116,
															"name": "ProcessedEventsData"
														}
													}
												],
												"name": "Map"
											}
										},
										{
											"id": 897,
											"name": "renderDates",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Date"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/EventService.ts",
									"line": 409,
									"character": 29
								}
							]
						},
						{
							"id": 854,
							"name": "identifyOverlapGroups",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 855,
									"name": "identifyOverlapGroups",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 856,
											"name": "sortedEvents",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1116,
													"name": "ProcessedEventsData"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"id": 1116,
												"name": "ProcessedEventsData"
											}
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/EventService.ts",
									"line": 106,
									"character": 32
								}
							]
						},
						{
							"id": 874,
							"name": "isAlldayHasMoreEvents",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 875,
									"name": "isAlldayHasMoreEvents",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Checks if any date has more events than the allowed maximum",
										"returns": "True if any date has more events than allowed\n"
									},
									"parameters": [
										{
											"id": 876,
											"name": "renderDates",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The dates being rendered"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Date"
												}
											}
										},
										{
											"id": 877,
											"name": "eventsByDate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Map of events by date"
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 1116,
															"name": "ProcessedEventsData"
														}
													}
												],
												"name": "Map"
											}
										},
										{
											"id": 878,
											"name": "maxEventsPerRow",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Maximum events allowed per row."
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "2"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/EventService.ts",
									"line": 298,
									"character": 32
								}
							]
						},
						{
							"id": 879,
							"name": "isMultiDayEvent",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 880,
									"name": "isMultiDayEvent",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Checks if an event spans multiple days",
										"returns": "True if the event spans multiple days\n"
									},
									"parameters": [
										{
											"id": 881,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The event to check"
											},
											"type": {
												"type": "reference",
												"id": 268,
												"name": "EventModel"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/EventService.ts",
									"line": 319,
									"character": 26
								}
							]
						},
						{
							"id": 843,
							"name": "mapEventData",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 844,
									"name": "mapEventData",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Maps raw event data to EventModel objects based on field mappings",
										"returns": "Array of EventModel objects with mapped properties\n"
									},
									"parameters": [
										{
											"id": 845,
											"name": "events",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Raw event data to process"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "unknown"
														}
													],
													"name": "Record"
												}
											}
										},
										{
											"id": 846,
											"name": "fields",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "Record"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 268,
											"name": "EventModel"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/EventService.ts",
									"line": 13,
									"character": 23
								}
							]
						},
						{
							"id": 860,
							"name": "prioritizeEvents",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 861,
									"name": "prioritizeEvents",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Prioritizes events based on all-day status, duration, and start time",
										"returns": "Sorted array of events\n"
									},
									"parameters": [
										{
											"id": 862,
											"name": "events",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Array of events"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1116,
													"name": "ProcessedEventsData"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1116,
											"name": "ProcessedEventsData"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/EventService.ts",
									"line": 169,
									"character": 27
								}
							]
						},
						{
							"id": 863,
							"name": "resolveOverlappingEvents",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 864,
									"name": "resolveOverlappingEvents",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 865,
											"name": "events",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1116,
													"name": "ProcessedEventsData"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"id": 1116,
												"name": "ProcessedEventsData"
											}
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/EventService.ts",
									"line": 189,
									"character": 35
								}
							]
						},
						{
							"id": 847,
							"name": "sortEventsByStartTimeAndDuration",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 848,
									"name": "sortEventsByStartTimeAndDuration",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Sorts events by start time and duration",
										"returns": "Sorted array of events\n"
									},
									"parameters": [
										{
											"id": 849,
											"name": "events",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Array of events to sort"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1116,
													"name": "ProcessedEventsData"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1116,
											"name": "ProcessedEventsData"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/EventService.ts",
									"line": 80,
									"character": 43
								}
							]
						},
						{
							"id": 870,
							"name": "splitEventIntoSegments",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 871,
									"name": "splitEventIntoSegments",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Splits a multi-day event into daily segments",
										"returns": "Array of event segments\n"
									},
									"parameters": [
										{
											"id": 872,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The event to split"
											},
											"type": {
												"type": "reference",
												"id": 268,
												"name": "EventModel"
											}
										},
										{
											"id": 873,
											"name": "renderDates",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The dates being rendered"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Date"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1116,
											"name": "ProcessedEventsData"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/EventService.ts",
									"line": 243,
									"character": 33
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								850,
								857,
								866,
								885,
								882,
								887,
								890,
								894,
								854,
								874,
								879,
								843,
								860,
								863,
								847,
								870
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/services/EventService.ts",
							"line": 5,
							"character": 25
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						842
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/services/EventService.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2642,
			"name": "\"schedule/services/EventService.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/services/EventService.d.ts",
			"children": [
				{
					"id": 2643,
					"name": "EventService",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 2651,
							"name": "calculateOverlappingEvents",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2652,
									"name": "calculateOverlappingEvents",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2653,
											"name": "events",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1116,
													"name": "ProcessedEventsData"
												}
											}
										},
										{
											"id": 2654,
											"name": "allowOverlap",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"id": 1116,
												"name": "ProcessedEventsData"
											}
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/EventService.d.ts",
									"line": 19,
									"character": 37
								}
							]
						},
						{
							"id": 2658,
							"name": "convertOverlapGroupsToEventGroups",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2659,
									"name": "convertOverlapGroupsToEventGroups",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2660,
											"name": "overlapGroups",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"id": 1116,
														"name": "ProcessedEventsData"
													}
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"id": 1116,
												"name": "ProcessedEventsData"
											}
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/EventService.d.ts",
									"line": 21,
									"character": 44
								}
							]
						},
						{
							"id": 2667,
							"name": "eventsOverlap",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2668,
									"name": "eventsOverlap",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Checks if two events overlap in time",
										"returns": "True if events overlap\n"
									},
									"parameters": [
										{
											"id": 2669,
											"name": "event1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "First event"
											},
											"type": {
												"type": "reference",
												"id": 1116,
												"name": "ProcessedEventsData"
											}
										},
										{
											"id": 2670,
											"name": "event2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Second event"
											},
											"type": {
												"type": "reference",
												"id": 1116,
												"name": "ProcessedEventsData"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/EventService.d.ts",
									"line": 37,
									"character": 24
								}
							]
						},
						{
							"id": 2686,
							"name": "generateEventGuid",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2687,
									"name": "generateEventGuid",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Generates a unique ID for an event",
										"returns": "A unique ID string\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/EventService.d.ts",
									"line": 74,
									"character": 28
								}
							]
						},
						{
							"id": 2683,
							"name": "getAriaLabel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2684,
									"name": "getAriaLabel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets accessibility label for an event",
										"returns": "Accessibility label text\n"
									},
									"parameters": [
										{
											"id": 2685,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The event"
											},
											"type": {
												"type": "reference",
												"id": 268,
												"name": "EventModel"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/EventService.d.ts",
									"line": 68,
									"character": 23
								}
							]
						},
						{
							"id": 2688,
							"name": "getEventClassNames",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2689,
									"name": "getEventClassNames",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2690,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 268,
												"name": "EventModel"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/EventService.d.ts",
									"line": 75,
									"character": 29
								}
							]
						},
						{
							"id": 2691,
							"name": "getEventsMap",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2692,
									"name": "getEventsMap",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2693,
											"name": "renderDates",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Date"
												}
											}
										},
										{
											"id": 2694,
											"name": "events",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1116,
													"name": "ProcessedEventsData"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1116,
													"name": "ProcessedEventsData"
												}
											}
										],
										"name": "Map"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/EventService.d.ts",
									"line": 76,
									"character": 23
								}
							]
						},
						{
							"id": 2695,
							"name": "getMaxEventsInCell",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2696,
									"name": "getMaxEventsInCell",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the maximum number of events in any cell",
										"returns": "The maximum number of events in any cell\n"
									},
									"parameters": [
										{
											"id": 2697,
											"name": "eventsByDate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Map of events by date"
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 1116,
															"name": "ProcessedEventsData"
														}
													}
												],
												"name": "Map"
											}
										},
										{
											"id": 2698,
											"name": "renderDates",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Date"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/EventService.d.ts",
									"line": 84,
									"character": 29
								}
							]
						},
						{
							"id": 2655,
							"name": "identifyOverlapGroups",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2656,
									"name": "identifyOverlapGroups",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2657,
											"name": "sortedEvents",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1116,
													"name": "ProcessedEventsData"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"id": 1116,
												"name": "ProcessedEventsData"
											}
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/EventService.d.ts",
									"line": 20,
									"character": 32
								}
							]
						},
						{
							"id": 2675,
							"name": "isAlldayHasMoreEvents",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2676,
									"name": "isAlldayHasMoreEvents",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Checks if any date has more events than the allowed maximum",
										"returns": "True if any date has more events than allowed\n"
									},
									"parameters": [
										{
											"id": 2677,
											"name": "renderDates",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The dates being rendered"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Date"
												}
											}
										},
										{
											"id": 2678,
											"name": "eventsByDate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Map of events by date"
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 1116,
															"name": "ProcessedEventsData"
														}
													}
												],
												"name": "Map"
											}
										},
										{
											"id": 2679,
											"name": "maxEventsPerRow",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "Maximum events allowed per row."
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/EventService.d.ts",
									"line": 54,
									"character": 32
								}
							]
						},
						{
							"id": 2680,
							"name": "isMultiDayEvent",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2681,
									"name": "isMultiDayEvent",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Checks if an event spans multiple days",
										"returns": "True if the event spans multiple days\n"
									},
									"parameters": [
										{
											"id": 2682,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The event to check"
											},
											"type": {
												"type": "reference",
												"id": 268,
												"name": "EventModel"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/EventService.d.ts",
									"line": 61,
									"character": 26
								}
							]
						},
						{
							"id": 2644,
							"name": "mapEventData",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2645,
									"name": "mapEventData",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Maps raw event data to EventModel objects based on field mappings",
										"returns": "Array of EventModel objects with mapped properties\n"
									},
									"parameters": [
										{
											"id": 2646,
											"name": "events",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Raw event data to process"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "unknown"
														}
													],
													"name": "Record"
												}
											}
										},
										{
											"id": 2647,
											"name": "fields",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "Record"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 268,
											"name": "EventModel"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/EventService.d.ts",
									"line": 11,
									"character": 23
								}
							]
						},
						{
							"id": 2661,
							"name": "prioritizeEvents",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2662,
									"name": "prioritizeEvents",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Prioritizes events based on all-day status, duration, and start time",
										"returns": "Sorted array of events\n"
									},
									"parameters": [
										{
											"id": 2663,
											"name": "events",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Array of events"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1116,
													"name": "ProcessedEventsData"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1116,
											"name": "ProcessedEventsData"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/EventService.d.ts",
									"line": 28,
									"character": 27
								}
							]
						},
						{
							"id": 2664,
							"name": "resolveOverlappingEvents",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2665,
									"name": "resolveOverlappingEvents",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2666,
											"name": "events",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1116,
													"name": "ProcessedEventsData"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"id": 1116,
												"name": "ProcessedEventsData"
											}
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/EventService.d.ts",
									"line": 29,
									"character": 35
								}
							]
						},
						{
							"id": 2648,
							"name": "sortEventsByStartTimeAndDuration",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2649,
									"name": "sortEventsByStartTimeAndDuration",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Sorts events by start time and duration",
										"returns": "Sorted array of events\n"
									},
									"parameters": [
										{
											"id": 2650,
											"name": "events",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Array of events to sort"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1116,
													"name": "ProcessedEventsData"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1116,
											"name": "ProcessedEventsData"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/EventService.d.ts",
									"line": 18,
									"character": 43
								}
							]
						},
						{
							"id": 2671,
							"name": "splitEventIntoSegments",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2672,
									"name": "splitEventIntoSegments",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Splits a multi-day event into daily segments",
										"returns": "Array of event segments\n"
									},
									"parameters": [
										{
											"id": 2673,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The event to split"
											},
											"type": {
												"type": "reference",
												"id": 268,
												"name": "EventModel"
											}
										},
										{
											"id": 2674,
											"name": "renderDates",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The dates being rendered"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Date"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1116,
											"name": "ProcessedEventsData"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/EventService.d.ts",
									"line": 45,
									"character": 33
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2651,
								2658,
								2667,
								2686,
								2683,
								2688,
								2691,
								2695,
								2655,
								2675,
								2680,
								2644,
								2661,
								2664,
								2648,
								2671
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/services/EventService.d.ts",
							"line": 3,
							"character": 33
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2643
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/services/EventService.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 816,
			"name": "\"schedule/services/NavigationService\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/services/NavigationService.ts",
			"children": [
				{
					"id": 817,
					"name": "NavigationService",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Service for handling schedule navigation operations"
					},
					"children": [
						{
							"id": 823,
							"name": "navigateToNext",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 824,
									"name": "navigateToNext",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Navigate to the next time period based on view type and interval",
										"returns": "The new date after navigating forward\n"
									},
									"parameters": [
										{
											"id": 825,
											"name": "currentDate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The current selected date"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 826,
											"name": "viewType",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The current view type"
											},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "View"
											}
										},
										{
											"id": 827,
											"name": "interval",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The interval for the view"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/NavigationService.ts",
									"line": 38,
									"character": 25
								}
							]
						},
						{
							"id": 818,
							"name": "navigateToPrevious",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 819,
									"name": "navigateToPrevious",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Navigate to the previous time period based on view type and interval",
										"returns": "The new date after navigating backward\n"
									},
									"parameters": [
										{
											"id": 820,
											"name": "currentDate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The current selected date"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 821,
											"name": "viewType",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The current view type"
											},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "View"
											}
										},
										{
											"id": 822,
											"name": "interval",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The interval for the view"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/NavigationService.ts",
									"line": 16,
									"character": 29
								}
							]
						},
						{
							"id": 828,
							"name": "navigateToToday",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 829,
									"name": "navigateToToday",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Navigate to today's date",
										"returns": "Today's date\n"
									},
									"type": {
										"type": "reference",
										"name": "Date"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/NavigationService.ts",
									"line": 57,
									"character": 26
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								823,
								818,
								828
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/services/NavigationService.ts",
							"line": 7,
							"character": 30
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						817
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/services/NavigationService.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2699,
			"name": "\"schedule/services/NavigationService.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/services/NavigationService.d.ts",
			"children": [
				{
					"id": 2700,
					"name": "NavigationService",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Service for handling schedule navigation operations"
					},
					"children": [
						{
							"id": 2706,
							"name": "navigateToNext",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2707,
									"name": "navigateToNext",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Navigate to the next time period based on view type and interval",
										"returns": "The new date after navigating forward\n"
									},
									"parameters": [
										{
											"id": 2708,
											"name": "currentDate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The current selected date"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 2709,
											"name": "viewType",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The current view type"
											},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "View"
											}
										},
										{
											"id": 2710,
											"name": "interval",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The interval for the view"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/NavigationService.d.ts",
									"line": 23,
									"character": 25
								}
							]
						},
						{
							"id": 2701,
							"name": "navigateToPrevious",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2702,
									"name": "navigateToPrevious",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Navigate to the previous time period based on view type and interval",
										"returns": "The new date after navigating backward\n"
									},
									"parameters": [
										{
											"id": 2703,
											"name": "currentDate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The current selected date"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 2704,
											"name": "viewType",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The current view type"
											},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "View"
											}
										},
										{
											"id": 2705,
											"name": "interval",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The interval for the view"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/NavigationService.d.ts",
									"line": 14,
									"character": 29
								}
							]
						},
						{
							"id": 2711,
							"name": "navigateToToday",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2712,
									"name": "navigateToToday",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Navigate to today's date",
										"returns": "Today's date\n"
									},
									"type": {
										"type": "reference",
										"name": "Date"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/NavigationService.d.ts",
									"line": 29,
									"character": 26
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2706,
								2701,
								2711
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/services/NavigationService.d.ts",
							"line": 5,
							"character": 38
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2700
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/services/NavigationService.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1175,
			"name": "\"schedule/services/PositioningService\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/services/PositioningService.ts",
			"children": [
				{
					"id": 1176,
					"name": "PositioningService",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "PositioningService provides methods for calculating event positions and styles\nfor rendering in the Schedule component."
					},
					"children": [
						{
							"id": 1177,
							"name": "calculateEventPosition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1178,
									"name": "calculateEventPosition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Calculates the position and dimensions for an event",
										"returns": "CSS properties for positioning\n"
									},
									"parameters": [
										{
											"id": 1179,
											"name": "eventInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The event information"
											},
											"type": {
												"type": "reference",
												"id": 1116,
												"name": "ProcessedEventsData"
											}
										},
										{
											"id": 1180,
											"name": "timeScale",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The time scale configuration"
											},
											"type": {
												"type": "reference",
												"id": 252,
												"name": "TimeScaleModel"
											}
										},
										{
											"id": 1181,
											"name": "startHour",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The start hour of the schedule"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1182,
											"name": "endHour",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The end hour of the schedule"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "CSSProperties"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/PositioningService.ts",
									"line": 24,
									"character": 33
								}
							]
						},
						{
							"id": 1208,
							"name": "calculateEventWidth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1209,
									"name": "calculateEventWidth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Calculates the width of an event that spans multiple days",
										"returns": "The width as a CSS value\n"
									},
									"parameters": [
										{
											"id": 1210,
											"name": "eventInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The event information"
											},
											"type": {
												"type": "reference",
												"id": 1116,
												"name": "ProcessedEventsData"
											}
										},
										{
											"id": 1211,
											"name": "renderDates",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The dates being rendered"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Date"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/PositioningService.ts",
									"line": 186,
									"character": 38
								}
							]
						},
						{
							"id": 1202,
							"name": "calculateHeight",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1203,
									"name": "calculateHeight",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Calculates the height of an event",
										"returns": "The height as a CSS value\n"
									},
									"parameters": [
										{
											"id": 1204,
											"name": "eventInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The event information"
											},
											"type": {
												"type": "reference",
												"id": 1116,
												"name": "ProcessedEventsData"
											}
										},
										{
											"id": 1205,
											"name": "timeScale",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The time scale configuration"
											},
											"type": {
												"type": "reference",
												"id": 252,
												"name": "TimeScaleModel"
											}
										},
										{
											"id": 1206,
											"name": "startHour",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The start hour of the schedule"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1207,
											"name": "endHour",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The end hour of the schedule"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/PositioningService.ts",
									"line": 143,
									"character": 34
								}
							]
						},
						{
							"id": 1190,
							"name": "calculatePositionStyles",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1191,
									"name": "calculatePositionStyles",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Calculates position styles based on event information and type",
										"returns": "CSS properties for positioning\n"
									},
									"parameters": [
										{
											"id": 1192,
											"name": "eventInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The event information"
											},
											"type": {
												"type": "reference",
												"id": 1116,
												"name": "ProcessedEventsData"
											}
										},
										{
											"id": 1193,
											"name": "renderDates",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The dates being rendered in the current view"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Date"
												}
											}
										},
										{
											"id": 1194,
											"name": "timeScale",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "The time scale configuration (for non-allday events)"
											},
											"type": {
												"type": "reference",
												"id": 252,
												"name": "TimeScaleModel"
											}
										},
										{
											"id": 1195,
											"name": "startHour",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "The start hour of the schedule (for non-allday events)"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1196,
											"name": "endHour",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "The end hour of the schedule (for non-allday events)"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "CSSProperties"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/PositioningService.ts",
									"line": 82,
									"character": 34
								}
							]
						},
						{
							"id": 1197,
							"name": "calculateTopPosition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1198,
									"name": "calculateTopPosition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Calculates the top position for an event",
										"returns": "The top position as a CSS value\n"
									},
									"parameters": [
										{
											"id": 1199,
											"name": "startTime",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The event start time"
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 1200,
											"name": "timeScale",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The time scale configuration"
											},
											"type": {
												"type": "reference",
												"id": 252,
												"name": "TimeScaleModel"
											}
										},
										{
											"id": 1201,
											"name": "startHour",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The start hour of the schedule"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/PositioningService.ts",
									"line": 118,
									"character": 39
								}
							]
						},
						{
							"id": 1183,
							"name": "getOverflowDirection",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1184,
									"name": "getOverflowDirection",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Determines if an event overflows the visible area",
										"returns": "Overflow direction indicators\n"
									},
									"parameters": [
										{
											"id": 1185,
											"name": "eventInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The event information"
											},
											"type": {
												"type": "reference",
												"id": 1116,
												"name": "ProcessedEventsData"
											}
										},
										{
											"id": 1186,
											"name": "renderDates",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The dates being rendered"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Date"
												}
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1187,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 1188,
													"name": "isOverflowLeft",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/schedule/services/PositioningService.ts",
															"line": 56,
															"character": 23
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 1189,
													"name": "isOverflowRight",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/schedule/services/PositioningService.ts",
															"line": 56,
															"character": 49
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1188,
														1189
													]
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/services/PositioningService.ts",
													"line": 56,
													"character": 6
												}
											]
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/PositioningService.ts",
									"line": 53,
									"character": 31
								}
							]
						},
						{
							"id": 1212,
							"name": "setIndexPosition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 1213,
									"name": "setIndexPosition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 1214,
											"name": "sharedPositionMap",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "boolean"
														}
													}
												],
												"name": "Map"
											}
										},
										{
											"id": 1215,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 1216,
											"name": "positionIndex",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "boolean"
												}
											}
										],
										"name": "Map"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/PositioningService.ts",
									"line": 242,
									"character": 27
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1177,
								1208,
								1202,
								1190,
								1197,
								1183,
								1212
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/services/PositioningService.ts",
							"line": 14,
							"character": 31
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1176
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/services/PositioningService.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2713,
			"name": "\"schedule/services/PositioningService.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/services/PositioningService.d.ts",
			"children": [
				{
					"id": 2714,
					"name": "PositioningService",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "PositioningService provides methods for calculating event positions and styles\nfor rendering in the Schedule component."
					},
					"children": [
						{
							"id": 2737,
							"name": "calculateEventWidth",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isStatic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Calculates the width of an event that spans multiple days",
								"tags": [
									{
										"tag": "param",
										"text": "The event information",
										"param": "eventInfo"
									},
									{
										"tag": "param",
										"text": "The dates being rendered",
										"param": "renderDates"
									},
									{
										"tag": "returns",
										"text": "The width as a CSS value\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/services/PositioningService.d.ts",
									"line": 67,
									"character": 38
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 2736,
							"name": "calculateHeight",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isStatic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Calculates the height of an event",
								"tags": [
									{
										"tag": "param",
										"text": "The event information",
										"param": "eventInfo"
									},
									{
										"tag": "param",
										"text": "The time scale configuration",
										"param": "timeScale"
									},
									{
										"tag": "param",
										"text": "The start hour of the schedule",
										"param": "startHour"
									},
									{
										"tag": "param",
										"text": "The end hour of the schedule",
										"param": "endHour"
									},
									{
										"tag": "returns",
										"text": "The height as a CSS value\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/services/PositioningService.d.ts",
									"line": 59,
									"character": 34
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 2735,
							"name": "calculateTopPosition",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isStatic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Calculates the top position for an event",
								"tags": [
									{
										"tag": "param",
										"text": "The event start time",
										"param": "startTime"
									},
									{
										"tag": "param",
										"text": "The time scale configuration",
										"param": "timeScale"
									},
									{
										"tag": "param",
										"text": "The start hour of the schedule",
										"param": "startHour"
									},
									{
										"tag": "returns",
										"text": "The top position as a CSS value\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/services/PositioningService.d.ts",
									"line": 49,
									"character": 39
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 2715,
							"name": "calculateEventPosition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2716,
									"name": "calculateEventPosition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Calculates the position and dimensions for an event",
										"returns": "CSS properties for positioning\n"
									},
									"parameters": [
										{
											"id": 2717,
											"name": "eventInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The event information"
											},
											"type": {
												"type": "reference",
												"id": 1116,
												"name": "ProcessedEventsData"
											}
										},
										{
											"id": 2718,
											"name": "timeScale",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The time scale configuration"
											},
											"type": {
												"type": "reference",
												"id": 252,
												"name": "TimeScaleModel"
											}
										},
										{
											"id": 2719,
											"name": "startHour",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The start hour of the schedule"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2720,
											"name": "endHour",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The end hour of the schedule"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "CSSProperties"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/PositioningService.d.ts",
									"line": 18,
									"character": 33
								}
							]
						},
						{
							"id": 2728,
							"name": "calculatePositionStyles",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2729,
									"name": "calculatePositionStyles",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Calculates position styles based on event information and type",
										"returns": "CSS properties for positioning\n"
									},
									"parameters": [
										{
											"id": 2730,
											"name": "eventInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The event information"
											},
											"type": {
												"type": "reference",
												"id": 1116,
												"name": "ProcessedEventsData"
											}
										},
										{
											"id": 2731,
											"name": "renderDates",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The dates being rendered in the current view"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Date"
												}
											}
										},
										{
											"id": 2732,
											"name": "timeScale",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "The time scale configuration (for non-allday events)"
											},
											"type": {
												"type": "reference",
												"id": 252,
												"name": "TimeScaleModel"
											}
										},
										{
											"id": 2733,
											"name": "startHour",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "The start hour of the schedule (for non-allday events)"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2734,
											"name": "endHour",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "The end hour of the schedule (for non-allday events)"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "CSSProperties"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/PositioningService.d.ts",
									"line": 40,
									"character": 34
								}
							]
						},
						{
							"id": 2721,
							"name": "getOverflowDirection",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2722,
									"name": "getOverflowDirection",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Determines if an event overflows the visible area",
										"returns": "Overflow direction indicators\n"
									},
									"parameters": [
										{
											"id": 2723,
											"name": "eventInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The event information"
											},
											"type": {
												"type": "reference",
												"id": 1116,
												"name": "ProcessedEventsData"
											}
										},
										{
											"id": 2724,
											"name": "renderDates",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "The dates being rendered"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Date"
												}
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2725,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 2726,
													"name": "isOverflowLeft",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/schedule/services/PositioningService.d.ts",
															"line": 27,
															"character": 22
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 2727,
													"name": "isOverflowRight",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true
													},
													"sources": [
														{
															"fileName": "src/schedule/services/PositioningService.d.ts",
															"line": 28,
															"character": 23
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														2726,
														2727
													]
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/services/PositioningService.d.ts",
													"line": 26,
													"character": 85
												}
											]
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/PositioningService.d.ts",
									"line": 26,
									"character": 31
								}
							]
						},
						{
							"id": 2738,
							"name": "setIndexPosition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2739,
									"name": "setIndexPosition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 2740,
											"name": "sharedPositionMap",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "boolean"
														}
													}
												],
												"name": "Map"
											}
										},
										{
											"id": 2741,
											"name": "date",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 2742,
											"name": "positionIndex",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "boolean"
												}
											}
										],
										"name": "Map"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/PositioningService.d.ts",
									"line": 68,
									"character": 27
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2737,
								2736,
								2735
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2715,
								2728,
								2721,
								2738
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/services/PositioningService.d.ts",
							"line": 8,
							"character": 39
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2714
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/services/PositioningService.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 804,
			"name": "\"schedule/services/ViewService\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/services/ViewService.ts",
			"children": [
				{
					"id": 805,
					"name": "ViewService",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "ViewService provides methods for managing views within the Schedule component."
					},
					"children": [
						{
							"id": 809,
							"name": "findViewByNameOrType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 810,
									"name": "findViewByNameOrType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Find view information by name or type",
										"returns": "View information if found\n"
									},
									"parameters": [
										{
											"id": 811,
											"name": "viewsInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Array of view information"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1069,
													"name": "ViewsInfo"
												}
											}
										},
										{
											"id": 812,
											"name": "viewNameOrType",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "View name or type to search for"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 1069,
												"name": "ViewsInfo"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/ViewService.ts",
									"line": 68,
									"character": 31
								}
							]
						},
						{
							"id": 813,
							"name": "getDefaultView",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 814,
									"name": "getDefaultView",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Get the default view information",
										"returns": "Default view information\n"
									},
									"parameters": [
										{
											"id": 815,
											"name": "viewsInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Array of view information"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1069,
													"name": "ViewsInfo"
												}
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 1069,
												"name": "ViewsInfo"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/ViewService.ts",
									"line": 85,
									"character": 25
								}
							]
						},
						{
							"id": 806,
							"name": "getViewsInfo",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 807,
									"name": "getViewsInfo",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Process child views to extract view information",
										"returns": "Array of view information\n"
									},
									"parameters": [
										{
											"id": 808,
											"name": "children",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Children components"
											},
											"type": {
												"type": "reference",
												"name": "ReactNode"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1069,
											"name": "ViewsInfo"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/ViewService.ts",
									"line": 16,
									"character": 23
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								809,
								813,
								806
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/services/ViewService.ts",
							"line": 9,
							"character": 24
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						805
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/services/ViewService.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2743,
			"name": "\"schedule/services/ViewService.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/services/ViewService.d.ts",
			"children": [
				{
					"id": 2744,
					"name": "ViewService",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "ViewService provides methods for managing views within the Schedule component."
					},
					"children": [
						{
							"id": 2748,
							"name": "findViewByNameOrType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2749,
									"name": "findViewByNameOrType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Find view information by name or type",
										"returns": "View information if found\n"
									},
									"parameters": [
										{
											"id": 2750,
											"name": "viewsInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Array of view information"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1069,
													"name": "ViewsInfo"
												}
											}
										},
										{
											"id": 2751,
											"name": "viewNameOrType",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "View name or type to search for"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 1069,
												"name": "ViewsInfo"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/ViewService.d.ts",
									"line": 21,
									"character": 31
								}
							]
						},
						{
							"id": 2752,
							"name": "getDefaultView",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2753,
									"name": "getDefaultView",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Get the default view information",
										"returns": "Default view information\n"
									},
									"parameters": [
										{
											"id": 2754,
											"name": "viewsInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Array of view information"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 1069,
													"name": "ViewsInfo"
												}
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 1069,
												"name": "ViewsInfo"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/ViewService.d.ts",
									"line": 28,
									"character": 25
								}
							]
						},
						{
							"id": 2745,
							"name": "getViewsInfo",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 2746,
									"name": "getViewsInfo",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Process child views to extract view information",
										"returns": "Array of view information\n"
									},
									"parameters": [
										{
											"id": 2747,
											"name": "children",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "Children components"
											},
											"type": {
												"type": "reference",
												"name": "ReactNode"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1069,
											"name": "ViewsInfo"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/services/ViewService.d.ts",
									"line": 13,
									"character": 23
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2748,
								2752,
								2745
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/services/ViewService.d.ts",
							"line": 6,
							"character": 32
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2744
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/services/ViewService.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1,
			"name": "\"schedule/types/enums\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/types/enums.ts",
			"children": [
				{
					"id": 4,
					"name": "CalendarType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Defines the calendarMode options for the Schedule component."
					},
					"sources": [
						{
							"fileName": "src/schedule/types/enums.ts",
							"line": 18,
							"character": 24
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "Gregorian"
					}
				},
				{
					"id": 3,
					"name": "SpannedEventPlacement",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "An enum that holds the options to render the spanned events in all day row or time slot.\n```props\nAllDayRow :- Denotes the rendering of spanned events in an all-day row.\nTimeSlot :- Denotes the rendering of spanned events in an time slot row.\n```"
					},
					"sources": [
						{
							"fileName": "src/schedule/types/enums.ts",
							"line": 13,
							"character": 33
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "AllDayRow"
							},
							{
								"type": "stringLiteral",
								"value": "TimeSlot"
							}
						]
					}
				},
				{
					"id": 2,
					"name": "View",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Defines the view options for the Schedule component."
					},
					"sources": [
						{
							"fileName": "src/schedule/types/enums.ts",
							"line": 4,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "Day"
							},
							{
								"type": "stringLiteral",
								"value": "Week"
							},
							{
								"type": "stringLiteral",
								"value": "WorkWeek"
							},
							{
								"type": "stringLiteral",
								"value": "Month"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						4,
						3,
						2
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/types/enums.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2755,
			"name": "\"schedule/types/enums.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/types/enums.d.ts",
			"children": [
				{
					"id": 2758,
					"name": "CalendarType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Defines the calendarMode options for the Schedule component."
					},
					"sources": [
						{
							"fileName": "src/schedule/types/enums.d.ts",
							"line": 16,
							"character": 24
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "Gregorian"
					}
				},
				{
					"id": 2757,
					"name": "SpannedEventPlacement",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "An enum that holds the options to render the spanned events in all day row or time slot.\n```props\nAllDayRow :- Denotes the rendering of spanned events in an all-day row.\nTimeSlot :- Denotes the rendering of spanned events in an time slot row.\n```"
					},
					"sources": [
						{
							"fileName": "src/schedule/types/enums.d.ts",
							"line": 12,
							"character": 33
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "AllDayRow"
							},
							{
								"type": "stringLiteral",
								"value": "TimeSlot"
							}
						]
					}
				},
				{
					"id": 2756,
					"name": "View",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Defines the view options for the Schedule component."
					},
					"sources": [
						{
							"fileName": "src/schedule/types/enums.d.ts",
							"line": 4,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "Day"
							},
							{
								"type": "stringLiteral",
								"value": "Week"
							},
							{
								"type": "stringLiteral",
								"value": "WorkWeek"
							},
							{
								"type": "stringLiteral",
								"value": "Month"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						2758,
						2757,
						2756
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/types/enums.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 914,
			"name": "\"schedule/types/internal-interface\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/types/internal-interface.ts",
			"children": [
				{
					"id": 915,
					"name": "ActiveViewProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {},
					"children": [
						{
							"id": 958,
							"name": "onCellClick",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback when a cell is clicked."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 226,
									"character": 15
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 959,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 960,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 961,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 280,
														"name": "CellClickEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 226,
											"character": 17
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 64,
								"name": "ScheduleProps.onCellClick"
							}
						},
						{
							"id": 962,
							"name": "onCellDoubleClick",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback when a cell is double-clicked."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 233,
									"character": 21
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 963,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 964,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 965,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 280,
														"name": "CellClickEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 233,
											"character": 23
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 68,
								"name": "ScheduleProps.onCellDoubleClick"
							}
						},
						{
							"id": 942,
							"name": "onCurrentViewChange",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback when the current view changes."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 198,
									"character": 23
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 943,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 944,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 945,
													"name": "view",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 2,
														"name": "View"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 198,
											"character": 25
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 48,
								"name": "ScheduleProps.onCurrentViewChange"
							}
						},
						{
							"id": 984,
							"name": "onDrag",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Triggers when an appointment is dragged."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 282,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 985,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 986,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 987,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 140,
														"name": "DragEventArgs"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 282,
											"character": 12
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 90,
								"name": "ScheduleProps.onDrag"
							}
						},
						{
							"id": 980,
							"name": "onDragStart",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Triggers when an appointment is started to drag."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 275,
									"character": 15
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 981,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 982,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 983,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 140,
														"name": "DragEventArgs"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 275,
											"character": 17
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 86,
								"name": "ScheduleProps.onDragStart"
							}
						},
						{
							"id": 988,
							"name": "onDragStop",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Triggers when the dragging of appointment is stopped."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 289,
									"character": 14
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 989,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 990,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 991,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 140,
														"name": "DragEventArgs"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 289,
											"character": 16
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 94,
								"name": "ScheduleProps.onDragStop"
							}
						},
						{
							"id": 966,
							"name": "onEventClick",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback when an event is clicked."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 240,
									"character": 16
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 967,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 968,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 969,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 287,
														"name": "EventClickEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 240,
											"character": 18
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 72,
								"name": "ScheduleProps.onEventClick"
							}
						},
						{
							"id": 946,
							"name": "onEventCreate",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback when an event is created."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 205,
									"character": 17
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 947,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 948,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 949,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 301,
														"name": "ActionEventArgs"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 205,
											"character": 19
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 52,
								"name": "ScheduleProps.onEventCreate"
							}
						},
						{
							"id": 954,
							"name": "onEventDelete",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback when an event is deleted."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 219,
									"character": 17
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 955,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 956,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 957,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 301,
														"name": "ActionEventArgs"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 219,
											"character": 19
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 60,
								"name": "ScheduleProps.onEventDelete"
							}
						},
						{
							"id": 970,
							"name": "onEventDoubleClick",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback when an event is double-clicked."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 247,
									"character": 22
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 971,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 972,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 973,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 287,
														"name": "EventClickEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 247,
											"character": 24
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 76,
								"name": "ScheduleProps.onEventDoubleClick"
							}
						},
						{
							"id": 974,
							"name": "onEventRendered",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback triggered before an event is rendered."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 254,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 975,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 976,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 977,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 297,
														"name": "EventRenderedArgs"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 254,
											"character": 21
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 80,
								"name": "ScheduleProps.onEventRendered"
							}
						},
						{
							"id": 950,
							"name": "onEventUpdate",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback when an event is updated."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 212,
									"character": 17
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 951,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 952,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 953,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 301,
														"name": "ActionEventArgs"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 212,
											"character": 19
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 56,
								"name": "ScheduleProps.onEventUpdate"
							}
						},
						{
							"id": 992,
							"name": "onMoreEventsClick",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback when more events are clicked."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 296,
									"character": 21
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 993,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 994,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 995,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 291,
														"name": "MoreClickEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 296,
											"character": 23
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 98,
								"name": "ScheduleProps.onMoreEventsClick"
							}
						},
						{
							"id": 938,
							"name": "onSelectedDateChange",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback when the selected date changes."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 191,
									"character": 24
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 939,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 940,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 941,
													"name": "date",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"name": "Date"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 191,
											"character": 26
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 44,
								"name": "ScheduleProps.onSelectedDateChange"
							}
						},
						{
							"id": 978,
							"name": "allowDragAndDrop",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Enables or disables drag and drop functionality.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 261,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 84,
								"name": "ScheduleProps.allowDragAndDrop"
							}
						},
						{
							"id": 979,
							"name": "allowMultiDrag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Enables or disables drag and drop multiple functionalities.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 268,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 85,
								"name": "ScheduleProps.allowMultiDrag"
							}
						},
						{
							"id": 1001,
							"name": "allowOverlap",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Determines whether events can overlap.\nWhen set to false, overlapping events will be prevented.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 19,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"id": 7,
								"name": "ScheduleCommonProps.allowOverlap"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 7,
								"name": "ScheduleCommonProps.allowOverlap"
							}
						},
						{
							"id": 937,
							"name": "calendarMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "It allows the Scheduler to display in other calendar modes.\nBy default, Scheduler is displayed in Gregorian calendar mode.",
								"tags": [
									{
										"tag": "default",
										"text": "'Gregorian'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 184,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"id": 4,
								"name": "CalendarType"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 43,
								"name": "ScheduleProps.calendarMode"
							}
						},
						{
							"id": 1046,
							"name": "cellHeaderTemplate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "It accepts either the string or HTMLElement as template design content and parse it appropriately\nbefore displaying it onto the month date cells.\nThis template is only applicable for month view day cells.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 389,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "ReactNode"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1047,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 1048,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 1049,
															"name": "props",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 1050,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	},
																	"children": [
																		{
																			"id": 1051,
																			"name": "date",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.ts",
																					"line": 389,
																					"character": 52
																				}
																			],
																			"type": {
																				"type": "reference",
																				"name": "Date"
																			}
																		},
																		{
																			"id": 1052,
																			"name": "type",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.ts",
																					"line": 389,
																					"character": 64
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				1051,
																				1052
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "src/schedule/types/schedule-types.ts",
																			"line": 389,
																			"character": 45
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.ts",
													"line": 389,
													"character": 36
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 172,
								"name": "MonthViewProps.cellHeaderTemplate"
							}
						},
						{
							"id": 1019,
							"name": "cellTemplate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The template for rendering cells in this specific view.\nThis can be at both view and root level.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 105,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "ReactNode"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1020,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 1021,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 1022,
															"name": "props",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 1023,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	},
																	"children": [
																		{
																			"id": 1024,
																			"name": "date",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.ts",
																					"line": 105,
																					"character": 46
																				}
																			],
																			"type": {
																				"type": "reference",
																				"name": "Date"
																			}
																		},
																		{
																			"id": 1026,
																			"name": "groupIndex",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true,
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.ts",
																					"line": 105,
																					"character": 78
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 1025,
																			"name": "type",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.ts",
																					"line": 105,
																					"character": 58
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				1024,
																				1026,
																				1025
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "src/schedule/types/schedule-types.ts",
																			"line": 105,
																			"character": 39
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.ts",
													"line": 105,
													"character": 30
												}
											]
										}
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"id": 25,
								"name": "ScheduleCommonProps.cellTemplate"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 25,
								"name": "ScheduleCommonProps.cellTemplate"
							}
						},
						{
							"id": 1000,
							"name": "children",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The children components."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 305,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "React.ReactNode"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 106,
								"name": "ScheduleProps.children"
							}
						},
						{
							"id": 1027,
							"name": "className",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 6,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 134,
								"name": "__type.className"
							}
						},
						{
							"id": 931,
							"name": "currentView",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The current view of the Schedule component.\nCan be either a View type ('Day', 'Week', 'WorkWeek') or a specific view name\nthat matches with a child view's name property.",
								"tags": [
									{
										"tag": "default",
										"text": "'Week'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 139,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 37,
								"name": "ScheduleProps.currentView"
							}
						},
						{
							"id": 1005,
							"name": "dateFormat",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The date format for the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 47,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"id": 11,
								"name": "ScheduleCommonProps.dateFormat"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 11,
								"name": "ScheduleCommonProps.dateFormat"
							}
						},
						{
							"id": 1012,
							"name": "dateHeaderTemplate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The template for rendering date header cells in this specific view.\nThis can be at both view and root level.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 97,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "ReactNode"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1013,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 1014,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 1015,
															"name": "props",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 1016,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	},
																	"children": [
																		{
																			"id": 1017,
																			"name": "date",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.ts",
																					"line": 97,
																					"character": 52
																				}
																			],
																			"type": {
																				"type": "reference",
																				"name": "Date"
																			}
																		},
																		{
																			"id": 1018,
																			"name": "type",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.ts",
																					"line": 97,
																					"character": 64
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				1017,
																				1018
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "src/schedule/types/schedule-types.ts",
																			"line": 97,
																			"character": 45
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.ts",
													"line": 97,
													"character": 36
												}
											]
										}
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"id": 18,
								"name": "ScheduleCommonProps.dateHeaderTemplate"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 18,
								"name": "ScheduleCommonProps.dateHeaderTemplate"
							}
						},
						{
							"id": 1037,
							"name": "displayDate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Specifies the starting week date at an initial rendering of month view.\nThis property is only applicable for month view.\nIf this property value is not set, then the month view will be rendered from the first week of the month.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 363,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 163,
								"name": "MonthViewProps.displayDate"
							}
						},
						{
							"id": 1032,
							"name": "displayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "When the same view is customized with different intervals, this property allows the user to set different display name\nfor those views. The displayName is used in the view switcher.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 343,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 158,
								"name": "ViewSpecificProps.displayName"
							}
						},
						{
							"id": 1004,
							"name": "endHour",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The end hour of the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "'24:00'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 40,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"id": 10,
								"name": "ScheduleCommonProps.endHour"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 10,
								"name": "ScheduleCommonProps.endHour"
							}
						},
						{
							"id": 932,
							"name": "eventSettings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The event settings for the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "{ dataSource: [], fields: { id: 'Id', subject: 'Subject', startTime: 'StartTime', endTime: 'EndTime', isAllDay: 'IsAllDay', location: 'Location', description: 'Description' } }\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 146,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"id": 226,
								"name": "EventSettings"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 38,
								"name": "ScheduleProps.eventSettings"
							}
						},
						{
							"id": 1033,
							"name": "eventTemplate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The template for rendering events in this specific view.\nThis is specifically a view-level prop, not at root level.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 351,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "ReactNode"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1034,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 1035,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 1036,
															"name": "props",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reference",
																"id": 268,
																"name": "EventModel"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.ts",
													"line": 351,
													"character": 31
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 159,
								"name": "ViewSpecificProps.eventTemplate"
							}
						},
						{
							"id": 1009,
							"name": "firstDayOfWeek",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The first day of the week in the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "0\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 75,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"overwrites": {
								"type": "reference",
								"id": 15,
								"name": "ScheduleCommonProps.firstDayOfWeek"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 15,
								"name": "ScheduleCommonProps.firstDayOfWeek"
							}
						},
						{
							"id": 917,
							"name": "handleCalendarChange",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Calendar change handler"
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 20,
									"character": 24
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 918,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 919,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 920,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"name": "ChangeEvent"
															},
															{
																"type": "reference",
																"name": "Date"
															}
														]
													}
												},
												{
													"id": 921,
													"name": "calendar",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"name": "CalendarView"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/internal-interface.ts",
											"line": 20,
											"character": 26
										}
									]
								}
							}
						},
						{
							"id": 922,
							"name": "handleViewButtonClick",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "View button click handler"
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 25,
									"character": 25
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 923,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 924,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 925,
													"name": "view",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/internal-interface.ts",
											"line": 25,
											"character": 27
										}
									]
								}
							}
						},
						{
							"id": 928,
							"name": "height",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The height of the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "'auto'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 116,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 34,
								"name": "ScheduleProps.height"
							}
						},
						{
							"id": 1028,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 7,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 135,
								"name": "__type.id"
							}
						},
						{
							"id": 1030,
							"name": "interval",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "It accepts the number value denoting to include the number of days, weeks, workweeks or months on the defined view type.",
								"tags": [
									{
										"tag": "default",
										"text": "1\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 327,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 156,
								"name": "ViewSpecificProps.interval"
							}
						},
						{
							"id": 1054,
							"name": "maxEventsPerRow",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Maximum number of events to display per row in month view.\nAdditional events will be shown as \"+n more\" text.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 407,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 180,
								"name": "MonthViewProps.maxEventsPerRow"
							}
						},
						{
							"id": 926,
							"name": "morePopupRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Exposes the MorePopup ref (optional)"
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 30,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 3320,
										"name": "IMorePopup"
									}
								],
								"name": "RefObject"
							}
						},
						{
							"id": 1031,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A unique name identifier for the view.\nUsed to identify and switch between views using currentView.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 335,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 157,
								"name": "ViewSpecificProps.name"
							}
						},
						{
							"id": 1038,
							"name": "numberOfWeeks",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "This property customizes the number of weeks that are shown in month view.\nBy default, it shows all weeks in the current month.\nUse `displayDate` property to customize the starting week of month.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 372,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 164,
								"name": "MonthViewProps.numberOfWeeks"
							}
						},
						{
							"id": 996,
							"name": "onActionFailure",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Triggers when a scheduler action gets failed or interrupted and an error information will be returned."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 300,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 997,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 998,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 999,
													"name": "error",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 300,
											"character": 21
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 102,
								"name": "ScheduleProps.onActionFailure"
							}
						},
						{
							"id": 927,
							"name": "quickPopupRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Exposes the MorePopup ref (optional)"
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 35,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 3359,
										"name": "IQuickInfoPopup"
									}
								],
								"name": "RefObject"
							}
						},
						{
							"id": 936,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "When set to true, makes the Schedule to render in a read only mode.\nNo CRUD actions will be allowed at this time.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 176,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 42,
								"name": "ScheduleProps.readOnly"
							}
						},
						{
							"id": 935,
							"name": "rowAutoHeight",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "When true, row height will automatically adjust to fit all events.\nThis takes precedence over maxEventsPerRow when both are set.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 168,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 41,
								"name": "ScheduleProps.rowAutoHeight"
							}
						},
						{
							"id": 916,
							"name": "scheduleRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Schedule component reference"
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 15,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1421,
										"name": "ISchedule"
									}
								],
								"name": "RefObject"
							}
						},
						{
							"id": 930,
							"name": "selectedDate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The selected date in the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "new Date()\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 130,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 36,
								"name": "ScheduleProps.selectedDate"
							}
						},
						{
							"id": 1002,
							"name": "showQuickInfoPopup",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Toggles the visibility of the quick info popup.\nWhen set to false, the popup will not be displayed.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 26,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"id": 8,
								"name": "ScheduleCommonProps.showQuickInfoPopup"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 8,
								"name": "ScheduleCommonProps.showQuickInfoPopup"
							}
						},
						{
							"id": 934,
							"name": "showTimeIndicator",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates whether to show the current time indicator in the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 160,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 40,
								"name": "ScheduleProps.showTimeIndicator"
							}
						},
						{
							"id": 1053,
							"name": "showTrailingAndLeadingDates",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Hide the previous and next month dates of a Schedule month view.\nWhen set to true, dates from previous and next months will be shown.\nWhen set to false, only the current month dates will be displayed.\nThis property is only applicable for Month view.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 399,
									"character": 31
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 179,
								"name": "MonthViewProps.showTrailingAndLeadingDates"
							}
						},
						{
							"id": 1011,
							"name": "showWeekNumber",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates whether to show week numbers in the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 89,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"id": 17,
								"name": "ScheduleCommonProps.showWeekNumber"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 17,
								"name": "ScheduleCommonProps.showWeekNumber"
							}
						},
						{
							"id": 1006,
							"name": "showWeekend",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates whether to show weekends in the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 54,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"id": 12,
								"name": "ScheduleCommonProps.showWeekend"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 12,
								"name": "ScheduleCommonProps.showWeekend"
							}
						},
						{
							"id": 1003,
							"name": "startHour",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The start hour of the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "'00:00'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 33,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"id": 9,
								"name": "ScheduleCommonProps.startHour"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 9,
								"name": "ScheduleCommonProps.startHour"
							}
						},
						{
							"id": 1029,
							"name": "tabIndex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 8,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 136,
								"name": "__type.tabIndex"
							}
						},
						{
							"id": 1007,
							"name": "timeFormat",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The time format for the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 61,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"id": 13,
								"name": "ScheduleCommonProps.timeFormat"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 13,
								"name": "ScheduleCommonProps.timeFormat"
							}
						},
						{
							"id": 1008,
							"name": "timeScale",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The time scale configuration for the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "{ enable: true, interval: 60, slotCount: 2 }\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 68,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 252,
								"name": "TimeScaleModel"
							},
							"overwrites": {
								"type": "reference",
								"id": 14,
								"name": "ScheduleCommonProps.timeScale"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 14,
								"name": "ScheduleCommonProps.timeScale"
							}
						},
						{
							"id": 1039,
							"name": "weekDayTemplate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The template for rendering week day in this specific view.\nThis can be at in view level.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 380,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "ReactNode"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1040,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 1041,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 1042,
															"name": "props",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 1043,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	},
																	"children": [
																		{
																			"id": 1044,
																			"name": "day",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.ts",
																					"line": 380,
																					"character": 48
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 1045,
																			"name": "type",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.ts",
																					"line": 380,
																					"character": 62
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				1044,
																				1045
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "src/schedule/types/schedule-types.ts",
																			"line": 380,
																			"character": 42
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.ts",
													"line": 380,
													"character": 33
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 165,
								"name": "MonthViewProps.weekDayTemplate"
							}
						},
						{
							"id": 929,
							"name": "width",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The width of the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "'auto'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 123,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 35,
								"name": "ScheduleProps.width"
							}
						},
						{
							"id": 1010,
							"name": "workDays",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The work days of the week in the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "[1, 2, 3, 4, 5]\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 82,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							"overwrites": {
								"type": "reference",
								"id": 16,
								"name": "ScheduleCommonProps.workDays"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 16,
								"name": "ScheduleCommonProps.workDays"
							}
						},
						{
							"id": 933,
							"name": "workHours",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The work hours configuration for the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "{ highlight: false, start: '09:00', end: '18:00' }\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 153,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 264,
								"name": "WorkHoursModel"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 39,
								"name": "ScheduleProps.workHours"
							}
						}
					],
					"groups": [
						{
							"title": "Events",
							"kind": 8388608,
							"children": [
								958,
								962,
								942,
								984,
								980,
								988,
								966,
								946,
								954,
								970,
								974,
								950,
								992,
								938
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								978,
								979,
								1001,
								937,
								1046,
								1019,
								1000,
								1027,
								931,
								1005,
								1012,
								1037,
								1032,
								1004,
								932,
								1033,
								1009,
								917,
								922,
								928,
								1028,
								1030,
								1054,
								926,
								1031,
								1038,
								996,
								927,
								936,
								935,
								916,
								930,
								1002,
								934,
								1053,
								1011,
								1006,
								1003,
								1029,
								1007,
								1008,
								1039,
								929,
								1010,
								933
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/types/internal-interface.ts",
							"line": 10,
							"character": 32
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 33,
							"name": "ScheduleProps"
						},
						{
							"type": "reference",
							"id": 155,
							"name": "ViewSpecificProps"
						}
					]
				},
				{
					"id": 1075,
					"name": "AllDayRowProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {},
					"children": [
						{
							"id": 1076,
							"name": "isCollapsed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 75,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1077,
							"name": "onCollapseChange",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 76,
									"character": 20
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1078,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1079,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/internal-interface.ts",
											"line": 76,
											"character": 22
										}
									]
								}
							}
						},
						{
							"id": 1080,
							"name": "onMoreEventsChange",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 77,
									"character": 22
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1081,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1082,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1083,
													"name": "hasMoreEvents",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/internal-interface.ts",
											"line": 77,
											"character": 24
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1076,
								1077,
								1080
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/types/internal-interface.ts",
							"line": 74,
							"character": 31
						}
					]
				},
				{
					"id": 1084,
					"name": "DayEventProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {},
					"children": [
						{
							"id": 1089,
							"name": "endDate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 125,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1089,
								"name": "ProcessedEventsData.endDate"
							}
						},
						{
							"id": 1087,
							"name": "event",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 123,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 268,
								"name": "EventModel"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1087,
								"name": "ProcessedEventsData.event"
							}
						},
						{
							"id": 1094,
							"name": "eventClasses",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 130,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1094,
								"name": "ProcessedEventsData.eventClasses"
							}
						},
						{
							"id": 1092,
							"name": "eventKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 128,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1092,
								"name": "ProcessedEventsData.eventKey"
							}
						},
						{
							"id": 1095,
							"name": "eventStyle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 131,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "CSSProperties"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1095,
								"name": "ProcessedEventsData.eventStyle"
							}
						},
						{
							"id": 1093,
							"name": "guid",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 129,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1093,
								"name": "ProcessedEventsData.guid"
							}
						},
						{
							"id": 1086,
							"name": "isBlockedEvent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Specifies the all day blocked event for month view."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 90,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1097,
							"name": "isFirstDay",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 133,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1097,
								"name": "ProcessedEventsData.isFirstDay"
							}
						},
						{
							"id": 1099,
							"name": "isFirstSegmentInRenderRange",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 135,
									"character": 31
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1099,
								"name": "ProcessedEventsData.isFirstSegmentInRenderRange"
							}
						},
						{
							"id": 1098,
							"name": "isLastDay",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 134,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1098,
								"name": "ProcessedEventsData.isLastDay"
							}
						},
						{
							"id": 1102,
							"name": "isMonthEvent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 138,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1102,
								"name": "ProcessedEventsData.isMonthEvent"
							}
						},
						{
							"id": 1090,
							"name": "positionIndex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 126,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1090,
								"name": "ProcessedEventsData.positionIndex"
							}
						},
						{
							"id": 1100,
							"name": "segmentIndex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 136,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1100,
								"name": "ProcessedEventsData.segmentIndex"
							}
						},
						{
							"id": 1088,
							"name": "startDate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 124,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1088,
								"name": "ProcessedEventsData.startDate"
							}
						},
						{
							"id": 1091,
							"name": "timeDisplay",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 127,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1091,
								"name": "ProcessedEventsData.timeDisplay"
							}
						},
						{
							"id": 1096,
							"name": "totalOverlapping",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 132,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1096,
								"name": "ProcessedEventsData.totalOverlapping"
							}
						},
						{
							"id": 1101,
							"name": "totalSegments",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 137,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1101,
								"name": "ProcessedEventsData.totalSegments"
							}
						},
						{
							"id": 1085,
							"name": "weekRenderDates",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Array of dates in the current week"
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 85,
									"character": 19
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Date"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1089,
								1087,
								1094,
								1092,
								1095,
								1093,
								1086,
								1097,
								1099,
								1098,
								1102,
								1090,
								1100,
								1088,
								1091,
								1096,
								1101,
								1085
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/types/internal-interface.ts",
							"line": 81,
							"character": 30
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1116,
							"name": "ProcessedEventsData"
						}
					]
				},
				{
					"id": 1055,
					"name": "IAllDayRow",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {},
					"children": [
						{
							"id": 1056,
							"name": "hasMoreEvents",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 40,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1056
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/types/internal-interface.ts",
							"line": 39,
							"character": 27
						}
					]
				},
				{
					"id": 1103,
					"name": "MonthCellsProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {},
					"children": [
						{
							"id": 1110,
							"name": "hideOtherMonths",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Specifies to hide the other month dates."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 113,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1104,
							"name": "onDateClick",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Handler for date click to navigate to day view"
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 98,
									"character": 15
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1105,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1106,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1107,
													"name": "date",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"name": "Date"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/internal-interface.ts",
											"line": 98,
											"character": 17
										}
									]
								}
							}
						},
						{
							"id": 1111,
							"name": "onHeightCalculated",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback to share the calculated height for this row"
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 118,
									"character": 22
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1112,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1113,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1114,
													"name": "rowIndex",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1115,
													"name": "height",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/internal-interface.ts",
											"line": 118,
											"character": 24
										}
									]
								}
							}
						},
						{
							"id": 1109,
							"name": "rowIndex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Row index for unique key generation"
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 108,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1108,
							"name": "weekRenderDates",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Array of dates for this specific week/row"
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 103,
									"character": 19
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Date"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1110,
								1104,
								1111,
								1109,
								1108
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/types/internal-interface.ts",
							"line": 94,
							"character": 32
						}
					]
				},
				{
					"id": 1116,
					"name": "ProcessedEventsData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {},
					"children": [
						{
							"id": 1119,
							"name": "endDate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 125,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							}
						},
						{
							"id": 1117,
							"name": "event",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 123,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 268,
								"name": "EventModel"
							}
						},
						{
							"id": 1124,
							"name": "eventClasses",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 130,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1122,
							"name": "eventKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 128,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1125,
							"name": "eventStyle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 131,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "CSSProperties"
							}
						},
						{
							"id": 1123,
							"name": "guid",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 129,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1127,
							"name": "isFirstDay",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 133,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1129,
							"name": "isFirstSegmentInRenderRange",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 135,
									"character": 31
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1128,
							"name": "isLastDay",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 134,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1132,
							"name": "isMonthEvent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 138,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1120,
							"name": "positionIndex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 126,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1130,
							"name": "segmentIndex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 136,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1118,
							"name": "startDate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 124,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							}
						},
						{
							"id": 1121,
							"name": "timeDisplay",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 127,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1126,
							"name": "totalOverlapping",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 132,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1131,
							"name": "totalSegments",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 137,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1119,
								1117,
								1124,
								1122,
								1125,
								1123,
								1127,
								1129,
								1128,
								1132,
								1120,
								1130,
								1118,
								1121,
								1126,
								1131
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/types/internal-interface.ts",
							"line": 122,
							"character": 36
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 1084,
							"name": "DayEventProps"
						},
						{
							"type": "reference",
							"id": 2929,
							"name": "DayEventProps"
						}
					]
				},
				{
					"id": 1057,
					"name": "TimeCellsProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {},
					"children": [
						{
							"id": 1058,
							"name": "currentTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 45,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							}
						},
						{
							"id": 1059,
							"name": "currentTimePosition",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 46,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1060,
							"name": "isTimeWithinBounds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 47,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1058,
								1059,
								1060
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/types/internal-interface.ts",
							"line": 44,
							"character": 31
						}
					]
				},
				{
					"id": 1061,
					"name": "TimeIndicatorProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {},
					"children": [
						{
							"id": 1062,
							"name": "onPositionUpdate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 52,
									"character": 20
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1063,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1064,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 1065,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1066,
													"name": "isWithinBounds",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/internal-interface.ts",
											"line": 52,
											"character": 22
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1062
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/types/internal-interface.ts",
							"line": 51,
							"character": 35
						}
					]
				},
				{
					"id": 1133,
					"name": "TimeSlot",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {},
					"children": [
						{
							"id": 1135,
							"name": "date",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 144,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							}
						},
						{
							"id": 1142,
							"name": "index",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 151,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1138,
							"name": "isLastSlotBeforeEnd",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 147,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1137,
							"name": "isLastSlotOfInterval",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 146,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1136,
							"name": "isMajorSlot",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 145,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1134,
							"name": "key",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 143,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1140,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 149,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1139,
							"name": "slotType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 148,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1141,
							"name": "templateProps",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 150,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"id": 294,
								"name": "TimeSlotTemplateProps"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1135,
								1142,
								1138,
								1137,
								1136,
								1134,
								1140,
								1139,
								1141
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/types/internal-interface.ts",
							"line": 142,
							"character": 25
						}
					]
				},
				{
					"id": 1067,
					"name": "VerticalViewProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {},
					"children": [
						{
							"id": 1068,
							"name": "viewType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 57,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 2,
								"name": "View"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1068
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/types/internal-interface.ts",
							"line": 56,
							"character": 34
						}
					]
				},
				{
					"id": 1069,
					"name": "ViewsInfo",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {},
					"children": [
						{
							"id": 1073,
							"name": "component",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The component element"
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 69,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "ReactElement"
							}
						},
						{
							"id": 1072,
							"name": "displayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The display name of the view"
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 67,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1074,
							"name": "interval",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 70,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1071,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The unique name identifier for the view"
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 65,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1070,
							"name": "viewType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The view type"
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.ts",
									"line": 63,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 2,
								"name": "View"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1073,
								1072,
								1074,
								1071,
								1070
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/types/internal-interface.ts",
							"line": 61,
							"character": 26
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						915,
						1075,
						1084,
						1055,
						1103,
						1116,
						1057,
						1061,
						1133,
						1067,
						1069
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/types/internal-interface.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2759,
			"name": "\"schedule/types/internal-interface.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/types/internal-interface.d.ts",
			"children": [
				{
					"id": 2760,
					"name": "ActiveViewProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {},
					"children": [
						{
							"id": 2803,
							"name": "onCellClick",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback when a cell is clicked."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 226,
									"character": 15
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2804,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2805,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2806,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 280,
														"name": "CellClickEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 226,
											"character": 17
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 64,
								"name": "ScheduleProps.onCellClick"
							}
						},
						{
							"id": 2807,
							"name": "onCellDoubleClick",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback when a cell is double-clicked."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 233,
									"character": 21
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2808,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2809,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2810,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 280,
														"name": "CellClickEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 233,
											"character": 23
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 68,
								"name": "ScheduleProps.onCellDoubleClick"
							}
						},
						{
							"id": 2787,
							"name": "onCurrentViewChange",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback when the current view changes."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 198,
									"character": 23
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2788,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2789,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2790,
													"name": "view",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 2,
														"name": "View"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 198,
											"character": 25
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 48,
								"name": "ScheduleProps.onCurrentViewChange"
							}
						},
						{
							"id": 2829,
							"name": "onDrag",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Triggers when an appointment is dragged."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 282,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2830,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2831,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2832,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 140,
														"name": "DragEventArgs"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 282,
											"character": 12
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 90,
								"name": "ScheduleProps.onDrag"
							}
						},
						{
							"id": 2825,
							"name": "onDragStart",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Triggers when an appointment is started to drag."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 275,
									"character": 15
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2826,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2827,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2828,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 140,
														"name": "DragEventArgs"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 275,
											"character": 17
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 86,
								"name": "ScheduleProps.onDragStart"
							}
						},
						{
							"id": 2833,
							"name": "onDragStop",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Triggers when the dragging of appointment is stopped."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 289,
									"character": 14
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2834,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2835,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2836,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 140,
														"name": "DragEventArgs"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 289,
											"character": 16
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 94,
								"name": "ScheduleProps.onDragStop"
							}
						},
						{
							"id": 2811,
							"name": "onEventClick",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback when an event is clicked."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 240,
									"character": 16
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2812,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2813,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2814,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 287,
														"name": "EventClickEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 240,
											"character": 18
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 72,
								"name": "ScheduleProps.onEventClick"
							}
						},
						{
							"id": 2791,
							"name": "onEventCreate",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback when an event is created."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 205,
									"character": 17
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2792,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2793,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2794,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 301,
														"name": "ActionEventArgs"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 205,
											"character": 19
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 52,
								"name": "ScheduleProps.onEventCreate"
							}
						},
						{
							"id": 2799,
							"name": "onEventDelete",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback when an event is deleted."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 219,
									"character": 17
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2800,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2801,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2802,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 301,
														"name": "ActionEventArgs"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 219,
											"character": 19
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 60,
								"name": "ScheduleProps.onEventDelete"
							}
						},
						{
							"id": 2815,
							"name": "onEventDoubleClick",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback when an event is double-clicked."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 247,
									"character": 22
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2816,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2817,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2818,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 287,
														"name": "EventClickEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 247,
											"character": 24
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 76,
								"name": "ScheduleProps.onEventDoubleClick"
							}
						},
						{
							"id": 2819,
							"name": "onEventRendered",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback triggered before an event is rendered."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 254,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2820,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2821,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2822,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 297,
														"name": "EventRenderedArgs"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 254,
											"character": 21
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 80,
								"name": "ScheduleProps.onEventRendered"
							}
						},
						{
							"id": 2795,
							"name": "onEventUpdate",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback when an event is updated."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 212,
									"character": 17
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2796,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2797,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2798,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 301,
														"name": "ActionEventArgs"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 212,
											"character": 19
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 56,
								"name": "ScheduleProps.onEventUpdate"
							}
						},
						{
							"id": 2837,
							"name": "onMoreEventsClick",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback when more events are clicked."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 296,
									"character": 21
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2838,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2839,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2840,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 291,
														"name": "MoreClickEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 296,
											"character": 23
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 98,
								"name": "ScheduleProps.onMoreEventsClick"
							}
						},
						{
							"id": 2783,
							"name": "onSelectedDateChange",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback when the selected date changes."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 191,
									"character": 24
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2784,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2785,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2786,
													"name": "date",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"name": "Date"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 191,
											"character": 26
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 44,
								"name": "ScheduleProps.onSelectedDateChange"
							}
						},
						{
							"id": 2823,
							"name": "allowDragAndDrop",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Enables or disables drag and drop functionality.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 261,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 84,
								"name": "ScheduleProps.allowDragAndDrop"
							}
						},
						{
							"id": 2824,
							"name": "allowMultiDrag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Enables or disables drag and drop multiple functionalities.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 268,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 85,
								"name": "ScheduleProps.allowMultiDrag"
							}
						},
						{
							"id": 2846,
							"name": "allowOverlap",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Determines whether events can overlap.\nWhen set to false, overlapping events will be prevented.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 19,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"id": 7,
								"name": "ScheduleCommonProps.allowOverlap"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 7,
								"name": "ScheduleCommonProps.allowOverlap"
							}
						},
						{
							"id": 2782,
							"name": "calendarMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "It allows the Scheduler to display in other calendar modes.\nBy default, Scheduler is displayed in Gregorian calendar mode.",
								"tags": [
									{
										"tag": "default",
										"text": "'Gregorian'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 184,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"id": 4,
								"name": "CalendarType"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 43,
								"name": "ScheduleProps.calendarMode"
							}
						},
						{
							"id": 2891,
							"name": "cellHeaderTemplate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "It accepts either the string or HTMLElement as template design content and parse it appropriately\nbefore displaying it onto the month date cells.\nThis template is only applicable for month view day cells.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 389,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "ReactNode"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2892,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2893,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 2894,
															"name": "props",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 2895,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	},
																	"children": [
																		{
																			"id": 2896,
																			"name": "date",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.ts",
																					"line": 389,
																					"character": 52
																				}
																			],
																			"type": {
																				"type": "reference",
																				"name": "Date"
																			}
																		},
																		{
																			"id": 2897,
																			"name": "type",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.ts",
																					"line": 389,
																					"character": 64
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				2896,
																				2897
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "src/schedule/types/schedule-types.ts",
																			"line": 389,
																			"character": 45
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.ts",
													"line": 389,
													"character": 36
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 172,
								"name": "MonthViewProps.cellHeaderTemplate"
							}
						},
						{
							"id": 2864,
							"name": "cellTemplate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The template for rendering cells in this specific view.\nThis can be at both view and root level.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 105,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "ReactNode"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2865,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2866,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 2867,
															"name": "props",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 2868,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	},
																	"children": [
																		{
																			"id": 2869,
																			"name": "date",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.ts",
																					"line": 105,
																					"character": 46
																				}
																			],
																			"type": {
																				"type": "reference",
																				"name": "Date"
																			}
																		},
																		{
																			"id": 2871,
																			"name": "groupIndex",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true,
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.ts",
																					"line": 105,
																					"character": 78
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 2870,
																			"name": "type",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.ts",
																					"line": 105,
																					"character": 58
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				2869,
																				2871,
																				2870
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "src/schedule/types/schedule-types.ts",
																			"line": 105,
																			"character": 39
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.ts",
													"line": 105,
													"character": 30
												}
											]
										}
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"id": 25,
								"name": "ScheduleCommonProps.cellTemplate"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 25,
								"name": "ScheduleCommonProps.cellTemplate"
							}
						},
						{
							"id": 2845,
							"name": "children",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The children components."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 305,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "React.ReactNode"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 106,
								"name": "ScheduleProps.children"
							}
						},
						{
							"id": 2872,
							"name": "className",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 6,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 134,
								"name": "__type.className"
							}
						},
						{
							"id": 2776,
							"name": "currentView",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The current view of the Schedule component.\nCan be either a View type ('Day', 'Week', 'WorkWeek') or a specific view name\nthat matches with a child view's name property.",
								"tags": [
									{
										"tag": "default",
										"text": "'Week'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 139,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 37,
								"name": "ScheduleProps.currentView"
							}
						},
						{
							"id": 2850,
							"name": "dateFormat",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The date format for the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 47,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"id": 11,
								"name": "ScheduleCommonProps.dateFormat"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 11,
								"name": "ScheduleCommonProps.dateFormat"
							}
						},
						{
							"id": 2857,
							"name": "dateHeaderTemplate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The template for rendering date header cells in this specific view.\nThis can be at both view and root level.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 97,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "ReactNode"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2858,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2859,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 2860,
															"name": "props",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 2861,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	},
																	"children": [
																		{
																			"id": 2862,
																			"name": "date",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.ts",
																					"line": 97,
																					"character": 52
																				}
																			],
																			"type": {
																				"type": "reference",
																				"name": "Date"
																			}
																		},
																		{
																			"id": 2863,
																			"name": "type",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.ts",
																					"line": 97,
																					"character": 64
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				2862,
																				2863
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "src/schedule/types/schedule-types.ts",
																			"line": 97,
																			"character": 45
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.ts",
													"line": 97,
													"character": 36
												}
											]
										}
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"id": 18,
								"name": "ScheduleCommonProps.dateHeaderTemplate"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 18,
								"name": "ScheduleCommonProps.dateHeaderTemplate"
							}
						},
						{
							"id": 2882,
							"name": "displayDate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Specifies the starting week date at an initial rendering of month view.\nThis property is only applicable for month view.\nIf this property value is not set, then the month view will be rendered from the first week of the month.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 363,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 163,
								"name": "MonthViewProps.displayDate"
							}
						},
						{
							"id": 2877,
							"name": "displayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "When the same view is customized with different intervals, this property allows the user to set different display name\nfor those views. The displayName is used in the view switcher.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 343,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 158,
								"name": "ViewSpecificProps.displayName"
							}
						},
						{
							"id": 2849,
							"name": "endHour",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The end hour of the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "'24:00'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 40,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"id": 10,
								"name": "ScheduleCommonProps.endHour"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 10,
								"name": "ScheduleCommonProps.endHour"
							}
						},
						{
							"id": 2777,
							"name": "eventSettings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The event settings for the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "{ dataSource: [], fields: { id: 'Id', subject: 'Subject', startTime: 'StartTime', endTime: 'EndTime', isAllDay: 'IsAllDay', location: 'Location', description: 'Description' } }\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 146,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"id": 226,
								"name": "EventSettings"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 38,
								"name": "ScheduleProps.eventSettings"
							}
						},
						{
							"id": 2878,
							"name": "eventTemplate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The template for rendering events in this specific view.\nThis is specifically a view-level prop, not at root level.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 351,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "ReactNode"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2879,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2880,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 2881,
															"name": "props",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reference",
																"id": 268,
																"name": "EventModel"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.ts",
													"line": 351,
													"character": 31
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 159,
								"name": "ViewSpecificProps.eventTemplate"
							}
						},
						{
							"id": 2854,
							"name": "firstDayOfWeek",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The first day of the week in the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "0\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 75,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"overwrites": {
								"type": "reference",
								"id": 15,
								"name": "ScheduleCommonProps.firstDayOfWeek"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 15,
								"name": "ScheduleCommonProps.firstDayOfWeek"
							}
						},
						{
							"id": 2762,
							"name": "handleCalendarChange",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Calendar change handler"
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 17,
									"character": 24
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2763,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2764,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2765,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"name": "ChangeEvent"
															},
															{
																"type": "reference",
																"name": "Date"
															}
														]
													}
												},
												{
													"id": 2766,
													"name": "calendar",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"name": "CalendarView"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/internal-interface.d.ts",
											"line": 17,
											"character": 26
										}
									]
								}
							}
						},
						{
							"id": 2767,
							"name": "handleViewButtonClick",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "View button click handler"
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 21,
									"character": 25
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2768,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2769,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2770,
													"name": "view",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/internal-interface.d.ts",
											"line": 21,
											"character": 27
										}
									]
								}
							}
						},
						{
							"id": 2773,
							"name": "height",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The height of the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "'auto'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 116,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 34,
								"name": "ScheduleProps.height"
							}
						},
						{
							"id": 2873,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 7,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 135,
								"name": "__type.id"
							}
						},
						{
							"id": 2875,
							"name": "interval",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "It accepts the number value denoting to include the number of days, weeks, workweeks or months on the defined view type.",
								"tags": [
									{
										"tag": "default",
										"text": "1\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 327,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 156,
								"name": "ViewSpecificProps.interval"
							}
						},
						{
							"id": 2899,
							"name": "maxEventsPerRow",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Maximum number of events to display per row in month view.\nAdditional events will be shown as \"+n more\" text.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 407,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 180,
								"name": "MonthViewProps.maxEventsPerRow"
							}
						},
						{
							"id": 2771,
							"name": "morePopupRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Exposes the MorePopup ref (optional)"
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 25,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 3320,
										"name": "IMorePopup"
									}
								],
								"name": "RefObject"
							}
						},
						{
							"id": 2876,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A unique name identifier for the view.\nUsed to identify and switch between views using currentView.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 335,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 157,
								"name": "ViewSpecificProps.name"
							}
						},
						{
							"id": 2883,
							"name": "numberOfWeeks",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "This property customizes the number of weeks that are shown in month view.\nBy default, it shows all weeks in the current month.\nUse `displayDate` property to customize the starting week of month.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 372,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 164,
								"name": "MonthViewProps.numberOfWeeks"
							}
						},
						{
							"id": 2841,
							"name": "onActionFailure",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Triggers when a scheduler action gets failed or interrupted and an error information will be returned."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 300,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2842,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2843,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2844,
													"name": "error",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 300,
											"character": 21
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 102,
								"name": "ScheduleProps.onActionFailure"
							}
						},
						{
							"id": 2772,
							"name": "quickPopupRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Exposes the MorePopup ref (optional)"
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 29,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 3359,
										"name": "IQuickInfoPopup"
									}
								],
								"name": "RefObject"
							}
						},
						{
							"id": 2781,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "When set to true, makes the Schedule to render in a read only mode.\nNo CRUD actions will be allowed at this time.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 176,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 42,
								"name": "ScheduleProps.readOnly"
							}
						},
						{
							"id": 2780,
							"name": "rowAutoHeight",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "When true, row height will automatically adjust to fit all events.\nThis takes precedence over maxEventsPerRow when both are set.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 168,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 41,
								"name": "ScheduleProps.rowAutoHeight"
							}
						},
						{
							"id": 2761,
							"name": "scheduleRef",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Schedule component reference"
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 13,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1421,
										"name": "ISchedule"
									}
								],
								"name": "RefObject"
							}
						},
						{
							"id": 2775,
							"name": "selectedDate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The selected date in the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "new Date()\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 130,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 36,
								"name": "ScheduleProps.selectedDate"
							}
						},
						{
							"id": 2847,
							"name": "showQuickInfoPopup",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Toggles the visibility of the quick info popup.\nWhen set to false, the popup will not be displayed.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 26,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"id": 8,
								"name": "ScheduleCommonProps.showQuickInfoPopup"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 8,
								"name": "ScheduleCommonProps.showQuickInfoPopup"
							}
						},
						{
							"id": 2779,
							"name": "showTimeIndicator",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates whether to show the current time indicator in the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 160,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 40,
								"name": "ScheduleProps.showTimeIndicator"
							}
						},
						{
							"id": 2898,
							"name": "showTrailingAndLeadingDates",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Hide the previous and next month dates of a Schedule month view.\nWhen set to true, dates from previous and next months will be shown.\nWhen set to false, only the current month dates will be displayed.\nThis property is only applicable for Month view.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 399,
									"character": 31
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 179,
								"name": "MonthViewProps.showTrailingAndLeadingDates"
							}
						},
						{
							"id": 2856,
							"name": "showWeekNumber",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates whether to show week numbers in the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 89,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"id": 17,
								"name": "ScheduleCommonProps.showWeekNumber"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 17,
								"name": "ScheduleCommonProps.showWeekNumber"
							}
						},
						{
							"id": 2851,
							"name": "showWeekend",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates whether to show weekends in the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 54,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"id": 12,
								"name": "ScheduleCommonProps.showWeekend"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 12,
								"name": "ScheduleCommonProps.showWeekend"
							}
						},
						{
							"id": 2848,
							"name": "startHour",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The start hour of the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "'00:00'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 33,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"id": 9,
								"name": "ScheduleCommonProps.startHour"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 9,
								"name": "ScheduleCommonProps.startHour"
							}
						},
						{
							"id": 2874,
							"name": "tabIndex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 8,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 136,
								"name": "__type.tabIndex"
							}
						},
						{
							"id": 2852,
							"name": "timeFormat",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The time format for the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 61,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"id": 13,
								"name": "ScheduleCommonProps.timeFormat"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 13,
								"name": "ScheduleCommonProps.timeFormat"
							}
						},
						{
							"id": 2853,
							"name": "timeScale",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The time scale configuration for the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "{ enable: true, interval: 60, slotCount: 2 }\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 68,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 252,
								"name": "TimeScaleModel"
							},
							"overwrites": {
								"type": "reference",
								"id": 14,
								"name": "ScheduleCommonProps.timeScale"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 14,
								"name": "ScheduleCommonProps.timeScale"
							}
						},
						{
							"id": 2884,
							"name": "weekDayTemplate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The template for rendering week day in this specific view.\nThis can be at in view level.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 380,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "ReactNode"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2885,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2886,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 2887,
															"name": "props",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 2888,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	},
																	"children": [
																		{
																			"id": 2889,
																			"name": "day",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.ts",
																					"line": 380,
																					"character": 48
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 2890,
																			"name": "type",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.ts",
																					"line": 380,
																					"character": 62
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				2889,
																				2890
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "src/schedule/types/schedule-types.ts",
																			"line": 380,
																			"character": 42
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.ts",
													"line": 380,
													"character": 33
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 165,
								"name": "MonthViewProps.weekDayTemplate"
							}
						},
						{
							"id": 2774,
							"name": "width",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The width of the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "'auto'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 123,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 35,
								"name": "ScheduleProps.width"
							}
						},
						{
							"id": 2855,
							"name": "workDays",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The work days of the week in the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "[1, 2, 3, 4, 5]\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 82,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							"overwrites": {
								"type": "reference",
								"id": 16,
								"name": "ScheduleCommonProps.workDays"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 16,
								"name": "ScheduleCommonProps.workDays"
							}
						},
						{
							"id": 2778,
							"name": "workHours",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The work hours configuration for the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "{ highlight: false, start: '09:00', end: '18:00' }\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 153,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 264,
								"name": "WorkHoursModel"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 39,
								"name": "ScheduleProps.workHours"
							}
						}
					],
					"groups": [
						{
							"title": "Events",
							"kind": 8388608,
							"children": [
								2803,
								2807,
								2787,
								2829,
								2825,
								2833,
								2811,
								2791,
								2799,
								2815,
								2819,
								2795,
								2837,
								2783
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2823,
								2824,
								2846,
								2782,
								2891,
								2864,
								2845,
								2872,
								2776,
								2850,
								2857,
								2882,
								2877,
								2849,
								2777,
								2878,
								2854,
								2762,
								2767,
								2773,
								2873,
								2875,
								2899,
								2771,
								2876,
								2883,
								2841,
								2772,
								2781,
								2780,
								2761,
								2775,
								2847,
								2779,
								2898,
								2856,
								2851,
								2848,
								2874,
								2852,
								2853,
								2884,
								2774,
								2855,
								2778
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/types/internal-interface.d.ts",
							"line": 9,
							"character": 32
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 33,
							"name": "ScheduleProps"
						},
						{
							"type": "reference",
							"id": 155,
							"name": "ViewSpecificProps"
						}
					]
				},
				{
					"id": 2920,
					"name": "AllDayRowProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {},
					"children": [
						{
							"id": 2921,
							"name": "isCollapsed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 63,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2922,
							"name": "onCollapseChange",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 64,
									"character": 20
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2923,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2924,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/internal-interface.d.ts",
											"line": 64,
											"character": 22
										}
									]
								}
							}
						},
						{
							"id": 2925,
							"name": "onMoreEventsChange",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 65,
									"character": 22
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2926,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2927,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2928,
													"name": "hasMoreEvents",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/internal-interface.d.ts",
											"line": 65,
											"character": 24
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2921,
								2922,
								2925
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/types/internal-interface.d.ts",
							"line": 62,
							"character": 31
						}
					]
				},
				{
					"id": 2929,
					"name": "DayEventProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {},
					"children": [
						{
							"id": 2934,
							"name": "endDate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 105,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1089,
								"name": "ProcessedEventsData.endDate"
							}
						},
						{
							"id": 2932,
							"name": "event",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 103,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 268,
								"name": "EventModel"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1087,
								"name": "ProcessedEventsData.event"
							}
						},
						{
							"id": 2939,
							"name": "eventClasses",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 110,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1094,
								"name": "ProcessedEventsData.eventClasses"
							}
						},
						{
							"id": 2937,
							"name": "eventKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 108,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1092,
								"name": "ProcessedEventsData.eventKey"
							}
						},
						{
							"id": 2940,
							"name": "eventStyle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 111,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "CSSProperties"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1095,
								"name": "ProcessedEventsData.eventStyle"
							}
						},
						{
							"id": 2938,
							"name": "guid",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 109,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1093,
								"name": "ProcessedEventsData.guid"
							}
						},
						{
							"id": 2931,
							"name": "isBlockedEvent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Specifies the all day blocked event for month view."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 76,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2942,
							"name": "isFirstDay",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 113,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1097,
								"name": "ProcessedEventsData.isFirstDay"
							}
						},
						{
							"id": 2944,
							"name": "isFirstSegmentInRenderRange",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 115,
									"character": 31
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1099,
								"name": "ProcessedEventsData.isFirstSegmentInRenderRange"
							}
						},
						{
							"id": 2943,
							"name": "isLastDay",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 114,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1098,
								"name": "ProcessedEventsData.isLastDay"
							}
						},
						{
							"id": 2947,
							"name": "isMonthEvent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 118,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1102,
								"name": "ProcessedEventsData.isMonthEvent"
							}
						},
						{
							"id": 2935,
							"name": "positionIndex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 106,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1090,
								"name": "ProcessedEventsData.positionIndex"
							}
						},
						{
							"id": 2945,
							"name": "segmentIndex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 116,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1100,
								"name": "ProcessedEventsData.segmentIndex"
							}
						},
						{
							"id": 2933,
							"name": "startDate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 104,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1088,
								"name": "ProcessedEventsData.startDate"
							}
						},
						{
							"id": 2936,
							"name": "timeDisplay",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 107,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1091,
								"name": "ProcessedEventsData.timeDisplay"
							}
						},
						{
							"id": 2941,
							"name": "totalOverlapping",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 112,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1096,
								"name": "ProcessedEventsData.totalOverlapping"
							}
						},
						{
							"id": 2946,
							"name": "totalSegments",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 117,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1101,
								"name": "ProcessedEventsData.totalSegments"
							}
						},
						{
							"id": 2930,
							"name": "weekRenderDates",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Array of dates in the current week"
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 72,
									"character": 19
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Date"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2934,
								2932,
								2939,
								2937,
								2940,
								2938,
								2931,
								2942,
								2944,
								2943,
								2947,
								2935,
								2945,
								2933,
								2936,
								2941,
								2946,
								2930
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/types/internal-interface.d.ts",
							"line": 68,
							"character": 30
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1116,
							"name": "ProcessedEventsData"
						}
					]
				},
				{
					"id": 2900,
					"name": "IAllDayRow",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {},
					"children": [
						{
							"id": 2901,
							"name": "hasMoreEvents",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 33,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2901
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/types/internal-interface.d.ts",
							"line": 32,
							"character": 27
						}
					]
				},
				{
					"id": 2948,
					"name": "MonthCellsProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {},
					"children": [
						{
							"id": 2955,
							"name": "hideOtherMonths",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Specifies to hide the other month dates."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 95,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2949,
							"name": "onDateClick",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Handler for date click to navigate to day view"
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 83,
									"character": 15
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2950,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2951,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2952,
													"name": "date",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"name": "Date"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/internal-interface.d.ts",
											"line": 83,
											"character": 17
										}
									]
								}
							}
						},
						{
							"id": 2956,
							"name": "onHeightCalculated",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback to share the calculated height for this row"
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 99,
									"character": 22
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2957,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2958,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2959,
													"name": "rowIndex",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 2960,
													"name": "height",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/internal-interface.d.ts",
											"line": 99,
											"character": 24
										}
									]
								}
							}
						},
						{
							"id": 2954,
							"name": "rowIndex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Row index for unique key generation"
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 91,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2953,
							"name": "weekRenderDates",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Array of dates for this specific week/row"
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 87,
									"character": 19
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Date"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2955,
								2949,
								2956,
								2954,
								2953
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/types/internal-interface.d.ts",
							"line": 79,
							"character": 32
						}
					]
				},
				{
					"id": 2961,
					"name": "ProcessedEventsData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {},
					"children": [
						{
							"id": 2964,
							"name": "endDate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 105,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							}
						},
						{
							"id": 2962,
							"name": "event",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 103,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 268,
								"name": "EventModel"
							}
						},
						{
							"id": 2969,
							"name": "eventClasses",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 110,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 2967,
							"name": "eventKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 108,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2970,
							"name": "eventStyle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 111,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "CSSProperties"
							}
						},
						{
							"id": 2968,
							"name": "guid",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 109,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2972,
							"name": "isFirstDay",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 113,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2974,
							"name": "isFirstSegmentInRenderRange",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 115,
									"character": 31
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2973,
							"name": "isLastDay",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 114,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2977,
							"name": "isMonthEvent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 118,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2965,
							"name": "positionIndex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 106,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2975,
							"name": "segmentIndex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 116,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2963,
							"name": "startDate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 104,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							}
						},
						{
							"id": 2966,
							"name": "timeDisplay",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 107,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2971,
							"name": "totalOverlapping",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 112,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2976,
							"name": "totalSegments",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 117,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2964,
								2962,
								2969,
								2967,
								2970,
								2968,
								2972,
								2974,
								2973,
								2977,
								2965,
								2975,
								2963,
								2966,
								2971,
								2976
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/types/internal-interface.d.ts",
							"line": 102,
							"character": 36
						}
					]
				},
				{
					"id": 2902,
					"name": "TimeCellsProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {},
					"children": [
						{
							"id": 2903,
							"name": "currentTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 37,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							}
						},
						{
							"id": 2904,
							"name": "currentTimePosition",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 38,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2905,
							"name": "isTimeWithinBounds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 39,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2903,
								2904,
								2905
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/types/internal-interface.d.ts",
							"line": 36,
							"character": 31
						}
					]
				},
				{
					"id": 2906,
					"name": "TimeIndicatorProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {},
					"children": [
						{
							"id": 2907,
							"name": "onPositionUpdate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 43,
									"character": 20
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2908,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2909,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 2910,
													"name": "position",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 2911,
													"name": "isWithinBounds",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/internal-interface.d.ts",
											"line": 43,
											"character": 22
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2907
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/types/internal-interface.d.ts",
							"line": 42,
							"character": 35
						}
					]
				},
				{
					"id": 2978,
					"name": "TimeSlot",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {},
					"children": [
						{
							"id": 2980,
							"name": "date",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 123,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							}
						},
						{
							"id": 2987,
							"name": "index",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 130,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2983,
							"name": "isLastSlotBeforeEnd",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 126,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2982,
							"name": "isLastSlotOfInterval",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 125,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2981,
							"name": "isMajorSlot",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 124,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2979,
							"name": "key",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 122,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2985,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 128,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2984,
							"name": "slotType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 127,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2986,
							"name": "templateProps",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 129,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"id": 294,
								"name": "TimeSlotTemplateProps"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2980,
								2987,
								2983,
								2982,
								2981,
								2979,
								2985,
								2984,
								2986
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/types/internal-interface.d.ts",
							"line": 121,
							"character": 25
						}
					]
				},
				{
					"id": 2912,
					"name": "VerticalViewProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {},
					"children": [
						{
							"id": 2913,
							"name": "viewType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 47,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 2,
								"name": "View"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2913
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/types/internal-interface.d.ts",
							"line": 46,
							"character": 34
						}
					]
				},
				{
					"id": 2914,
					"name": "ViewsInfo",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {},
					"children": [
						{
							"id": 2918,
							"name": "component",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The component element"
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 58,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "ReactElement"
							}
						},
						{
							"id": 2917,
							"name": "displayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The display name of the view"
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 56,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2919,
							"name": "interval",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 59,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2916,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The unique name identifier for the view"
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 54,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2915,
							"name": "viewType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The view type"
							},
							"sources": [
								{
									"fileName": "src/schedule/types/internal-interface.d.ts",
									"line": 52,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 2,
								"name": "View"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2918,
								2917,
								2919,
								2916,
								2915
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/types/internal-interface.d.ts",
							"line": 50,
							"character": 26
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2760,
						2920,
						2929,
						2900,
						2948,
						2961,
						2902,
						2906,
						2978,
						2912,
						2914
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/types/internal-interface.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 5,
			"name": "\"schedule/types/schedule-types\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/types/schedule-types.ts",
			"children": [
				{
					"id": 301,
					"name": "ActionEventArgs",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "An interface that holds options to control the actions of scheduler such as editing, adding, deleting."
					},
					"children": [
						{
							"id": 305,
							"name": "addedRecords",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Returns the appropriate added data based on the action."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 744,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "any"
										}
									],
									"name": "Record"
								}
							}
						},
						{
							"id": 304,
							"name": "cancel",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines the cancel option for the action taking place."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 742,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 306,
							"name": "changedRecords",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Returns the appropriate changed data based on the action."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 746,
									"character": 18
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "any"
										}
									],
									"name": "Record"
								}
							}
						},
						{
							"id": 307,
							"name": "deletedRecords",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Returns the appropriate deleted data based on the action."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 748,
									"character": 18
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "any"
										}
									],
									"name": "Record"
								}
							}
						},
						{
							"id": 303,
							"name": "event",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines the type of the event."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 740,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "Event"
							}
						},
						{
							"id": 308,
							"name": "promise",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A Promise that, when provided, checks for overlapping events on the server.\nIf the promise resolves with overlapping events, the action (add/update) will be\ncanceled, and an alert will be displayed to the user.\nIf no overlapping events are found, the scheduler proceeds with the action."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 755,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise"
							}
						},
						{
							"id": 302,
							"name": "requestType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns the request type of the current action."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 738,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								305,
								304,
								306,
								307,
								303,
								308,
								302
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/types/schedule-types.ts",
							"line": 736,
							"character": 32
						}
					]
				},
				{
					"id": 280,
					"name": "CellClickEvent",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Defines the cell click event for the Schedule component."
					},
					"children": [
						{
							"id": 285,
							"name": "element",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The element that was clicked."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 656,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "HTMLElement"
							}
						},
						{
							"id": 283,
							"name": "endTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The end time of the cell."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 646,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							}
						},
						{
							"id": 286,
							"name": "groupIndex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The group index if resources are used."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 661,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 284,
							"name": "isAllDay",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Indicates whether the cell is an all-day cell."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 651,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 281,
							"name": "nativeEvent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The native event object."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 636,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "MouseEvent"
							}
						},
						{
							"id": 282,
							"name": "startTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The start time of the cell."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 641,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								285,
								283,
								286,
								284,
								281,
								282
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/types/schedule-types.ts",
							"line": 631,
							"character": 31
						}
					]
				},
				{
					"id": 140,
					"name": "DragEventArgs",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 141,
							"name": "cancel",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 309,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 145,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 313,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 142,
							"name": "element",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 310,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "HTMLElement"
							}
						},
						{
							"id": 143,
							"name": "event",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 311,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "MouseEvent"
									},
									{
										"type": "reference",
										"name": "TouchEvent"
									}
								]
							}
						},
						{
							"id": 154,
							"name": "excludeSelectors",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 316,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 146,
							"name": "navigation",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 314,
									"character": 14
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 147,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 148,
											"name": "enable",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.ts",
													"line": 314,
													"character": 25
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 149,
											"name": "timeDelay",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.ts",
													"line": 314,
													"character": 46
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												148,
												149
											]
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 314,
											"character": 16
										}
									]
								}
							}
						},
						{
							"id": 150,
							"name": "scroll",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 315,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 151,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 152,
											"name": "enable",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.ts",
													"line": 315,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 153,
											"name": "scrollBy",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.ts",
													"line": 315,
													"character": 41
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												152,
												153
											]
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 315,
											"character": 12
										}
									]
								}
							}
						},
						{
							"id": 144,
							"name": "target",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 312,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "HTMLElement"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								141,
								145,
								142,
								143,
								154,
								146,
								150,
								144
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/types/schedule-types.ts",
							"line": 308,
							"character": 30
						}
					]
				},
				{
					"id": 287,
					"name": "EventClickEvent",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Defines the event click event for the Schedule component."
					},
					"children": [
						{
							"id": 289,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The event data."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 678,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 268,
								"name": "EventModel"
							}
						},
						{
							"id": 288,
							"name": "event",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The React mouse event object."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 673,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLElement"
									}
								],
								"name": "MouseEvent"
							}
						},
						{
							"id": 290,
							"name": "groupIndex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The group index if resources are used."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 683,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								289,
								288,
								290
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/types/schedule-types.ts",
							"line": 668,
							"character": 32
						}
					]
				},
				{
					"id": 268,
					"name": "EventModel",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Defines the event model for the Schedule component."
					},
					"indexSignature": [
						{
							"id": 278,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Additional custom fields for the event."
							},
							"parameters": [
								{
									"id": 279,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"children": [
						{
							"id": 275,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Description of the event."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 609,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 272,
							"name": "endTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "End time of the event."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 594,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							}
						},
						{
							"id": 269,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Unique identifier for the event."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 579,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 273,
							"name": "isAllDay",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates whether the event is an all-day event."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 599,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 277,
							"name": "isBlock",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates whether the event is a block event."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 619,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 276,
							"name": "isReadonly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates whether the event is read-only."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 614,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 274,
							"name": "location",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Location of the event."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 604,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 271,
							"name": "startTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Start time of the event."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 589,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							}
						},
						{
							"id": 270,
							"name": "subject",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Subject or title of the event."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 584,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								275,
								272,
								269,
								273,
								277,
								276,
								274,
								271,
								270
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/types/schedule-types.ts",
							"line": 574,
							"character": 27
						}
					]
				},
				{
					"id": 297,
					"name": "EventRenderedArgs",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Event rendered event arguments"
					},
					"children": [
						{
							"id": 299,
							"name": "element",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The HTML element of the rendered event."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 727,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "HTMLElement"
							}
						},
						{
							"id": 298,
							"name": "event",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The event data."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 722,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 268,
								"name": "EventModel"
							}
						},
						{
							"id": 300,
							"name": "viewType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The view in which the event is rendered."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 732,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 2,
								"name": "View"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								299,
								298,
								300
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/types/schedule-types.ts",
							"line": 717,
							"character": 34
						}
					]
				},
				{
					"id": 226,
					"name": "EventSettings",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Interface for the event settings."
					},
					"children": [
						{
							"id": 242,
							"name": "allowAdding",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Enables or disables event adding.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 452,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 243,
							"name": "allowDeleting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Enables or disables event deleting.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 459,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 241,
							"name": "allowEditing",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Enables or disables event editing.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 445,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 227,
							"name": "dataSource",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The data source for events.",
								"tags": [
									{
										"tag": "default",
										"text": "[]\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 420,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "intrinsic",
													"name": "unknown"
												}
											],
											"name": "Record"
										}
									},
									{
										"type": "reference",
										"name": "DataManager"
									}
								]
							}
						},
						{
							"id": 250,
							"name": "enableIndicator",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Shows a \"more\" indicator when multiple events occupy the same cell.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 488,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 249,
							"name": "enableMaxHeight",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Enables or disables the use of maximum height for events.\nWhen true, events occupy the full height of the cell without headers.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 481,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 228,
							"name": "fields",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The field mapping for event data.",
								"tags": [
									{
										"tag": "default",
										"text": "{ id: 'Id', subject: 'Subject', startTime: 'StartTime', endTime: 'EndTime', isAllDay: 'IsAllDay', location: 'Location', description: 'Description' }\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 427,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 229,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"indexSignature": [
										{
											"id": 239,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 240,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										}
									],
									"children": [
										{
											"id": 236,
											"name": "description",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.ts",
													"line": 434,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 233,
											"name": "endTime",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.ts",
													"line": 431,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 230,
											"name": "id",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.ts",
													"line": 428,
													"character": 10
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 234,
											"name": "isAllDay",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.ts",
													"line": 432,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 238,
											"name": "isBlock",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.ts",
													"line": 436,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 237,
											"name": "isReadonly",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.ts",
													"line": 435,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 235,
											"name": "location",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.ts",
													"line": 433,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 232,
											"name": "startTime",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.ts",
													"line": 430,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 231,
											"name": "subject",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.ts",
													"line": 429,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												236,
												233,
												230,
												234,
												238,
												237,
												235,
												232,
												231
											]
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 427,
											"character": 12
										}
									]
								}
							}
						},
						{
							"id": 251,
							"name": "query",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines a query to execute against the data source.",
								"text": "Allows you to apply a predefined `Query` object to the data source.\nThis is especially useful when working with remote data sources or when you need complex data operations.\n",
								"tags": [
									{
										"tag": "default",
										"text": "null\n\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 499,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "Query"
							}
						},
						{
							"id": 248,
							"name": "spannedEventPlacement",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines how to render events that span more than 24 hours.",
								"tags": [
									{
										"tag": "default",
										"text": "'AllDayRow'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 473,
									"character": 25
								}
							],
							"type": {
								"type": "reference",
								"id": 3,
								"name": "SpannedEventPlacement"
							}
						},
						{
							"id": 244,
							"name": "template",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Custom template for rendering events.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 466,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "React.ReactNode"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 245,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 246,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 247,
															"name": "props",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reference",
																"id": 268,
																"name": "EventModel"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "React.ReactNode"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.ts",
													"line": 466,
													"character": 32
												}
											]
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								242,
								243,
								241,
								227,
								250,
								249,
								228,
								251,
								248,
								244
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/types/schedule-types.ts",
							"line": 413,
							"character": 30
						}
					]
				},
				{
					"id": 207,
					"name": "MonthViewProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 217,
							"name": "cellHeaderTemplate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "It accepts either the string or HTMLElement as template design content and parse it appropriately\nbefore displaying it onto the month date cells.\nThis template is only applicable for month view day cells.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 389,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "ReactNode"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 218,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 219,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 220,
															"name": "props",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 221,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	},
																	"children": [
																		{
																			"id": 222,
																			"name": "date",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.ts",
																					"line": 389,
																					"character": 52
																				}
																			],
																			"type": {
																				"type": "reference",
																				"name": "Date"
																			}
																		},
																		{
																			"id": 223,
																			"name": "type",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.ts",
																					"line": 389,
																					"character": 64
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				222,
																				223
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "src/schedule/types/schedule-types.ts",
																			"line": 389,
																			"character": 45
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.ts",
													"line": 389,
													"character": 36
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 208,
							"name": "displayDate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Specifies the starting week date at an initial rendering of month view.\nThis property is only applicable for month view.\nIf this property value is not set, then the month view will be rendered from the first week of the month.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 363,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							}
						},
						{
							"id": 225,
							"name": "maxEventsPerRow",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Maximum number of events to display per row in month view.\nAdditional events will be shown as \"+n more\" text.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 407,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 209,
							"name": "numberOfWeeks",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "This property customizes the number of weeks that are shown in month view.\nBy default, it shows all weeks in the current month.\nUse `displayDate` property to customize the starting week of month.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 372,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 224,
							"name": "showTrailingAndLeadingDates",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Hide the previous and next month dates of a Schedule month view.\nWhen set to true, dates from previous and next months will be shown.\nWhen set to false, only the current month dates will be displayed.\nThis property is only applicable for Month view.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 399,
									"character": 31
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 210,
							"name": "weekDayTemplate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The template for rendering week day in this specific view.\nThis can be at in view level.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 380,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "ReactNode"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 211,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 212,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 213,
															"name": "props",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 214,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	},
																	"children": [
																		{
																			"id": 215,
																			"name": "day",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.ts",
																					"line": 380,
																					"character": 48
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 216,
																			"name": "type",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.ts",
																					"line": 380,
																					"character": 62
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				215,
																				216
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "src/schedule/types/schedule-types.ts",
																			"line": 380,
																			"character": 42
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.ts",
													"line": 380,
													"character": 33
												}
											]
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								217,
								208,
								225,
								209,
								224,
								210
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/types/schedule-types.ts",
							"line": 354,
							"character": 31
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 155,
							"name": "ViewSpecificProps"
						},
						{
							"type": "reference",
							"id": 3138,
							"name": "ViewSpecificProps"
						}
					]
				},
				{
					"id": 291,
					"name": "MoreClickEvent",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Defines the event click event for the Schedule component."
					},
					"children": [
						{
							"id": 292,
							"name": "date",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The date of the time slot."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 694,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							}
						},
						{
							"id": 293,
							"name": "element",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The element that was clicked."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 698,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "HTMLElement"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								292,
								293
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/types/schedule-types.ts",
							"line": 690,
							"character": 31
						}
					]
				},
				{
					"id": 6,
					"name": "ScheduleCommonProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 7,
							"name": "allowOverlap",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Determines whether events can overlap.\nWhen set to false, overlapping events will be prevented.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 19,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 25,
							"name": "cellTemplate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The template for rendering cells in this specific view.\nThis can be at both view and root level.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 105,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "ReactNode"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 26,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 27,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 28,
															"name": "props",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 29,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	},
																	"children": [
																		{
																			"id": 30,
																			"name": "date",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.ts",
																					"line": 105,
																					"character": 46
																				}
																			],
																			"type": {
																				"type": "reference",
																				"name": "Date"
																			}
																		},
																		{
																			"id": 32,
																			"name": "groupIndex",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true,
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.ts",
																					"line": 105,
																					"character": 78
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 31,
																			"name": "type",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.ts",
																					"line": 105,
																					"character": 58
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				30,
																				32,
																				31
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "src/schedule/types/schedule-types.ts",
																			"line": 105,
																			"character": 39
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.ts",
													"line": 105,
													"character": 30
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 11,
							"name": "dateFormat",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The date format for the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 47,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 18,
							"name": "dateHeaderTemplate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The template for rendering date header cells in this specific view.\nThis can be at both view and root level.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 97,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "ReactNode"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 19,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 20,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 21,
															"name": "props",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 22,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	},
																	"children": [
																		{
																			"id": 23,
																			"name": "date",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.ts",
																					"line": 97,
																					"character": 52
																				}
																			],
																			"type": {
																				"type": "reference",
																				"name": "Date"
																			}
																		},
																		{
																			"id": 24,
																			"name": "type",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.ts",
																					"line": 97,
																					"character": 64
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				23,
																				24
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "src/schedule/types/schedule-types.ts",
																			"line": 97,
																			"character": 45
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.ts",
													"line": 97,
													"character": 36
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 10,
							"name": "endHour",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The end hour of the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "'24:00'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 40,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15,
							"name": "firstDayOfWeek",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The first day of the week in the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "0\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 75,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 8,
							"name": "showQuickInfoPopup",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Toggles the visibility of the quick info popup.\nWhen set to false, the popup will not be displayed.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 26,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 17,
							"name": "showWeekNumber",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates whether to show week numbers in the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 89,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 12,
							"name": "showWeekend",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates whether to show weekends in the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 54,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 9,
							"name": "startHour",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The start hour of the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "'00:00'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 33,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 13,
							"name": "timeFormat",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The time format for the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 61,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14,
							"name": "timeScale",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The time scale configuration for the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "{ enable: true, interval: 60, slotCount: 2 }\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 68,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 252,
								"name": "TimeScaleModel"
							}
						},
						{
							"id": 16,
							"name": "workDays",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The work days of the week in the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "[1, 2, 3, 4, 5]\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 82,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								7,
								25,
								11,
								18,
								10,
								15,
								8,
								17,
								12,
								9,
								13,
								14,
								16
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/types/schedule-types.ts",
							"line": 11,
							"character": 36
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 33,
							"name": "ScheduleProps"
						},
						{
							"type": "reference",
							"id": 155,
							"name": "ViewSpecificProps"
						},
						{
							"type": "reference",
							"id": 3016,
							"name": "ScheduleProps"
						},
						{
							"type": "reference",
							"id": 3138,
							"name": "ViewSpecificProps"
						}
					]
				},
				{
					"id": 33,
					"name": "ScheduleProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 64,
							"name": "onCellClick",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback when a cell is clicked."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 226,
									"character": 15
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 65,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 66,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 67,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 280,
														"name": "CellClickEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 226,
											"character": 17
										}
									]
								}
							}
						},
						{
							"id": 68,
							"name": "onCellDoubleClick",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback when a cell is double-clicked."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 233,
									"character": 21
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 69,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 70,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 71,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 280,
														"name": "CellClickEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 233,
											"character": 23
										}
									]
								}
							}
						},
						{
							"id": 48,
							"name": "onCurrentViewChange",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback when the current view changes."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 198,
									"character": 23
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 49,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 50,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 51,
													"name": "view",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 2,
														"name": "View"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 198,
											"character": 25
										}
									]
								}
							}
						},
						{
							"id": 90,
							"name": "onDrag",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Triggers when an appointment is dragged."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 282,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 91,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 92,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 93,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 140,
														"name": "DragEventArgs"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 282,
											"character": 12
										}
									]
								}
							}
						},
						{
							"id": 86,
							"name": "onDragStart",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Triggers when an appointment is started to drag."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 275,
									"character": 15
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 87,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 88,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 89,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 140,
														"name": "DragEventArgs"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 275,
											"character": 17
										}
									]
								}
							}
						},
						{
							"id": 94,
							"name": "onDragStop",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Triggers when the dragging of appointment is stopped."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 289,
									"character": 14
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 95,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 96,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 97,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 140,
														"name": "DragEventArgs"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 289,
											"character": 16
										}
									]
								}
							}
						},
						{
							"id": 72,
							"name": "onEventClick",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback when an event is clicked."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 240,
									"character": 16
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 73,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 74,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 75,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 287,
														"name": "EventClickEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 240,
											"character": 18
										}
									]
								}
							}
						},
						{
							"id": 52,
							"name": "onEventCreate",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback when an event is created."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 205,
									"character": 17
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 53,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 54,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 55,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 301,
														"name": "ActionEventArgs"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 205,
											"character": 19
										}
									]
								}
							}
						},
						{
							"id": 60,
							"name": "onEventDelete",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback when an event is deleted."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 219,
									"character": 17
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 61,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 62,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 63,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 301,
														"name": "ActionEventArgs"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 219,
											"character": 19
										}
									]
								}
							}
						},
						{
							"id": 76,
							"name": "onEventDoubleClick",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback when an event is double-clicked."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 247,
									"character": 22
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 77,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 78,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 79,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 287,
														"name": "EventClickEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 247,
											"character": 24
										}
									]
								}
							}
						},
						{
							"id": 80,
							"name": "onEventRendered",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback triggered before an event is rendered."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 254,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 81,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 82,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 83,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 297,
														"name": "EventRenderedArgs"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 254,
											"character": 21
										}
									]
								}
							}
						},
						{
							"id": 56,
							"name": "onEventUpdate",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback when an event is updated."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 212,
									"character": 17
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 57,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 58,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 59,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 301,
														"name": "ActionEventArgs"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 212,
											"character": 19
										}
									]
								}
							}
						},
						{
							"id": 98,
							"name": "onMoreEventsClick",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback when more events are clicked."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 296,
									"character": 21
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 99,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 100,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 101,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 291,
														"name": "MoreClickEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 296,
											"character": 23
										}
									]
								}
							}
						},
						{
							"id": 44,
							"name": "onSelectedDateChange",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback when the selected date changes."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 191,
									"character": 24
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 45,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 46,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 47,
													"name": "date",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"name": "Date"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 191,
											"character": 26
										}
									]
								}
							}
						},
						{
							"id": 84,
							"name": "allowDragAndDrop",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Enables or disables drag and drop functionality.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 261,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 85,
							"name": "allowMultiDrag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Enables or disables drag and drop multiple functionalities.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 268,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 107,
							"name": "allowOverlap",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Determines whether events can overlap.\nWhen set to false, overlapping events will be prevented.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 19,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 7,
								"name": "ScheduleCommonProps.allowOverlap"
							}
						},
						{
							"id": 43,
							"name": "calendarMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "It allows the Scheduler to display in other calendar modes.\nBy default, Scheduler is displayed in Gregorian calendar mode.",
								"tags": [
									{
										"tag": "default",
										"text": "'Gregorian'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 184,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"id": 4,
								"name": "CalendarType"
							}
						},
						{
							"id": 125,
							"name": "cellTemplate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The template for rendering cells in this specific view.\nThis can be at both view and root level.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 105,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "ReactNode"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 126,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 127,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 128,
															"name": "props",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 129,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	},
																	"children": [
																		{
																			"id": 130,
																			"name": "date",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.ts",
																					"line": 105,
																					"character": 46
																				}
																			],
																			"type": {
																				"type": "reference",
																				"name": "Date"
																			}
																		},
																		{
																			"id": 132,
																			"name": "groupIndex",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true,
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.ts",
																					"line": 105,
																					"character": 78
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 131,
																			"name": "type",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.ts",
																					"line": 105,
																					"character": 58
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				130,
																				132,
																				131
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "src/schedule/types/schedule-types.ts",
																			"line": 105,
																			"character": 39
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.ts",
													"line": 105,
													"character": 30
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 25,
								"name": "ScheduleCommonProps.cellTemplate"
							}
						},
						{
							"id": 106,
							"name": "children",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The children components."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 305,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "React.ReactNode"
							}
						},
						{
							"id": 137,
							"name": "className",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 6,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 134,
								"name": "__type.className"
							}
						},
						{
							"id": 37,
							"name": "currentView",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The current view of the Schedule component.\nCan be either a View type ('Day', 'Week', 'WorkWeek') or a specific view name\nthat matches with a child view's name property.",
								"tags": [
									{
										"tag": "default",
										"text": "'Week'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 139,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 111,
							"name": "dateFormat",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The date format for the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 47,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 11,
								"name": "ScheduleCommonProps.dateFormat"
							}
						},
						{
							"id": 118,
							"name": "dateHeaderTemplate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The template for rendering date header cells in this specific view.\nThis can be at both view and root level.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 97,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "ReactNode"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 119,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 120,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 121,
															"name": "props",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 122,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	},
																	"children": [
																		{
																			"id": 123,
																			"name": "date",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.ts",
																					"line": 97,
																					"character": 52
																				}
																			],
																			"type": {
																				"type": "reference",
																				"name": "Date"
																			}
																		},
																		{
																			"id": 124,
																			"name": "type",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.ts",
																					"line": 97,
																					"character": 64
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				123,
																				124
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "src/schedule/types/schedule-types.ts",
																			"line": 97,
																			"character": 45
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.ts",
													"line": 97,
													"character": 36
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 18,
								"name": "ScheduleCommonProps.dateHeaderTemplate"
							}
						},
						{
							"id": 110,
							"name": "endHour",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The end hour of the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "'24:00'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 40,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 10,
								"name": "ScheduleCommonProps.endHour"
							}
						},
						{
							"id": 38,
							"name": "eventSettings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The event settings for the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "{ dataSource: [], fields: { id: 'Id', subject: 'Subject', startTime: 'StartTime', endTime: 'EndTime', isAllDay: 'IsAllDay', location: 'Location', description: 'Description' } }\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 146,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"id": 226,
								"name": "EventSettings"
							}
						},
						{
							"id": 115,
							"name": "firstDayOfWeek",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The first day of the week in the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "0\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 75,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 15,
								"name": "ScheduleCommonProps.firstDayOfWeek"
							}
						},
						{
							"id": 34,
							"name": "height",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The height of the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "'auto'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 116,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 138,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 7,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 135,
								"name": "__type.id"
							}
						},
						{
							"id": 102,
							"name": "onActionFailure",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Triggers when a scheduler action gets failed or interrupted and an error information will be returned."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 300,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 103,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 104,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 105,
													"name": "error",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.ts",
											"line": 300,
											"character": 21
										}
									]
								}
							}
						},
						{
							"id": 42,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "When set to true, makes the Schedule to render in a read only mode.\nNo CRUD actions will be allowed at this time.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 176,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 41,
							"name": "rowAutoHeight",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "When true, row height will automatically adjust to fit all events.\nThis takes precedence over maxEventsPerRow when both are set.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 168,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 36,
							"name": "selectedDate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The selected date in the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "new Date()\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 130,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							}
						},
						{
							"id": 108,
							"name": "showQuickInfoPopup",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Toggles the visibility of the quick info popup.\nWhen set to false, the popup will not be displayed.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 26,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 8,
								"name": "ScheduleCommonProps.showQuickInfoPopup"
							}
						},
						{
							"id": 40,
							"name": "showTimeIndicator",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates whether to show the current time indicator in the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 160,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 117,
							"name": "showWeekNumber",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates whether to show week numbers in the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 89,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 17,
								"name": "ScheduleCommonProps.showWeekNumber"
							}
						},
						{
							"id": 112,
							"name": "showWeekend",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates whether to show weekends in the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 54,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 12,
								"name": "ScheduleCommonProps.showWeekend"
							}
						},
						{
							"id": 109,
							"name": "startHour",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The start hour of the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "'00:00'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 33,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 9,
								"name": "ScheduleCommonProps.startHour"
							}
						},
						{
							"id": 139,
							"name": "tabIndex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 8,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 136,
								"name": "__type.tabIndex"
							}
						},
						{
							"id": 113,
							"name": "timeFormat",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The time format for the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 61,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 13,
								"name": "ScheduleCommonProps.timeFormat"
							}
						},
						{
							"id": 114,
							"name": "timeScale",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The time scale configuration for the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "{ enable: true, interval: 60, slotCount: 2 }\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 68,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 252,
								"name": "TimeScaleModel"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 14,
								"name": "ScheduleCommonProps.timeScale"
							}
						},
						{
							"id": 35,
							"name": "width",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The width of the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "'auto'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 123,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 116,
							"name": "workDays",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The work days of the week in the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "[1, 2, 3, 4, 5]\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 82,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 16,
								"name": "ScheduleCommonProps.workDays"
							}
						},
						{
							"id": 39,
							"name": "workHours",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The work hours configuration for the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "{ highlight: false, start: '09:00', end: '18:00' }\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 153,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 264,
								"name": "WorkHoursModel"
							}
						}
					],
					"groups": [
						{
							"title": "Events",
							"kind": 8388608,
							"children": [
								64,
								68,
								48,
								90,
								86,
								94,
								72,
								52,
								60,
								76,
								80,
								56,
								98,
								44
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								84,
								85,
								107,
								43,
								125,
								106,
								137,
								37,
								111,
								118,
								110,
								38,
								115,
								34,
								138,
								102,
								42,
								41,
								36,
								108,
								40,
								117,
								112,
								109,
								139,
								113,
								114,
								35,
								116,
								39
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/types/schedule-types.ts",
							"line": 109,
							"character": 30
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 6,
							"name": "ScheduleCommonProps"
						},
						{
							"type": "reflection",
							"declaration": {
								"id": 133,
								"name": "__type",
								"kind": 65536,
								"kindString": "Type literal",
								"flags": {
									"isExported": true
								},
								"children": [
									{
										"id": 134,
										"name": "className",
										"kind": 32,
										"kindString": "Variable",
										"flags": {
											"isExported": true,
											"isOptional": true
										},
										"sources": [
											{
												"fileName": "src/schedule/types/schedule-types.ts",
												"line": 6,
												"character": 13
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 135,
										"name": "id",
										"kind": 32,
										"kindString": "Variable",
										"flags": {
											"isExported": true,
											"isOptional": true
										},
										"sources": [
											{
												"fileName": "src/schedule/types/schedule-types.ts",
												"line": 7,
												"character": 6
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 136,
										"name": "tabIndex",
										"kind": 32,
										"kindString": "Variable",
										"flags": {
											"isExported": true,
											"isOptional": true
										},
										"sources": [
											{
												"fileName": "src/schedule/types/schedule-types.ts",
												"line": 8,
												"character": 12
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								],
								"groups": [
									{
										"title": "Variables",
										"kind": 32,
										"children": [
											134,
											135,
											136
										]
									}
								],
								"sources": [
									{
										"fileName": "src/schedule/types/schedule-types.ts",
										"line": 109,
										"character": 59
									}
								]
							}
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 915,
							"name": "ActiveViewProps"
						},
						{
							"type": "reference",
							"id": 1421,
							"name": "ISchedule"
						},
						{
							"type": "reference",
							"id": 2760,
							"name": "ActiveViewProps"
						}
					]
				},
				{
					"id": 252,
					"name": "TimeScaleModel",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Defines the time scale model for the Schedule component."
					},
					"children": [
						{
							"id": 253,
							"name": "enable",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Enables or disables the time scale.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 512,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 254,
							"name": "interval",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines the interval between time slots in minutes.",
								"tags": [
									{
										"tag": "default",
										"text": "60\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 519,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 256,
							"name": "majorSlotTemplate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Template for major time slots.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 533,
									"character": 21
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "ReactNode"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 257,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 258,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 259,
															"name": "props",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reference",
																"id": 294,
																"name": "TimeSlotTemplateProps"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.ts",
													"line": 533,
													"character": 35
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 260,
							"name": "minorSlotTemplate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Template for minor time slots.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 540,
									"character": 21
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "ReactNode"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 261,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 262,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 263,
															"name": "props",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reference",
																"id": 294,
																"name": "TimeSlotTemplateProps"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.ts",
													"line": 540,
													"character": 35
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 255,
							"name": "slotCount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines the number of minor slots per major slot.",
								"tags": [
									{
										"tag": "default",
										"text": "2\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 526,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								253,
								254,
								256,
								260,
								255
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/types/schedule-types.ts",
							"line": 505,
							"character": 31
						}
					]
				},
				{
					"id": 294,
					"name": "TimeSlotTemplateProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 295,
							"name": "date",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The date of the time slot."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 706,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							}
						},
						{
							"id": 296,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The type of the time slot."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 711,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								295,
								296
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/types/schedule-types.ts",
							"line": 701,
							"character": 38
						}
					]
				},
				{
					"id": 155,
					"name": "ViewSpecificProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 181,
							"name": "allowOverlap",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Determines whether events can overlap.\nWhen set to false, overlapping events will be prevented.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 19,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 7,
								"name": "ScheduleCommonProps.allowOverlap"
							}
						},
						{
							"id": 172,
							"name": "cellHeaderTemplate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "It accepts either the string or HTMLElement as template design content and parse it appropriately\nbefore displaying it onto the month date cells.\nThis template is only applicable for month view day cells.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 389,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "ReactNode"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 173,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 174,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 175,
															"name": "props",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 176,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	},
																	"children": [
																		{
																			"id": 177,
																			"name": "date",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.ts",
																					"line": 389,
																					"character": 52
																				}
																			],
																			"type": {
																				"type": "reference",
																				"name": "Date"
																			}
																		},
																		{
																			"id": 178,
																			"name": "type",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.ts",
																					"line": 389,
																					"character": 64
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				177,
																				178
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "src/schedule/types/schedule-types.ts",
																			"line": 389,
																			"character": 45
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.ts",
													"line": 389,
													"character": 36
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 172,
								"name": "MonthViewProps.cellHeaderTemplate"
							}
						},
						{
							"id": 199,
							"name": "cellTemplate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The template for rendering cells in this specific view.\nThis can be at both view and root level.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 105,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "ReactNode"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 200,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 201,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 202,
															"name": "props",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 203,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	},
																	"children": [
																		{
																			"id": 204,
																			"name": "date",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.ts",
																					"line": 105,
																					"character": 46
																				}
																			],
																			"type": {
																				"type": "reference",
																				"name": "Date"
																			}
																		},
																		{
																			"id": 206,
																			"name": "groupIndex",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true,
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.ts",
																					"line": 105,
																					"character": 78
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 205,
																			"name": "type",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.ts",
																					"line": 105,
																					"character": 58
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				204,
																				206,
																				205
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "src/schedule/types/schedule-types.ts",
																			"line": 105,
																			"character": 39
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.ts",
													"line": 105,
													"character": 30
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 25,
								"name": "ScheduleCommonProps.cellTemplate"
							}
						},
						{
							"id": 185,
							"name": "dateFormat",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The date format for the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 47,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 11,
								"name": "ScheduleCommonProps.dateFormat"
							}
						},
						{
							"id": 192,
							"name": "dateHeaderTemplate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The template for rendering date header cells in this specific view.\nThis can be at both view and root level.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 97,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "ReactNode"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 193,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 194,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 195,
															"name": "props",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 196,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	},
																	"children": [
																		{
																			"id": 197,
																			"name": "date",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.ts",
																					"line": 97,
																					"character": 52
																				}
																			],
																			"type": {
																				"type": "reference",
																				"name": "Date"
																			}
																		},
																		{
																			"id": 198,
																			"name": "type",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.ts",
																					"line": 97,
																					"character": 64
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				197,
																				198
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "src/schedule/types/schedule-types.ts",
																			"line": 97,
																			"character": 45
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.ts",
													"line": 97,
													"character": 36
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 18,
								"name": "ScheduleCommonProps.dateHeaderTemplate"
							}
						},
						{
							"id": 163,
							"name": "displayDate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Specifies the starting week date at an initial rendering of month view.\nThis property is only applicable for month view.\nIf this property value is not set, then the month view will be rendered from the first week of the month.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 363,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 163,
								"name": "MonthViewProps.displayDate"
							}
						},
						{
							"id": 158,
							"name": "displayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "When the same view is customized with different intervals, this property allows the user to set different display name\nfor those views. The displayName is used in the view switcher.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 343,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 184,
							"name": "endHour",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The end hour of the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "'24:00'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 40,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 10,
								"name": "ScheduleCommonProps.endHour"
							}
						},
						{
							"id": 159,
							"name": "eventTemplate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The template for rendering events in this specific view.\nThis is specifically a view-level prop, not at root level.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 351,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "ReactNode"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 160,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 161,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 162,
															"name": "props",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reference",
																"id": 268,
																"name": "EventModel"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.ts",
													"line": 351,
													"character": 31
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 189,
							"name": "firstDayOfWeek",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The first day of the week in the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "0\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 75,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 15,
								"name": "ScheduleCommonProps.firstDayOfWeek"
							}
						},
						{
							"id": 156,
							"name": "interval",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "It accepts the number value denoting to include the number of days, weeks, workweeks or months on the defined view type.",
								"tags": [
									{
										"tag": "default",
										"text": "1\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 327,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 180,
							"name": "maxEventsPerRow",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Maximum number of events to display per row in month view.\nAdditional events will be shown as \"+n more\" text.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 407,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 180,
								"name": "MonthViewProps.maxEventsPerRow"
							}
						},
						{
							"id": 157,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A unique name identifier for the view.\nUsed to identify and switch between views using currentView.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 335,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 164,
							"name": "numberOfWeeks",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "This property customizes the number of weeks that are shown in month view.\nBy default, it shows all weeks in the current month.\nUse `displayDate` property to customize the starting week of month.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 372,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 164,
								"name": "MonthViewProps.numberOfWeeks"
							}
						},
						{
							"id": 182,
							"name": "showQuickInfoPopup",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Toggles the visibility of the quick info popup.\nWhen set to false, the popup will not be displayed.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 26,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 8,
								"name": "ScheduleCommonProps.showQuickInfoPopup"
							}
						},
						{
							"id": 179,
							"name": "showTrailingAndLeadingDates",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Hide the previous and next month dates of a Schedule month view.\nWhen set to true, dates from previous and next months will be shown.\nWhen set to false, only the current month dates will be displayed.\nThis property is only applicable for Month view.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 399,
									"character": 31
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 179,
								"name": "MonthViewProps.showTrailingAndLeadingDates"
							}
						},
						{
							"id": 191,
							"name": "showWeekNumber",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates whether to show week numbers in the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 89,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 17,
								"name": "ScheduleCommonProps.showWeekNumber"
							}
						},
						{
							"id": 186,
							"name": "showWeekend",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates whether to show weekends in the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 54,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 12,
								"name": "ScheduleCommonProps.showWeekend"
							}
						},
						{
							"id": 183,
							"name": "startHour",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The start hour of the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "'00:00'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 33,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 9,
								"name": "ScheduleCommonProps.startHour"
							}
						},
						{
							"id": 187,
							"name": "timeFormat",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The time format for the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 61,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 13,
								"name": "ScheduleCommonProps.timeFormat"
							}
						},
						{
							"id": 188,
							"name": "timeScale",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The time scale configuration for the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "{ enable: true, interval: 60, slotCount: 2 }\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 68,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 252,
								"name": "TimeScaleModel"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 14,
								"name": "ScheduleCommonProps.timeScale"
							}
						},
						{
							"id": 165,
							"name": "weekDayTemplate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The template for rendering week day in this specific view.\nThis can be at in view level.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 380,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "ReactNode"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 166,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 167,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 168,
															"name": "props",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 169,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	},
																	"children": [
																		{
																			"id": 170,
																			"name": "day",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.ts",
																					"line": 380,
																					"character": 48
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 171,
																			"name": "type",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.ts",
																					"line": 380,
																					"character": 62
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				170,
																				171
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "src/schedule/types/schedule-types.ts",
																			"line": 380,
																			"character": 42
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.ts",
													"line": 380,
													"character": 33
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 165,
								"name": "MonthViewProps.weekDayTemplate"
							}
						},
						{
							"id": 190,
							"name": "workDays",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The work days of the week in the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "[1, 2, 3, 4, 5]\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 82,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 16,
								"name": "ScheduleCommonProps.workDays"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								181,
								172,
								199,
								185,
								192,
								163,
								158,
								184,
								159,
								189,
								156,
								180,
								157,
								164,
								182,
								179,
								191,
								186,
								183,
								187,
								188,
								165,
								190
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/types/schedule-types.ts",
							"line": 320,
							"character": 34
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 207,
							"name": "MonthViewProps"
						},
						{
							"type": "reference",
							"id": 6,
							"name": "ScheduleCommonProps"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 915,
							"name": "ActiveViewProps"
						},
						{
							"type": "reference",
							"id": 2760,
							"name": "ActiveViewProps"
						}
					]
				},
				{
					"id": 264,
					"name": "WorkHoursModel",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Defines the work hours model for the Schedule component."
					},
					"children": [
						{
							"id": 267,
							"name": "end",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines the end time of work hours.",
								"tags": [
									{
										"tag": "default",
										"text": "'18:00'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 567,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 265,
							"name": "highlight",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Enables or disables the highlighting of work hours.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 553,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 266,
							"name": "start",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines the start time of work hours.",
								"tags": [
									{
										"tag": "default",
										"text": "'09:00'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.ts",
									"line": 560,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								267,
								265,
								266
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/types/schedule-types.ts",
							"line": 546,
							"character": 31
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						301,
						280,
						140,
						287,
						268,
						297,
						226,
						207,
						291,
						6,
						33,
						252,
						294,
						155,
						264
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/types/schedule-types.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2988,
			"name": "\"schedule/types/schedule-types.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/types/schedule-types.d.ts",
			"children": [
				{
					"id": 3284,
					"name": "ActionEventArgs",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "An interface that holds options to control the actions of scheduler such as editing, adding, deleting."
					},
					"children": [
						{
							"id": 3288,
							"name": "addedRecords",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Returns the appropriate added data based on the action."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 649,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "any"
										}
									],
									"name": "Record"
								}
							}
						},
						{
							"id": 3287,
							"name": "cancel",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines the cancel option for the action taking place."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 647,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3289,
							"name": "changedRecords",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Returns the appropriate changed data based on the action."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 651,
									"character": 18
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "any"
										}
									],
									"name": "Record"
								}
							}
						},
						{
							"id": 3290,
							"name": "deletedRecords",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Returns the appropriate deleted data based on the action."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 653,
									"character": 18
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "any"
										}
									],
									"name": "Record"
								}
							}
						},
						{
							"id": 3286,
							"name": "event",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines the type of the event."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 645,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "Event"
							}
						},
						{
							"id": 3291,
							"name": "promise",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A Promise that, when provided, checks for overlapping events on the server.\nIf the promise resolves with overlapping events, the action (add/update) will be\ncanceled, and an alert will be displayed to the user.\nIf no overlapping events are found, the scheduler proceeds with the action."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 660,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise"
							}
						},
						{
							"id": 3285,
							"name": "requestType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns the request type of the current action."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 643,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3288,
								3287,
								3289,
								3290,
								3286,
								3291,
								3285
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/types/schedule-types.d.ts",
							"line": 641,
							"character": 32
						}
					]
				},
				{
					"id": 3263,
					"name": "CellClickEvent",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Defines the cell click event for the Schedule component."
					},
					"children": [
						{
							"id": 3268,
							"name": "element",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The element that was clicked."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 577,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "HTMLElement"
							}
						},
						{
							"id": 3266,
							"name": "endTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The end time of the cell."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 569,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							}
						},
						{
							"id": 3269,
							"name": "groupIndex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The group index if resources are used."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 581,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3267,
							"name": "isAllDay",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Indicates whether the cell is an all-day cell."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 573,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3264,
							"name": "nativeEvent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The native event object."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 561,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "MouseEvent"
							}
						},
						{
							"id": 3265,
							"name": "startTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The start time of the cell."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 565,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3268,
								3266,
								3269,
								3267,
								3264,
								3265
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/types/schedule-types.d.ts",
							"line": 557,
							"character": 31
						}
					]
				},
				{
					"id": 3123,
					"name": "DragEventArgs",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 3124,
							"name": "cancel",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 271,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3128,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 275,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 3125,
							"name": "element",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 272,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "HTMLElement"
							}
						},
						{
							"id": 3126,
							"name": "event",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 273,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "MouseEvent"
									},
									{
										"type": "reference",
										"name": "TouchEvent"
									}
								]
							}
						},
						{
							"id": 3137,
							"name": "excludeSelectors",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 284,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3129,
							"name": "navigation",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 276,
									"character": 14
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3130,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 3131,
											"name": "enable",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.d.ts",
													"line": 277,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 3132,
											"name": "timeDelay",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.d.ts",
													"line": 278,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3131,
												3132
											]
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.d.ts",
											"line": 276,
											"character": 16
										}
									]
								}
							}
						},
						{
							"id": 3133,
							"name": "scroll",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 280,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3134,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 3135,
											"name": "enable",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.d.ts",
													"line": 281,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 3136,
											"name": "scrollBy",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.d.ts",
													"line": 282,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3135,
												3136
											]
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.d.ts",
											"line": 280,
											"character": 12
										}
									]
								}
							}
						},
						{
							"id": 3127,
							"name": "target",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 274,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "HTMLElement"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3124,
								3128,
								3125,
								3126,
								3137,
								3129,
								3133,
								3127
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/types/schedule-types.d.ts",
							"line": 270,
							"character": 30
						}
					]
				},
				{
					"id": 3270,
					"name": "EventClickEvent",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Defines the event click event for the Schedule component."
					},
					"children": [
						{
							"id": 3272,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The event data."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 594,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 268,
								"name": "EventModel"
							}
						},
						{
							"id": 3271,
							"name": "event",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The React mouse event object."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 590,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLElement"
									}
								],
								"name": "MouseEvent"
							}
						},
						{
							"id": 3273,
							"name": "groupIndex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The group index if resources are used."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 598,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3272,
								3271,
								3273
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/types/schedule-types.d.ts",
							"line": 586,
							"character": 32
						}
					]
				},
				{
					"id": 3251,
					"name": "EventModel",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Defines the event model for the Schedule component."
					},
					"indexSignature": [
						{
							"id": 3261,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Additional custom fields for the event."
							},
							"parameters": [
								{
									"id": 3262,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"children": [
						{
							"id": 3258,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Description of the event."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 540,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3255,
							"name": "endTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "End time of the event."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 528,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							}
						},
						{
							"id": 3252,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Unique identifier for the event."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 516,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 3256,
							"name": "isAllDay",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates whether the event is an all-day event."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 532,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3260,
							"name": "isBlock",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates whether the event is a block event."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 548,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3259,
							"name": "isReadonly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates whether the event is read-only."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 544,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3257,
							"name": "location",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Location of the event."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 536,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3254,
							"name": "startTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Start time of the event."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 524,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							}
						},
						{
							"id": 3253,
							"name": "subject",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Subject or title of the event."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 520,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3258,
								3255,
								3252,
								3256,
								3260,
								3259,
								3257,
								3254,
								3253
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/types/schedule-types.d.ts",
							"line": 512,
							"character": 27
						}
					]
				},
				{
					"id": 3280,
					"name": "EventRenderedArgs",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Event rendered event arguments"
					},
					"children": [
						{
							"id": 3282,
							"name": "element",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The HTML element of the rendered event."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 634,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "HTMLElement"
							}
						},
						{
							"id": 3281,
							"name": "event",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The event data."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 630,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 268,
								"name": "EventModel"
							}
						},
						{
							"id": 3283,
							"name": "viewType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The view in which the event is rendered."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 638,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 2,
								"name": "View"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3282,
								3281,
								3283
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/types/schedule-types.d.ts",
							"line": 626,
							"character": 34
						}
					]
				},
				{
					"id": 3209,
					"name": "EventSettings",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Interface for the event settings."
					},
					"children": [
						{
							"id": 3225,
							"name": "allowAdding",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Enables or disables event adding.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 408,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3226,
							"name": "allowDeleting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Enables or disables event deleting.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 414,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3224,
							"name": "allowEditing",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Enables or disables event editing.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 402,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3210,
							"name": "dataSource",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The data source for events.",
								"tags": [
									{
										"tag": "default",
										"text": "[]\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 379,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "intrinsic",
													"name": "unknown"
												}
											],
											"name": "Record"
										}
									},
									{
										"type": "reference",
										"name": "DataManager"
									}
								]
							}
						},
						{
							"id": 3233,
							"name": "enableIndicator",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Shows a \"more\" indicator when multiple events occupy the same cell.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 439,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3232,
							"name": "enableMaxHeight",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Enables or disables the use of maximum height for events.\nWhen true, events occupy the full height of the cell without headers.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 433,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3211,
							"name": "fields",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The field mapping for event data.",
								"tags": [
									{
										"tag": "default",
										"text": "{ id: 'Id', subject: 'Subject', startTime: 'StartTime', endTime: 'EndTime', isAllDay: 'IsAllDay', location: 'Location', description: 'Description' }\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 385,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3212,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"indexSignature": [
										{
											"id": 3222,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 3223,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										}
									],
									"children": [
										{
											"id": 3219,
											"name": "description",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.d.ts",
													"line": 392,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3216,
											"name": "endTime",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.d.ts",
													"line": 389,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3213,
											"name": "id",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.d.ts",
													"line": 386,
													"character": 10
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3217,
											"name": "isAllDay",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.d.ts",
													"line": 390,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3221,
											"name": "isBlock",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.d.ts",
													"line": 394,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3220,
											"name": "isReadonly",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.d.ts",
													"line": 393,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3218,
											"name": "location",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.d.ts",
													"line": 391,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3215,
											"name": "startTime",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.d.ts",
													"line": 388,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3214,
											"name": "subject",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.d.ts",
													"line": 387,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3219,
												3216,
												3213,
												3217,
												3221,
												3220,
												3218,
												3215,
												3214
											]
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.d.ts",
											"line": 385,
											"character": 12
										}
									]
								}
							}
						},
						{
							"id": 3234,
							"name": "query",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines a query to execute against the data source.",
								"text": "Allows you to apply a predefined `Query` object to the data source.\nThis is especially useful when working with remote data sources or when you need complex data operations.\n",
								"tags": [
									{
										"tag": "default",
										"text": "null\n\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 449,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "Query"
							}
						},
						{
							"id": 3231,
							"name": "spannedEventPlacement",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines how to render events that span more than 24 hours.",
								"tags": [
									{
										"tag": "default",
										"text": "'AllDayRow'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 426,
									"character": 25
								}
							],
							"type": {
								"type": "reference",
								"id": 3,
								"name": "SpannedEventPlacement"
							}
						},
						{
							"id": 3227,
							"name": "template",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Custom template for rendering events.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 420,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "React.ReactNode"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3228,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 3229,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 3230,
															"name": "props",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reference",
																"id": 268,
																"name": "EventModel"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "React.ReactNode"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.d.ts",
													"line": 420,
													"character": 32
												}
											]
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3225,
								3226,
								3224,
								3210,
								3233,
								3232,
								3211,
								3234,
								3231,
								3227
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/types/schedule-types.d.ts",
							"line": 373,
							"character": 30
						}
					]
				},
				{
					"id": 3190,
					"name": "MonthViewProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 3200,
							"name": "cellHeaderTemplate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "It accepts either the string or HTMLElement as template design content and parse it appropriately\nbefore displaying it onto the month date cells.\nThis template is only applicable for month view day cells.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 349,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "ReactNode"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3201,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 3202,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 3203,
															"name": "props",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 3204,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	},
																	"children": [
																		{
																			"id": 3205,
																			"name": "date",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.d.ts",
																					"line": 350,
																					"character": 12
																				}
																			],
																			"type": {
																				"type": "reference",
																				"name": "Date"
																			}
																		},
																		{
																			"id": 3206,
																			"name": "type",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.d.ts",
																					"line": 351,
																					"character": 12
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				3205,
																				3206
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "src/schedule/types/schedule-types.d.ts",
																			"line": 349,
																			"character": 45
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.d.ts",
													"line": 349,
													"character": 36
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 3191,
							"name": "displayDate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Specifies the starting week date at an initial rendering of month view.\nThis property is only applicable for month view.\nIf this property value is not set, then the month view will be rendered from the first week of the month.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 323,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							}
						},
						{
							"id": 3208,
							"name": "maxEventsPerRow",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Maximum number of events to display per row in month view.\nAdditional events will be shown as \"+n more\" text.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 368,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3192,
							"name": "numberOfWeeks",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "This property customizes the number of weeks that are shown in month view.\nBy default, it shows all weeks in the current month.\nUse `displayDate` property to customize the starting week of month.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 331,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3207,
							"name": "showTrailingAndLeadingDates",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Hide the previous and next month dates of a Schedule month view.\nWhen set to true, dates from previous and next months will be shown.\nWhen set to false, only the current month dates will be displayed.\nThis property is only applicable for Month view.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 361,
									"character": 31
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3193,
							"name": "weekDayTemplate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The template for rendering week day in this specific view.\nThis can be at in view level.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 338,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "ReactNode"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3194,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 3195,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 3196,
															"name": "props",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 3197,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	},
																	"children": [
																		{
																			"id": 3198,
																			"name": "day",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.d.ts",
																					"line": 339,
																					"character": 11
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 3199,
																			"name": "type",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.d.ts",
																					"line": 340,
																					"character": 12
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				3198,
																				3199
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "src/schedule/types/schedule-types.d.ts",
																			"line": 338,
																			"character": 42
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.d.ts",
													"line": 338,
													"character": 33
												}
											]
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3200,
								3191,
								3208,
								3192,
								3207,
								3193
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/types/schedule-types.d.ts",
							"line": 315,
							"character": 31
						}
					]
				},
				{
					"id": 3274,
					"name": "MoreClickEvent",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Defines the event click event for the Schedule component."
					},
					"children": [
						{
							"id": 3275,
							"name": "date",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The date of the time slot."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 607,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							}
						},
						{
							"id": 3276,
							"name": "element",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The element that was clicked."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 611,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "HTMLElement"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3275,
								3276
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/types/schedule-types.d.ts",
							"line": 603,
							"character": 31
						}
					]
				},
				{
					"id": 2989,
					"name": "ScheduleCommonProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 2990,
							"name": "allowOverlap",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Determines whether events can overlap.\nWhen set to false, overlapping events will be prevented.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 16,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3008,
							"name": "cellTemplate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The template for rendering cells in this specific view.\nThis can be at both view and root level.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 93,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "ReactNode"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3009,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 3010,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 3011,
															"name": "props",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 3012,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	},
																	"children": [
																		{
																			"id": 3013,
																			"name": "date",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.d.ts",
																					"line": 94,
																					"character": 12
																				}
																			],
																			"type": {
																				"type": "reference",
																				"name": "Date"
																			}
																		},
																		{
																			"id": 3015,
																			"name": "groupIndex",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true,
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.d.ts",
																					"line": 96,
																					"character": 18
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 3014,
																			"name": "type",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.d.ts",
																					"line": 95,
																					"character": 12
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				3013,
																				3015,
																				3014
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "src/schedule/types/schedule-types.d.ts",
																			"line": 93,
																			"character": 39
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.d.ts",
													"line": 93,
													"character": 30
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 2994,
							"name": "dateFormat",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The date format for the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 40,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3001,
							"name": "dateHeaderTemplate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The template for rendering date header cells in this specific view.\nThis can be at both view and root level.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 83,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "ReactNode"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3002,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 3003,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 3004,
															"name": "props",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 3005,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	},
																	"children": [
																		{
																			"id": 3006,
																			"name": "date",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.d.ts",
																					"line": 84,
																					"character": 12
																				}
																			],
																			"type": {
																				"type": "reference",
																				"name": "Date"
																			}
																		},
																		{
																			"id": 3007,
																			"name": "type",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.d.ts",
																					"line": 85,
																					"character": 12
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				3006,
																				3007
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "src/schedule/types/schedule-types.d.ts",
																			"line": 83,
																			"character": 45
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.d.ts",
													"line": 83,
													"character": 36
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 2993,
							"name": "endHour",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The end hour of the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "'24:00'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 34,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2998,
							"name": "firstDayOfWeek",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The first day of the week in the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "0\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 64,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2991,
							"name": "showQuickInfoPopup",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Toggles the visibility of the quick info popup.\nWhen set to false, the popup will not be displayed.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 22,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3000,
							"name": "showWeekNumber",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates whether to show week numbers in the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 76,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2995,
							"name": "showWeekend",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates whether to show weekends in the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 46,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2992,
							"name": "startHour",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The start hour of the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "'00:00'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 28,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2996,
							"name": "timeFormat",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The time format for the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 52,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2997,
							"name": "timeScale",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The time scale configuration for the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "{ enable: true, interval: 60, slotCount: 2 }\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 58,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 252,
								"name": "TimeScaleModel"
							}
						},
						{
							"id": 2999,
							"name": "workDays",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The work days of the week in the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "[1, 2, 3, 4, 5]\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 70,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2990,
								3008,
								2994,
								3001,
								2993,
								2998,
								2991,
								3000,
								2995,
								2992,
								2996,
								2997,
								2999
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/types/schedule-types.d.ts",
							"line": 9,
							"character": 36
						}
					]
				},
				{
					"id": 3016,
					"name": "ScheduleProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 3047,
							"name": "onCellClick",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback when a cell is clicked."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 200,
									"character": 15
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3048,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 3049,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 3050,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 280,
														"name": "CellClickEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.d.ts",
											"line": 200,
											"character": 17
										}
									]
								}
							}
						},
						{
							"id": 3051,
							"name": "onCellDoubleClick",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback when a cell is double-clicked."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 206,
									"character": 21
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3052,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 3053,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 3054,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 280,
														"name": "CellClickEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.d.ts",
											"line": 206,
											"character": 23
										}
									]
								}
							}
						},
						{
							"id": 3031,
							"name": "onCurrentViewChange",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback when the current view changes."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 176,
									"character": 23
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3032,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 3033,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 3034,
													"name": "view",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 2,
														"name": "View"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.d.ts",
											"line": 176,
											"character": 25
										}
									]
								}
							}
						},
						{
							"id": 3073,
							"name": "onDrag",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Triggers when an appointment is dragged."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 248,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3074,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 3075,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 3076,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 140,
														"name": "DragEventArgs"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.d.ts",
											"line": 248,
											"character": 12
										}
									]
								}
							}
						},
						{
							"id": 3069,
							"name": "onDragStart",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Triggers when an appointment is started to drag."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 242,
									"character": 15
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3070,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 3071,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 3072,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 140,
														"name": "DragEventArgs"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.d.ts",
											"line": 242,
											"character": 17
										}
									]
								}
							}
						},
						{
							"id": 3077,
							"name": "onDragStop",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Triggers when the dragging of appointment is stopped."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 254,
									"character": 14
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3078,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 3079,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 3080,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 140,
														"name": "DragEventArgs"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.d.ts",
											"line": 254,
											"character": 16
										}
									]
								}
							}
						},
						{
							"id": 3055,
							"name": "onEventClick",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback when an event is clicked."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 212,
									"character": 16
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3056,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 3057,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 3058,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 287,
														"name": "EventClickEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.d.ts",
											"line": 212,
											"character": 18
										}
									]
								}
							}
						},
						{
							"id": 3035,
							"name": "onEventCreate",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback when an event is created."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 182,
									"character": 17
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3036,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 3037,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 3038,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 301,
														"name": "ActionEventArgs"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.d.ts",
											"line": 182,
											"character": 19
										}
									]
								}
							}
						},
						{
							"id": 3043,
							"name": "onEventDelete",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback when an event is deleted."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 194,
									"character": 17
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3044,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 3045,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 3046,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 301,
														"name": "ActionEventArgs"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.d.ts",
											"line": 194,
											"character": 19
										}
									]
								}
							}
						},
						{
							"id": 3059,
							"name": "onEventDoubleClick",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback when an event is double-clicked."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 218,
									"character": 22
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3060,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 3061,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 3062,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 287,
														"name": "EventClickEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.d.ts",
											"line": 218,
											"character": 24
										}
									]
								}
							}
						},
						{
							"id": 3063,
							"name": "onEventRendered",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback triggered before an event is rendered."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 224,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3064,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 3065,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 3066,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 297,
														"name": "EventRenderedArgs"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.d.ts",
											"line": 224,
											"character": 21
										}
									]
								}
							}
						},
						{
							"id": 3039,
							"name": "onEventUpdate",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback when an event is updated."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 188,
									"character": 17
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3040,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 3041,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 3042,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 301,
														"name": "ActionEventArgs"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.d.ts",
											"line": 188,
											"character": 19
										}
									]
								}
							}
						},
						{
							"id": 3081,
							"name": "onMoreEventsClick",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback when more events are clicked."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 260,
									"character": 21
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3082,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 3083,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 3084,
													"name": "args",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 291,
														"name": "MoreClickEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.d.ts",
											"line": 260,
											"character": 23
										}
									]
								}
							}
						},
						{
							"id": 3027,
							"name": "onSelectedDateChange",
							"kind": 8388608,
							"kindString": "Event",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Callback when the selected date changes."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 170,
									"character": 24
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3028,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 3029,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 3030,
													"name": "date",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"name": "Date"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.d.ts",
											"line": 170,
											"character": 26
										}
									]
								}
							}
						},
						{
							"id": 3067,
							"name": "allowDragAndDrop",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Enables or disables drag and drop functionality.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 230,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3068,
							"name": "allowMultiDrag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Enables or disables drag and drop multiple functionalities.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 236,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3090,
							"name": "allowOverlap",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Determines whether events can overlap.\nWhen set to false, overlapping events will be prevented.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 16,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 7,
								"name": "ScheduleCommonProps.allowOverlap"
							}
						},
						{
							"id": 3026,
							"name": "calendarMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "It allows the Scheduler to display in other calendar modes.\nBy default, Scheduler is displayed in Gregorian calendar mode.",
								"tags": [
									{
										"tag": "default",
										"text": "'Gregorian'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 164,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"id": 4,
								"name": "CalendarType"
							}
						},
						{
							"id": 3108,
							"name": "cellTemplate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The template for rendering cells in this specific view.\nThis can be at both view and root level.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 93,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "ReactNode"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3109,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 3110,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 3111,
															"name": "props",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 3112,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	},
																	"children": [
																		{
																			"id": 3113,
																			"name": "date",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.d.ts",
																					"line": 94,
																					"character": 12
																				}
																			],
																			"type": {
																				"type": "reference",
																				"name": "Date"
																			}
																		},
																		{
																			"id": 3115,
																			"name": "groupIndex",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true,
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.d.ts",
																					"line": 96,
																					"character": 18
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 3114,
																			"name": "type",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.d.ts",
																					"line": 95,
																					"character": 12
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				3113,
																				3115,
																				3114
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "src/schedule/types/schedule-types.d.ts",
																			"line": 93,
																			"character": 39
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.d.ts",
													"line": 93,
													"character": 30
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 25,
								"name": "ScheduleCommonProps.cellTemplate"
							}
						},
						{
							"id": 3089,
							"name": "children",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The children components."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 268,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "React.ReactNode"
							}
						},
						{
							"id": 3120,
							"name": "className",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 5,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 134,
								"name": "__type.className"
							}
						},
						{
							"id": 3020,
							"name": "currentView",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The current view of the Schedule component.\nCan be either a View type ('Day', 'Week', 'WorkWeek') or a specific view name\nthat matches with a child view's name property.",
								"tags": [
									{
										"tag": "default",
										"text": "'Week'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 125,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3094,
							"name": "dateFormat",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The date format for the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 40,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 11,
								"name": "ScheduleCommonProps.dateFormat"
							}
						},
						{
							"id": 3101,
							"name": "dateHeaderTemplate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The template for rendering date header cells in this specific view.\nThis can be at both view and root level.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 83,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "ReactNode"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3102,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 3103,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 3104,
															"name": "props",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 3105,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	},
																	"children": [
																		{
																			"id": 3106,
																			"name": "date",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.d.ts",
																					"line": 84,
																					"character": 12
																				}
																			],
																			"type": {
																				"type": "reference",
																				"name": "Date"
																			}
																		},
																		{
																			"id": 3107,
																			"name": "type",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.d.ts",
																					"line": 85,
																					"character": 12
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				3106,
																				3107
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "src/schedule/types/schedule-types.d.ts",
																			"line": 83,
																			"character": 45
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.d.ts",
													"line": 83,
													"character": 36
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 18,
								"name": "ScheduleCommonProps.dateHeaderTemplate"
							}
						},
						{
							"id": 3093,
							"name": "endHour",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The end hour of the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "'24:00'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 34,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 10,
								"name": "ScheduleCommonProps.endHour"
							}
						},
						{
							"id": 3021,
							"name": "eventSettings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The event settings for the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "{ dataSource: [], fields: { id: 'Id', subject: 'Subject', startTime: 'StartTime', endTime: 'EndTime', isAllDay: 'IsAllDay', location: 'Location', description: 'Description' } }\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 131,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"id": 226,
								"name": "EventSettings"
							}
						},
						{
							"id": 3098,
							"name": "firstDayOfWeek",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The first day of the week in the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "0\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 64,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 15,
								"name": "ScheduleCommonProps.firstDayOfWeek"
							}
						},
						{
							"id": 3017,
							"name": "height",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The height of the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "'auto'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 105,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3121,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 6,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 135,
								"name": "__type.id"
							}
						},
						{
							"id": 3085,
							"name": "onActionFailure",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Triggers when a scheduler action gets failed or interrupted and an error information will be returned."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 264,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3086,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 3087,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 3088,
													"name": "error",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/types/schedule-types.d.ts",
											"line": 264,
											"character": 21
										}
									]
								}
							}
						},
						{
							"id": 3025,
							"name": "readOnly",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "When set to true, makes the Schedule to render in a read only mode.\nNo CRUD actions will be allowed at this time.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 157,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3024,
							"name": "rowAutoHeight",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "When true, row height will automatically adjust to fit all events.\nThis takes precedence over maxEventsPerRow when both are set.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 150,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3019,
							"name": "selectedDate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The selected date in the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "new Date()\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 117,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							}
						},
						{
							"id": 3091,
							"name": "showQuickInfoPopup",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Toggles the visibility of the quick info popup.\nWhen set to false, the popup will not be displayed.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 22,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 8,
								"name": "ScheduleCommonProps.showQuickInfoPopup"
							}
						},
						{
							"id": 3023,
							"name": "showTimeIndicator",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates whether to show the current time indicator in the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 143,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3100,
							"name": "showWeekNumber",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates whether to show week numbers in the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 76,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 17,
								"name": "ScheduleCommonProps.showWeekNumber"
							}
						},
						{
							"id": 3095,
							"name": "showWeekend",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates whether to show weekends in the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 46,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 12,
								"name": "ScheduleCommonProps.showWeekend"
							}
						},
						{
							"id": 3092,
							"name": "startHour",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The start hour of the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "'00:00'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 28,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 9,
								"name": "ScheduleCommonProps.startHour"
							}
						},
						{
							"id": 3122,
							"name": "tabIndex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 7,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 136,
								"name": "__type.tabIndex"
							}
						},
						{
							"id": 3096,
							"name": "timeFormat",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The time format for the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 52,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 13,
								"name": "ScheduleCommonProps.timeFormat"
							}
						},
						{
							"id": 3097,
							"name": "timeScale",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The time scale configuration for the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "{ enable: true, interval: 60, slotCount: 2 }\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 58,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 252,
								"name": "TimeScaleModel"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 14,
								"name": "ScheduleCommonProps.timeScale"
							}
						},
						{
							"id": 3018,
							"name": "width",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The width of the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "'auto'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 111,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3099,
							"name": "workDays",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The work days of the week in the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "[1, 2, 3, 4, 5]\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 70,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 16,
								"name": "ScheduleCommonProps.workDays"
							}
						},
						{
							"id": 3022,
							"name": "workHours",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The work hours configuration for the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "{ highlight: false, start: '09:00', end: '18:00' }\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 137,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 264,
								"name": "WorkHoursModel"
							}
						}
					],
					"groups": [
						{
							"title": "Events",
							"kind": 8388608,
							"children": [
								3047,
								3051,
								3031,
								3073,
								3069,
								3077,
								3055,
								3035,
								3043,
								3059,
								3063,
								3039,
								3081,
								3027
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3067,
								3068,
								3090,
								3026,
								3108,
								3089,
								3120,
								3020,
								3094,
								3101,
								3093,
								3021,
								3098,
								3017,
								3121,
								3085,
								3025,
								3024,
								3019,
								3091,
								3023,
								3100,
								3095,
								3092,
								3122,
								3096,
								3097,
								3018,
								3099,
								3022
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/types/schedule-types.d.ts",
							"line": 99,
							"character": 30
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 6,
							"name": "ScheduleCommonProps"
						},
						{
							"type": "reflection",
							"declaration": {
								"id": 3116,
								"name": "__type",
								"kind": 65536,
								"kindString": "Type literal",
								"flags": {
									"isExported": true
								},
								"children": [
									{
										"id": 3117,
										"name": "className",
										"kind": 32,
										"kindString": "Variable",
										"flags": {
											"isExported": true,
											"isOptional": true
										},
										"sources": [
											{
												"fileName": "src/schedule/types/schedule-types.d.ts",
												"line": 5,
												"character": 13
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 3118,
										"name": "id",
										"kind": 32,
										"kindString": "Variable",
										"flags": {
											"isExported": true,
											"isOptional": true
										},
										"sources": [
											{
												"fileName": "src/schedule/types/schedule-types.d.ts",
												"line": 6,
												"character": 6
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 3119,
										"name": "tabIndex",
										"kind": 32,
										"kindString": "Variable",
										"flags": {
											"isExported": true,
											"isOptional": true
										},
										"sources": [
											{
												"fileName": "src/schedule/types/schedule-types.d.ts",
												"line": 7,
												"character": 12
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								],
								"groups": [
									{
										"title": "Variables",
										"kind": 32,
										"children": [
											3117,
											3118,
											3119
										]
									}
								],
								"sources": [
									{
										"fileName": "src/schedule/types/schedule-types.d.ts",
										"line": 99,
										"character": 59
									}
								]
							}
						}
					]
				},
				{
					"id": 3235,
					"name": "TimeScaleModel",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Defines the time scale model for the Schedule component."
					},
					"children": [
						{
							"id": 3236,
							"name": "enable",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Enables or disables the time scale.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 460,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3237,
							"name": "interval",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines the interval between time slots in minutes.",
								"tags": [
									{
										"tag": "default",
										"text": "60\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 466,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3239,
							"name": "majorSlotTemplate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Template for major time slots.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 478,
									"character": 21
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "ReactNode"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3240,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 3241,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 3242,
															"name": "props",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reference",
																"id": 294,
																"name": "TimeSlotTemplateProps"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.d.ts",
													"line": 478,
													"character": 35
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 3243,
							"name": "minorSlotTemplate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Template for minor time slots.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 484,
									"character": 21
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "ReactNode"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3244,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 3245,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 3246,
															"name": "props",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reference",
																"id": 294,
																"name": "TimeSlotTemplateProps"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.d.ts",
													"line": 484,
													"character": 35
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 3238,
							"name": "slotCount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines the number of minor slots per major slot.",
								"tags": [
									{
										"tag": "default",
										"text": "2\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 472,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3236,
								3237,
								3239,
								3243,
								3238
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/types/schedule-types.d.ts",
							"line": 454,
							"character": 31
						}
					]
				},
				{
					"id": 3277,
					"name": "TimeSlotTemplateProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 3278,
							"name": "date",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The date of the time slot."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 617,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							}
						},
						{
							"id": 3279,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The type of the time slot."
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 621,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3278,
								3279
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/types/schedule-types.d.ts",
							"line": 613,
							"character": 38
						}
					]
				},
				{
					"id": 3138,
					"name": "ViewSpecificProps",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 3164,
							"name": "allowOverlap",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Determines whether events can overlap.\nWhen set to false, overlapping events will be prevented.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 16,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 7,
								"name": "ScheduleCommonProps.allowOverlap"
							}
						},
						{
							"id": 3155,
							"name": "cellHeaderTemplate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "It accepts either the string or HTMLElement as template design content and parse it appropriately\nbefore displaying it onto the month date cells.\nThis template is only applicable for month view day cells.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 349,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "ReactNode"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3156,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 3157,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 3158,
															"name": "props",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 3159,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	},
																	"children": [
																		{
																			"id": 3160,
																			"name": "date",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.d.ts",
																					"line": 350,
																					"character": 12
																				}
																			],
																			"type": {
																				"type": "reference",
																				"name": "Date"
																			}
																		},
																		{
																			"id": 3161,
																			"name": "type",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.d.ts",
																					"line": 351,
																					"character": 12
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				3160,
																				3161
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "src/schedule/types/schedule-types.d.ts",
																			"line": 349,
																			"character": 45
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.d.ts",
													"line": 349,
													"character": 36
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 172,
								"name": "MonthViewProps.cellHeaderTemplate"
							}
						},
						{
							"id": 3182,
							"name": "cellTemplate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The template for rendering cells in this specific view.\nThis can be at both view and root level.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 93,
									"character": 16
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "ReactNode"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3183,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 3184,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 3185,
															"name": "props",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 3186,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	},
																	"children": [
																		{
																			"id": 3187,
																			"name": "date",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.d.ts",
																					"line": 94,
																					"character": 12
																				}
																			],
																			"type": {
																				"type": "reference",
																				"name": "Date"
																			}
																		},
																		{
																			"id": 3189,
																			"name": "groupIndex",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true,
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.d.ts",
																					"line": 96,
																					"character": 18
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 3188,
																			"name": "type",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.d.ts",
																					"line": 95,
																					"character": 12
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				3187,
																				3189,
																				3188
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "src/schedule/types/schedule-types.d.ts",
																			"line": 93,
																			"character": 39
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.d.ts",
													"line": 93,
													"character": 30
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 25,
								"name": "ScheduleCommonProps.cellTemplate"
							}
						},
						{
							"id": 3168,
							"name": "dateFormat",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The date format for the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 40,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 11,
								"name": "ScheduleCommonProps.dateFormat"
							}
						},
						{
							"id": 3175,
							"name": "dateHeaderTemplate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The template for rendering date header cells in this specific view.\nThis can be at both view and root level.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 83,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "ReactNode"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3176,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 3177,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 3178,
															"name": "props",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 3179,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	},
																	"children": [
																		{
																			"id": 3180,
																			"name": "date",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.d.ts",
																					"line": 84,
																					"character": 12
																				}
																			],
																			"type": {
																				"type": "reference",
																				"name": "Date"
																			}
																		},
																		{
																			"id": 3181,
																			"name": "type",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.d.ts",
																					"line": 85,
																					"character": 12
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				3180,
																				3181
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "src/schedule/types/schedule-types.d.ts",
																			"line": 83,
																			"character": 45
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.d.ts",
													"line": 83,
													"character": 36
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 18,
								"name": "ScheduleCommonProps.dateHeaderTemplate"
							}
						},
						{
							"id": 3146,
							"name": "displayDate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Specifies the starting week date at an initial rendering of month view.\nThis property is only applicable for month view.\nIf this property value is not set, then the month view will be rendered from the first week of the month.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 323,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 163,
								"name": "MonthViewProps.displayDate"
							}
						},
						{
							"id": 3141,
							"name": "displayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "When the same view is customized with different intervals, this property allows the user to set different display name\nfor those views. The displayName is used in the view switcher.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 306,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3167,
							"name": "endHour",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The end hour of the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "'24:00'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 34,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 10,
								"name": "ScheduleCommonProps.endHour"
							}
						},
						{
							"id": 3142,
							"name": "eventTemplate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The template for rendering events in this specific view.\nThis is specifically a view-level prop, not at root level.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 313,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "ReactNode"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3143,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 3144,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 3145,
															"name": "props",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reference",
																"id": 268,
																"name": "EventModel"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.d.ts",
													"line": 313,
													"character": 31
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 3172,
							"name": "firstDayOfWeek",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The first day of the week in the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "0\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 64,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 15,
								"name": "ScheduleCommonProps.firstDayOfWeek"
							}
						},
						{
							"id": 3139,
							"name": "interval",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "It accepts the number value denoting to include the number of days, weeks, workweeks or months on the defined view type.",
								"tags": [
									{
										"tag": "default",
										"text": "1\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 292,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3163,
							"name": "maxEventsPerRow",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Maximum number of events to display per row in month view.\nAdditional events will be shown as \"+n more\" text.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 368,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 180,
								"name": "MonthViewProps.maxEventsPerRow"
							}
						},
						{
							"id": 3140,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A unique name identifier for the view.\nUsed to identify and switch between views using currentView.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 299,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3147,
							"name": "numberOfWeeks",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "This property customizes the number of weeks that are shown in month view.\nBy default, it shows all weeks in the current month.\nUse `displayDate` property to customize the starting week of month.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 331,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 164,
								"name": "MonthViewProps.numberOfWeeks"
							}
						},
						{
							"id": 3165,
							"name": "showQuickInfoPopup",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Toggles the visibility of the quick info popup.\nWhen set to false, the popup will not be displayed.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 22,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 8,
								"name": "ScheduleCommonProps.showQuickInfoPopup"
							}
						},
						{
							"id": 3162,
							"name": "showTrailingAndLeadingDates",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Hide the previous and next month dates of a Schedule month view.\nWhen set to true, dates from previous and next months will be shown.\nWhen set to false, only the current month dates will be displayed.\nThis property is only applicable for Month view.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 361,
									"character": 31
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 179,
								"name": "MonthViewProps.showTrailingAndLeadingDates"
							}
						},
						{
							"id": 3174,
							"name": "showWeekNumber",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates whether to show week numbers in the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 76,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 17,
								"name": "ScheduleCommonProps.showWeekNumber"
							}
						},
						{
							"id": 3169,
							"name": "showWeekend",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicates whether to show weekends in the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 46,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 12,
								"name": "ScheduleCommonProps.showWeekend"
							}
						},
						{
							"id": 3166,
							"name": "startHour",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The start hour of the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "'00:00'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 28,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 9,
								"name": "ScheduleCommonProps.startHour"
							}
						},
						{
							"id": 3170,
							"name": "timeFormat",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The time format for the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 52,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 13,
								"name": "ScheduleCommonProps.timeFormat"
							}
						},
						{
							"id": 3171,
							"name": "timeScale",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The time scale configuration for the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "{ enable: true, interval: 60, slotCount: 2 }\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 58,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 252,
								"name": "TimeScaleModel"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 14,
								"name": "ScheduleCommonProps.timeScale"
							}
						},
						{
							"id": 3148,
							"name": "weekDayTemplate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The template for rendering week day in this specific view.\nThis can be at in view level.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 338,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "ReactNode"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3149,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 3150,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 3151,
															"name": "props",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 3152,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {
																		"isExported": true
																	},
																	"children": [
																		{
																			"id": 3153,
																			"name": "day",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.d.ts",
																					"line": 339,
																					"character": 11
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 3154,
																			"name": "type",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExported": true
																			},
																			"sources": [
																				{
																					"fileName": "src/schedule/types/schedule-types.d.ts",
																					"line": 340,
																					"character": 12
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				3153,
																				3154
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "src/schedule/types/schedule-types.d.ts",
																			"line": 338,
																			"character": 42
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/schedule/types/schedule-types.d.ts",
													"line": 338,
													"character": 33
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 165,
								"name": "MonthViewProps.weekDayTemplate"
							}
						},
						{
							"id": 3173,
							"name": "workDays",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The work days of the week in the Schedule component.",
								"tags": [
									{
										"tag": "default",
										"text": "[1, 2, 3, 4, 5]\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 70,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 16,
								"name": "ScheduleCommonProps.workDays"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3164,
								3155,
								3182,
								3168,
								3175,
								3146,
								3141,
								3167,
								3142,
								3172,
								3139,
								3163,
								3140,
								3147,
								3165,
								3162,
								3174,
								3169,
								3166,
								3170,
								3171,
								3148,
								3173
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/types/schedule-types.d.ts",
							"line": 286,
							"character": 34
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 207,
							"name": "MonthViewProps"
						},
						{
							"type": "reference",
							"id": 6,
							"name": "ScheduleCommonProps"
						}
					]
				},
				{
					"id": 3247,
					"name": "WorkHoursModel",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Defines the work hours model for the Schedule component."
					},
					"children": [
						{
							"id": 3250,
							"name": "end",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines the end time of work hours.",
								"tags": [
									{
										"tag": "default",
										"text": "'18:00'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 507,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3248,
							"name": "highlight",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Enables or disables the highlighting of work hours.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 495,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3249,
							"name": "start",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines the start time of work hours.",
								"tags": [
									{
										"tag": "default",
										"text": "'09:00'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/schedule/types/schedule-types.d.ts",
									"line": 501,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3250,
								3248,
								3249
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/types/schedule-types.d.ts",
							"line": 489,
							"character": 31
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						3284,
						3263,
						3123,
						3270,
						3251,
						3280,
						3209,
						3190,
						3274,
						2989,
						3016,
						3235,
						3277,
						3138,
						3247
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/types/schedule-types.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1230,
			"name": "\"schedule/utils/actions\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/utils/actions.ts",
			"children": [
				{
					"id": 1231,
					"name": "clearAndSelect",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"signatures": [
						{
							"id": 1232,
							"name": "clearAndSelect",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 1233,
									"name": "target",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "HTMLElement"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/utils/actions.ts",
							"line": 4,
							"character": 27
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1231
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/utils/actions.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3292,
			"name": "\"schedule/utils/actions.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/utils/actions.d.ts",
			"children": [
				{
					"id": 3293,
					"name": "clearAndSelect",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/schedule/utils/actions.d.ts",
							"line": 1,
							"character": 35
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3294,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3295,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 3296,
											"name": "target",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "HTMLElement"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/utils/actions.d.ts",
									"line": 1,
									"character": 36
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						3293
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/utils/actions.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 309,
			"name": "\"schedule/utils/default-props\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/utils/default-props.ts",
			"children": [
				{
					"id": 310,
					"name": "defaultScheduleProps",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"children": [
						{
							"id": 353,
							"name": "allowDragAndDrop",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/utils/default-props.ts",
									"line": 42,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "true"
							},
							"defaultValue": "true"
						},
						{
							"id": 354,
							"name": "allowMultiDrag",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/utils/default-props.ts",
									"line": 43,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "false"
							},
							"defaultValue": "false"
						},
						{
							"id": 348,
							"name": "allowOverlap",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/utils/default-props.ts",
									"line": 37,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "true"
							},
							"defaultValue": "true"
						},
						{
							"id": 351,
							"name": "calendarMode",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/utils/default-props.ts",
									"line": 40,
									"character": 16
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "Gregorian"
							},
							"defaultValue": "\"Gregorian\""
						},
						{
							"id": 314,
							"name": "currentView",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/utils/default-props.ts",
									"line": 7,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"Week\""
						},
						{
							"id": 342,
							"name": "endHour",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/utils/default-props.ts",
									"line": 31,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"24:00\""
						},
						{
							"id": 344,
							"name": "firstDayOfWeek",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/utils/default-props.ts",
									"line": 33,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0"
						},
						{
							"id": 311,
							"name": "height",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/utils/default-props.ts",
									"line": 4,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"auto\""
						},
						{
							"id": 352,
							"name": "readOnly",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/utils/default-props.ts",
									"line": 41,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "false"
							},
							"defaultValue": "false"
						},
						{
							"id": 350,
							"name": "rowAutoHeight",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/utils/default-props.ts",
									"line": 39,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "false"
							},
							"defaultValue": "false"
						},
						{
							"id": 313,
							"name": "selectedDate",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/utils/default-props.ts",
									"line": 6,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "Date"
							},
							"defaultValue": "new Date()"
						},
						{
							"id": 349,
							"name": "showQuickInfoPopup",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/utils/default-props.ts",
									"line": 38,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "true"
							},
							"defaultValue": "true"
						},
						{
							"id": 346,
							"name": "showTimeIndicator",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/utils/default-props.ts",
									"line": 35,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "true"
							},
							"defaultValue": "true"
						},
						{
							"id": 347,
							"name": "showWeekNumber",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/utils/default-props.ts",
									"line": 36,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "false"
							},
							"defaultValue": "false"
						},
						{
							"id": 343,
							"name": "showWeekend",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/utils/default-props.ts",
									"line": 32,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "true"
							},
							"defaultValue": "true"
						},
						{
							"id": 341,
							"name": "startHour",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/utils/default-props.ts",
									"line": 30,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"00:00\""
						},
						{
							"id": 312,
							"name": "width",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/utils/default-props.ts",
									"line": 5,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"auto\""
						},
						{
							"id": 345,
							"name": "workDays",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/schedule/utils/default-props.ts",
									"line": 34,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							"defaultValue": "[1, 2, 3, 4, 5]"
						},
						{
							"id": 315,
							"name": "eventSettings",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 330,
									"name": "allowAdding",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/schedule/utils/default-props.ts",
											"line": 24,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "true"
									},
									"defaultValue": "true"
								},
								{
									"id": 331,
									"name": "allowDeleting",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/schedule/utils/default-props.ts",
											"line": 25,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "true"
									},
									"defaultValue": "true"
								},
								{
									"id": 332,
									"name": "allowEditing",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/schedule/utils/default-props.ts",
											"line": 26,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "true"
									},
									"defaultValue": "true"
								},
								{
									"id": 316,
									"name": "dataSource",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/schedule/utils/default-props.ts",
											"line": 9,
											"character": 18
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "undefined"
										}
									},
									"defaultValue": "[]"
								},
								{
									"id": 329,
									"name": "enableIndicator",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/schedule/utils/default-props.ts",
											"line": 23,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "false"
									},
									"defaultValue": "false"
								},
								{
									"id": 328,
									"name": "enableMaxHeight",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/schedule/utils/default-props.ts",
											"line": 22,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "false"
									},
									"defaultValue": "false"
								},
								{
									"id": 327,
									"name": "spannedEventPlacement",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/schedule/utils/default-props.ts",
											"line": 21,
											"character": 29
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "AllDayRow"
									},
									"defaultValue": "\"AllDayRow\""
								},
								{
									"id": 317,
									"name": "fields",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 324,
											"name": "description",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/schedule/utils/default-props.ts",
													"line": 17,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"Description\""
										},
										{
											"id": 321,
											"name": "endTime",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/schedule/utils/default-props.ts",
													"line": 14,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"EndTime\""
										},
										{
											"id": 318,
											"name": "id",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/schedule/utils/default-props.ts",
													"line": 11,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"Id\""
										},
										{
											"id": 322,
											"name": "isAllDay",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/schedule/utils/default-props.ts",
													"line": 15,
													"character": 20
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"IsAllDay\""
										},
										{
											"id": 326,
											"name": "isBlock",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/schedule/utils/default-props.ts",
													"line": 19,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"IsBlock\""
										},
										{
											"id": 325,
											"name": "isReadonly",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/schedule/utils/default-props.ts",
													"line": 18,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"IsReadonly\""
										},
										{
											"id": 323,
											"name": "location",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/schedule/utils/default-props.ts",
													"line": 16,
													"character": 20
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"Location\""
										},
										{
											"id": 320,
											"name": "startTime",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/schedule/utils/default-props.ts",
													"line": 13,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"StartTime\""
										},
										{
											"id": 319,
											"name": "subject",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/schedule/utils/default-props.ts",
													"line": 12,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"Subject\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												324,
												321,
												318,
												322,
												326,
												325,
												323,
												320,
												319
											]
										}
									],
									"sources": [
										{
											"fileName": "src/schedule/utils/default-props.ts",
											"line": 10,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										330,
										331,
										332,
										316,
										329,
										328,
										327
									]
								},
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										317
									]
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/utils/default-props.ts",
									"line": 8,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 333,
							"name": "timeScale",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 334,
									"name": "enable",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/schedule/utils/default-props.ts",
											"line": 28,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "true"
									},
									"defaultValue": "true"
								},
								{
									"id": 335,
									"name": "interval",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/schedule/utils/default-props.ts",
											"line": 28,
											"character": 39
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "60"
								},
								{
									"id": 336,
									"name": "slotCount",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/schedule/utils/default-props.ts",
											"line": 28,
											"character": 54
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "2"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										334,
										335,
										336
									]
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/utils/default-props.ts",
									"line": 28,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 337,
							"name": "workHours",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 340,
									"name": "end",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/schedule/utils/default-props.ts",
											"line": 29,
											"character": 53
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"18:00\""
								},
								{
									"id": 338,
									"name": "highlight",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/schedule/utils/default-props.ts",
											"line": 29,
											"character": 26
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "true"
									},
									"defaultValue": "true"
								},
								{
									"id": 339,
									"name": "start",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/schedule/utils/default-props.ts",
											"line": 29,
											"character": 39
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"09:00\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										340,
										338,
										339
									]
								}
							],
							"sources": [
								{
									"fileName": "src/schedule/utils/default-props.ts",
									"line": 29,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								353,
								354,
								348,
								351,
								314,
								342,
								344,
								311,
								352,
								350,
								313,
								349,
								346,
								347,
								343,
								341,
								312,
								345
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								315,
								333,
								337
							]
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/utils/default-props.ts",
							"line": 3,
							"character": 33
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						310
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/utils/default-props.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3297,
			"name": "\"schedule/utils/default-props.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/utils/default-props.d.ts",
			"children": [
				{
					"id": 3298,
					"name": "defaultScheduleProps",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/schedule/utils/default-props.d.ts",
							"line": 2,
							"character": 41
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 33,
								"name": "ScheduleProps"
							}
						],
						"name": "Partial"
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						3298
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/utils/default-props.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 794,
			"name": "\"schedule/utils/merge-utils\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/utils/merge-utils.ts",
			"children": [
				{
					"id": 795,
					"name": "deepMerge",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 796,
							"name": "deepMerge",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Deeply merges two objects, preserving nested properties.\nFor objects, it merges properties recursively.\nFor arrays and other values, it uses the source value if provided, otherwise fallback.",
								"returns": "The merged object\n",
								"tags": [
									{
										"tag": "template",
										"text": "T - The type of the target object"
									}
								]
							},
							"typeParameter": [
								{
									"id": 797,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "PlainObject"
									}
								}
							],
							"parameters": [
								{
									"id": 798,
									"name": "target",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The target object (default values)"
									},
									"type": {
										"type": "typeParameter",
										"name": "T",
										"constraint": {
											"type": "reference",
											"name": "PlainObject"
										}
									}
								},
								{
									"id": 799,
									"name": "source",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The source object (user provided values)"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T",
												"constraint": {
													"type": "reference",
													"name": "PlainObject"
												}
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "T",
								"constraint": {
									"type": "reference",
									"name": "PlainObject"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/utils/merge-utils.ts",
							"line": 33,
							"character": 25
						}
					]
				},
				{
					"id": 800,
					"name": "mergeScheduleProps",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 801,
							"name": "mergeScheduleProps",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Specifically merges ScheduleProps with deep merging for nested objects like eventSettings, workHours, timeScale",
								"returns": "The merged schedule properties with proper type safety\n"
							},
							"parameters": [
								{
									"id": 802,
									"name": "defaultProps",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The default schedule properties"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 33,
												"name": "ScheduleProps"
											}
										],
										"name": "Partial"
									}
								},
								{
									"id": 803,
									"name": "userProps",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The user provided properties"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 33,
												"name": "ScheduleProps"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 33,
										"name": "ScheduleProps"
									}
								],
								"name": "Partial"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/utils/merge-utils.ts",
							"line": 74,
							"character": 34
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						795,
						800
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/utils/merge-utils.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3299,
			"name": "\"schedule/utils/merge-utils.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/utils/merge-utils.d.ts",
			"children": [
				{
					"id": 3300,
					"name": "deepMerge",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 3301,
							"name": "deepMerge",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Deeply merges two objects, preserving nested properties.\nFor objects, it merges properties recursively.\nFor arrays and other values, it uses the source value if provided, otherwise fallback.",
								"returns": "The merged object\n",
								"tags": [
									{
										"tag": "template",
										"text": "T - The type of the target object"
									}
								]
							},
							"typeParameter": [
								{
									"id": 3302,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "PlainObject"
									}
								}
							],
							"parameters": [
								{
									"id": 3303,
									"name": "target",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The target object (default values)"
									},
									"type": {
										"type": "typeParameter",
										"name": "T",
										"constraint": {
											"type": "reference",
											"name": "PlainObject"
										}
									}
								},
								{
									"id": 3304,
									"name": "source",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The source object (user provided values)"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T",
												"constraint": {
													"type": "reference",
													"name": "PlainObject"
												}
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "T",
								"constraint": {
									"type": "reference",
									"name": "PlainObject"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/utils/merge-utils.d.ts",
							"line": 16,
							"character": 33
						}
					]
				},
				{
					"id": 3305,
					"name": "mergeScheduleProps",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 3306,
							"name": "mergeScheduleProps",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Specifically merges ScheduleProps with deep merging for nested objects like eventSettings, workHours, timeScale",
								"returns": "The merged schedule properties with proper type safety\n"
							},
							"parameters": [
								{
									"id": 3307,
									"name": "defaultProps",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The default schedule properties"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 33,
												"name": "ScheduleProps"
											}
										],
										"name": "Partial"
									}
								},
								{
									"id": 3308,
									"name": "userProps",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The user provided properties"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 33,
												"name": "ScheduleProps"
											}
										],
										"name": "Partial"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 33,
										"name": "ScheduleProps"
									}
								],
								"name": "Partial"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/schedule/utils/merge-utils.d.ts",
							"line": 24,
							"character": 42
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						3300,
						3305
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/utils/merge-utils.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3309,
			"name": "\"schedule/views/day-view.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/views/day-view.d.ts",
			"children": [
				{
					"id": 3310,
					"name": "DayView",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/schedule/views/day-view.d.ts",
							"line": 3,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 155,
								"name": "ViewSpecificProps"
							}
						],
						"name": "FC"
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						3310
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/views/day-view.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3311,
			"name": "\"schedule/views/month-view.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/views/month-view.d.ts",
			"children": [
				{
					"id": 3312,
					"name": "MonthView",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/schedule/views/month-view.d.ts",
							"line": 3,
							"character": 30
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 155,
								"name": "ViewSpecificProps"
							}
						],
						"name": "FC"
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						3312
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/views/month-view.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3313,
			"name": "\"schedule/views/vertical-view.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/views/vertical-view.d.ts",
			"children": [
				{
					"id": 3314,
					"name": "VerticalView",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/schedule/views/vertical-view.d.ts",
							"line": 3,
							"character": 33
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 1067,
								"name": "VerticalViewProps"
							}
						],
						"name": "FC"
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						3314
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/views/vertical-view.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3315,
			"name": "\"schedule/views/week-view.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/views/week-view.d.ts",
			"children": [
				{
					"id": 3316,
					"name": "WeekView",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/schedule/views/week-view.d.ts",
							"line": 3,
							"character": 29
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 155,
								"name": "ViewSpecificProps"
							}
						],
						"name": "FC"
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						3316
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/views/week-view.d.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3317,
			"name": "\"schedule/views/work-week-view.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/Schedule/Working/latest/react-schedule-component/src/schedule/views/work-week-view.d.ts",
			"children": [
				{
					"id": 3318,
					"name": "WorkWeekView",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/schedule/views/work-week-view.d.ts",
							"line": 3,
							"character": 33
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 155,
								"name": "ViewSpecificProps"
							}
						],
						"name": "FC"
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						3318
					]
				}
			],
			"sources": [
				{
					"fileName": "src/schedule/views/work-week-view.d.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "External modules",
			"kind": 1,
			"children": [
				1382,
				1363,
				355,
				1538,
				774,
				1540,
				1553,
				1555,
				1557,
				1559,
				1561,
				1563,
				1865,
				1867,
				3319,
				3328,
				1869,
				1871,
				1873,
				1875,
				1877,
				1879,
				1884,
				1893,
				1217,
				1902,
				1143,
				1908,
				898,
				1913,
				1222,
				1926,
				1317,
				1931,
				1278,
				1958,
				1269,
				1998,
				911,
				2007,
				2142,
				2012,
				680,
				2269,
				830,
				2366,
				1226,
				2379,
				1147,
				2384,
				1250,
				2408,
				1257,
				2416,
				1261,
				2421,
				1234,
				2429,
				1344,
				1401,
				1420,
				485,
				2446,
				841,
				2642,
				816,
				2699,
				1175,
				2713,
				804,
				2743,
				1,
				2755,
				914,
				2759,
				5,
				2988,
				1230,
				3292,
				309,
				3297,
				794,
				3299,
				3309,
				3311,
				3313,
				3315,
				3317
			]
		}
	]
}